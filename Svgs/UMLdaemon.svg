<?xml version="1.0"?>
<svg width="144638" height="6266" xmlns="http://www.w3.org/2000/svg" version="1.1">
 <polygon points="4,6263 4,4 144634,4 144634,6263 4,6263" stroke="#ffffff" fill="#ffffff"/>
 <polygon points="1345,4941 1345,4869 1406,4869 1406,4941 1345,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="1345,4893 1406,4893" stroke="#0000ff" fill="none"/>
 <polyline points="1345,4917 1406,4917" stroke="#0000ff" fill="none"/>
 <text x="1353" y="4883" fill="#000000" font-family="Arial" font-size="10">AccelID</text>
 <text x="1353" y="4907" fill="#000000" font-family="Arial" font-size="10">- Vaapi</text>
 <text x="1373" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="1424,4965 1424,4845 1835,4845 1835,4965 1424,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="1424,4869 1835,4869" stroke="#0000ff" fill="none"/>
 <polyline points="1424,4941 1835,4941" stroke="#0000ff" fill="none"/>
 <text x="1603" y="4859" fill="#000000" font-family="Arial" font-size="10">AccelInfo</text>
 <text x="1432" y="4883" fill="#000000" font-family="Arial" font-size="10">+ create: std::unique_ptr (*) (const std::string, const AVPixelFormat)</text>
 <text x="1432" y="4899" fill="#000000" font-family="Arial" font-size="10">+ format: AVPixelFormat</text>
 <text x="1432" y="4915" fill="#000000" font-family="Arial" font-size="10">+ name: std::string</text>
 <text x="1432" y="4931" fill="#000000" font-family="Arial" font-size="10">+ type: AccelID</text>
 <text x="1627" y="4955" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="2435,2297 2435,513 3119,513 3119,2297 2435,2297" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="2435,537 3119,537" stroke="#0000ff" fill="none"/>
 <polyline points="2435,1233 3119,1233" stroke="#0000ff" fill="none"/>
 <text x="2739" y="527" fill="#000000" font-family="Arial" font-size="10">ring::Account</text>
 <text x="2443" y="551" fill="#000000" font-family="Arial" font-size="10">+ VIDEO_CODEC_BITRATE: const char *const= &quot;bitrate&quot;</text>
 <text x="2443" y="567" fill="#000000" font-family="Arial" font-size="10">+ VIDEO_CODEC_ENABLED: const char *const= &quot;enabled&quot;</text>
 <text x="2443" y="583" fill="#000000" font-family="Arial" font-size="10">+ VIDEO_CODEC_NAME: const char *const= &quot;name&quot;</text>
 <text x="2443" y="599" fill="#000000" font-family="Arial" font-size="10">+ VIDEO_CODEC_PARAMETERS: const char *const= &quot;parameters&quot;</text>
 <text x="2443" y="615" fill="#000000" font-family="Arial" font-size="10">+ rand_: mutable std::mt19937_64</text>
 <text x="2443" y="631" fill="#000000" font-family="Arial" font-size="10"># ACCOUNT_ACTIVE_CALL_LIMIT_KEY: const char *const= &quot;activeCallLimit&quot;</text>
 <text x="2443" y="647" fill="#000000" font-family="Arial" font-size="10"># ACCOUNT_AUTOANSWER_KEY: const char *const= &quot;autoAnswer&quot;</text>
 <text x="2443" y="663" fill="#000000" font-family="Arial" font-size="10"># ACCOUNT_ENABLE_KEY: const char *const= &quot;enable&quot;</text>
 <text x="2443" y="679" fill="#000000" font-family="Arial" font-size="10"># ALIAS_KEY: const char *const= &quot;alias&quot;</text>
 <text x="2443" y="695" fill="#000000" font-family="Arial" font-size="10"># ALL_CODECS_KEY: const char *const= &quot;allCodecs&quot;</text>
 <text x="2443" y="711" fill="#000000" font-family="Arial" font-size="10"># AUTHENTICATION_USERNAME_KEY: const char *const= &quot;authenticationUsername&quot;</text>
 <text x="2443" y="727" fill="#000000" font-family="Arial" font-size="10"># DEFAULT_USER_AGENT: const char *const= PACKAGE_NAME&quot;/&quot;PACKAGE_VERSION</text>
 <text x="2443" y="743" fill="#000000" font-family="Arial" font-size="10"># DISPLAY_NAME_KEY: const char *const= &quot;displayName&quot;</text>
 <text x="2443" y="759" fill="#000000" font-family="Arial" font-size="10"># HAS_CUSTOM_USER_AGENT_KEY: const char *const= &quot;hasCustomUserAgent&quot;</text>
 <text x="2443" y="775" fill="#000000" font-family="Arial" font-size="10"># HOSTNAME_KEY: const char *const= &quot;hostname&quot;</text>
 <text x="2443" y="791" fill="#000000" font-family="Arial" font-size="10"># ID_KEY: const char *const= &quot;id&quot;</text>
 <text x="2443" y="807" fill="#000000" font-family="Arial" font-size="10"># MAILBOX_KEY: const char *const= &quot;mailbox&quot;</text>
 <text x="2443" y="823" fill="#000000" font-family="Arial" font-size="10"># PASSWORD_KEY: const char *const= &quot;password&quot;</text>
 <text x="2443" y="839" fill="#000000" font-family="Arial" font-size="10"># PRESENCE_MODULE_ENABLED_KEY: const char *const= &quot;presenceModuleEnabled&quot;</text>
 <text x="2443" y="855" fill="#000000" font-family="Arial" font-size="10"># RINGTONE_ENABLED_KEY: const char *const= &quot;ringtoneEnabled&quot;</text>
 <text x="2443" y="871" fill="#000000" font-family="Arial" font-size="10"># RINGTONE_PATH_KEY: const char *const= &quot;ringtonePath&quot;</text>
 <text x="2443" y="887" fill="#000000" font-family="Arial" font-size="10"># TYPE_KEY: const char *const= &quot;type&quot;</text>
 <text x="2443" y="903" fill="#000000" font-family="Arial" font-size="10"># UPNP_ENABLED_KEY: const char *const= &quot;upnpEnabled&quot;</text>
 <text x="2443" y="919" fill="#000000" font-family="Arial" font-size="10"># USERNAME_KEY: const char *const= &quot;username&quot;</text>
 <text x="2443" y="935" fill="#000000" font-family="Arial" font-size="10"># USER_AGENT_KEY: const char *const= &quot;useragent&quot;</text>
 <text x="2443" y="951" fill="#000000" font-family="Arial" font-size="10"># VIDEO_ENABLED_KEY: const char *const= &quot;videoEnabled&quot;</text>
 <text x="2443" y="967" fill="#000000" font-family="Arial" font-size="10"># accountID_: const std::string</text>
 <text x="2443" y="983" fill="#000000" font-family="Arial" font-size="10"># alias_: std::string</text>
 <text x="2443" y="999" fill="#000000" font-family="Arial" font-size="10"># autoAnswerEnabled_: bool</text>
 <text x="2443" y="1015" fill="#000000" font-family="Arial" font-size="10"># displayName_: std::string</text>
 <text x="2443" y="1031" fill="#000000" font-family="Arial" font-size="10"># enabled_: bool</text>
 <text x="2443" y="1047" fill="#000000" font-family="Arial" font-size="10"># hasCustomUserAgent_: bool</text>
 <text x="2443" y="1063" fill="#000000" font-family="Arial" font-size="10"># hostname_: std::string</text>
 <text x="2443" y="1079" fill="#000000" font-family="Arial" font-size="10"># mailBox_: std::string</text>
 <text x="2443" y="1095" fill="#000000" font-family="Arial" font-size="10"># registrationState_: RegistrationState</text>
 <text x="2443" y="1111" fill="#000000" font-family="Arial" font-size="10"># ringtoneEnabled_: bool</text>
 <text x="2443" y="1127" fill="#000000" font-family="Arial" font-size="10"># ringtonePath_: std::string</text>
 <text x="2443" y="1143" fill="#000000" font-family="Arial" font-size="10"># systemCodecContainer_: std::shared_ptr</text>
 <text x="2443" y="1159" fill="#000000" font-family="Arial" font-size="10"># upnp_: std::unique_ptr</text>
 <text x="2443" y="1175" fill="#000000" font-family="Arial" font-size="10"># userAgent_: std::string</text>
 <text x="2443" y="1191" fill="#000000" font-family="Arial" font-size="10"># username_: std::string</text>
 <text x="2443" y="1207" fill="#000000" font-family="Arial" font-size="10"># videoEnabled_: bool</text>
 <text x="2443" y="1223" fill="#000000" font-family="Arial" font-size="10">- callIDSet_: std::set</text>
 <text x="2443" y="1247" fill="#000000" font-family="Arial" font-size="10">+ connectivityChanged () void Virtual</text>
 <text x="2443" y="1263" fill="#000000" font-family="Arial" font-size="10">+ flush () void Virtual</text>
 <text x="2443" y="1279" fill="#000000" font-family="Arial" font-size="10">+ sendTextMessage (to: const std::string &amp; , payloads: const std::map &amp; ) uint64_t Virtual</text>
 <text x="2443" y="1295" fill="#000000" font-family="Arial" font-size="10">+ serialize (out: YAML::Emitter &amp; ) void Virtual</text>
 <text x="2443" y="1311" fill="#000000" font-family="Arial" font-size="10">+ setAccountDetails (details: const std::map &amp; ) void Virtual</text>
 <text x="2443" y="1327" fill="#000000" font-family="Arial" font-size="10">+ setRegistrationState (state: RegistrationState , detail_code: unsigned , detail_str: const std::string &amp; ) void Virtual</text>
 <text x="2443" y="1343" fill="#000000" font-family="Arial" font-size="10">+ unserialize (node: const YAML::Node &amp; ) void Virtual</text>
 <text x="2443" y="1359" fill="#000000" font-family="Arial" font-size="10">+ ~Account () Virtual</text>
 <text x="2443" y="1375" fill="#000000" font-family="Arial" font-size="10">+ getAccountDetails () std::map Virtual</text>
 <text x="2443" y="1391" fill="#000000" font-family="Arial" font-size="10">+ getIceOptions () const IceTransportOptions Virtual</text>
 <text x="2443" y="1407" fill="#000000" font-family="Arial" font-size="10">+ getMessageStatus (__attribute__: uint64_t id (*) () ) im::MessageStatus Virtual</text>
 <text x="2443" y="1423" fill="#000000" font-family="Arial" font-size="10">+ getVolatileAccountDetails () std::map Virtual</text>
 <text x="2443" y="1439" fill="#000000" font-family="Arial" font-size="10">+ isIP2IP () bool Virtual</text>
 <text x="2443" y="1455" fill="#000000" font-family="Arial" font-size="10">+ getDefaultCodecDetails (codecId: const unsigned &amp; ) std::map</text>
 <text x="2443" y="1471" fill="#000000" font-family="Arial" font-size="10">+ getDefaultCodecsId () std::vector</text>
 <text x="2443" y="1487" fill="#000000" font-family="Arial" font-size="10">+ doRegister () void Pure Virtual</text>
 <text x="2443" y="1503" fill="#000000" font-family="Arial" font-size="10">+ doUnregister (cb: std::function ) void Pure Virtual</text>
 <text x="2443" y="1519" fill="#000000" font-family="Arial" font-size="10">+ loadConfig () void Pure Virtual</text>
 <text x="2443" y="1535" fill="#000000" font-family="Arial" font-size="10">+ newOutgoingCall (toUrl: const std::string &amp; ) std::shared_ptr Pure Virtual</text>
 <text x="2443" y="1551" fill="#000000" font-family="Arial" font-size="10">+ getAccountType () const char * Pure Virtual</text>
 <text x="2443" y="1567" fill="#000000" font-family="Arial" font-size="10">+ Account (accountID: const std::string &amp; ) </text>
 <text x="2443" y="1583" fill="#000000" font-family="Arial" font-size="10">+ Account () </text>
 <text x="2443" y="1599" fill="#000000" font-family="Arial" font-size="10">+ attachCall (id: const std::string &amp; ) void</text>
 <text x="2443" y="1615" fill="#000000" font-family="Arial" font-size="10">+ detachCall (id: const std::string &amp; ) void</text>
 <text x="2443" y="1631" fill="#000000" font-family="Arial" font-size="10">+ freeAccount () void</text>
 <text x="2443" y="1647" fill="#000000" font-family="Arial" font-size="10">+ operator= () Account &amp;</text>
 <text x="2443" y="1663" fill="#000000" font-family="Arial" font-size="10">+ searchCodecById (codecId: unsigned , mediaType: MediaType ) std::shared_ptr</text>
 <text x="2443" y="1679" fill="#000000" font-family="Arial" font-size="10">+ searchCodecByPayload (payload: unsigned , mediaType: MediaType ) std::shared_ptr</text>
 <text x="2443" y="1695" fill="#000000" font-family="Arial" font-size="10">+ setActive (active: bool ) void</text>
 <text x="2443" y="1711" fill="#000000" font-family="Arial" font-size="10">+ setActiveCodecs (list: const std::vector &amp; ) void</text>
 <text x="2443" y="1727" fill="#000000" font-family="Arial" font-size="10">+ setAlias (alias: const std::string &amp; ) void</text>
 <text x="2443" y="1743" fill="#000000" font-family="Arial" font-size="10">+ setDisplayName (name: const std::string &amp; ) void</text>
 <text x="2443" y="1759" fill="#000000" font-family="Arial" font-size="10">+ setEnabled (enable: bool ) void</text>
 <text x="2443" y="1775" fill="#000000" font-family="Arial" font-size="10">+ setHostname (hostname: const std::string &amp; ) void</text>
 <text x="2443" y="1791" fill="#000000" font-family="Arial" font-size="10">+ setMailBox (mb: const std::string &amp; ) void</text>
 <text x="2443" y="1807" fill="#000000" font-family="Arial" font-size="10">+ setRingtoneEnabled (enable: bool ) void</text>
 <text x="2443" y="1823" fill="#000000" font-family="Arial" font-size="10">+ setRingtonePath (path: const std::string &amp; ) void</text>
 <text x="2443" y="1839" fill="#000000" font-family="Arial" font-size="10">+ getAccountID () const std::string &amp;</text>
 <text x="2443" y="1855" fill="#000000" font-family="Arial" font-size="10">+ getActiveCodecs (mediaType: MediaType ) std::vector</text>
 <text x="2443" y="1871" fill="#000000" font-family="Arial" font-size="10">+ getAlias () std::string</text>
 <text x="2443" y="1887" fill="#000000" font-family="Arial" font-size="10">+ getDisplayName () std::string</text>
 <text x="2443" y="1903" fill="#000000" font-family="Arial" font-size="10">+ getHostname () std::string</text>
 <text x="2443" y="1919" fill="#000000" font-family="Arial" font-size="10">+ getMailBox () std::string</text>
 <text x="2443" y="1935" fill="#000000" font-family="Arial" font-size="10">+ getRegistrationState () RegistrationState</text>
 <text x="2443" y="1951" fill="#000000" font-family="Arial" font-size="10">+ getRingtoneEnabled () bool</text>
 <text x="2443" y="1967" fill="#000000" font-family="Arial" font-size="10">+ getRingtonePath () std::string</text>
 <text x="2443" y="1983" fill="#000000" font-family="Arial" font-size="10">+ getUPnPActive (timeout: std::chrono::seconds ) bool</text>
 <text x="2443" y="1999" fill="#000000" font-family="Arial" font-size="10">+ getUPnPIpAddress () IpAddr</text>
 <text x="2443" y="2015" fill="#000000" font-family="Arial" font-size="10">+ getUsername () std::string</text>
 <text x="2443" y="2031" fill="#000000" font-family="Arial" font-size="10">+ hasActiveCodec (mediaType: MediaType ) bool</text>
 <text x="2443" y="2047" fill="#000000" font-family="Arial" font-size="10">+ isActive () bool</text>
 <text x="2443" y="2063" fill="#000000" font-family="Arial" font-size="10">+ isEnabled () bool</text>
 <text x="2443" y="2079" fill="#000000" font-family="Arial" font-size="10">+ isUsable () bool</text>
 <text x="2443" y="2095" fill="#000000" font-family="Arial" font-size="10">+ isVideoEnabled () bool</text>
 <text x="2443" y="2111" fill="#000000" font-family="Arial" font-size="10"># parseInt (details: const std::map &amp; , key: const char *, i: T &amp; ) void</text>
 <text x="2443" y="2127" fill="#000000" font-family="Arial" font-size="10"># mapStateNumberToString (state: RegistrationState ) std::string</text>
 <text x="2443" y="2143" fill="#000000" font-family="Arial" font-size="10"># parseBool (details: const std::map &amp; , key: const char *, b: bool &amp; ) void</text>
 <text x="2443" y="2159" fill="#000000" font-family="Arial" font-size="10"># parseString (details: const std::map &amp; , key: const char *, s: std::string &amp; ) void</text>
 <text x="2443" y="2175" fill="#000000" font-family="Arial" font-size="10"># activeCallLimit_ () int</text>
 <text x="2443" y="2191" fill="#000000" font-family="Arial" font-size="10"># active_ () bool</text>
 <text x="2443" y="2207" fill="#000000" font-family="Arial" font-size="10"># searchCodecByName (name: std::string , mediaType: MediaType ) std::shared_ptr</text>
 <text x="2443" y="2223" fill="#000000" font-family="Arial" font-size="10"># setAllCodecsActive (mediaType: MediaType , active: bool ) void</text>
 <text x="2443" y="2239" fill="#000000" font-family="Arial" font-size="10"># upnpEnabled_ () std::atomic_bool</text>
 <text x="2443" y="2255" fill="#000000" font-family="Arial" font-size="10"># upnp_mtx () mutable std::mutex</text>
 <text x="2443" y="2271" fill="#000000" font-family="Arial" font-size="10"># getAccountCodecInfoIdList (mediaType: MediaType ) std::vector</text>
 <text x="2443" y="2287" fill="#000000" font-family="Arial" font-size="10">- loadDefaultCodecs () void</text>
 <polygon points="1240,371 1240,267 1602,267 1602,371 1240,371" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="1240,291 1602,291" stroke="#0000ff" fill="none"/>
 <polyline points="1240,315 1602,315" stroke="#0000ff" fill="none"/>
 <text x="1373" y="281" fill="#000000" font-family="Arial" font-size="10">ring::Serializable</text>
 <text x="1419" y="305" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="1248" y="329" fill="#000000" font-family="Arial" font-size="10">+ ~Serializable () Virtual</text>
 <text x="1248" y="345" fill="#000000" font-family="Arial" font-size="10">+ serialize (out: YAML::Emitter &amp; ) void Pure Virtual</text>
 <text x="1248" y="361" fill="#000000" font-family="Arial" font-size="10">+ unserialize (node: const YAML::Node &amp; ) void Pure Virtual</text>
 <polyline points="2435,519 2434,518 2433,518 2432,517 2431,516 2431,516 2430,515 2429,514 2428,513 2427,513 2426,512 2381,483 2319,457 2245,434 2161,413 2070,394 1974,378 1878,364 1783,353 1694,343 1612,335" stroke="#CC0044" fill="none"/>
 <polygon points="1612,338 1602,334 1612,331 1612,338" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="3004,355 3004,283 3164,283 3164,355 3004,355" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="3004,307 3164,307" stroke="#0000ff" fill="none"/>
 <polyline points="3004,331 3164,331" stroke="#0000ff" fill="none"/>
 <text x="3012" y="297" fill="#000000" font-family="Arial" font-size="10">enable_shared_from_this</text>
 <text x="3082" y="321" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="3082" y="345" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="3029,513 3034,495 3039,477 3044,460 3049,444 3053,429 3058,414 3061,400 3065,387 3068,376 3071,365" stroke="#CC0044" fill="none"/>
 <polygon points="3068,364 3074,355 3075,366 3068,364" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="2429,3511 2429,2335 3126,2335 3126,3511 2429,3511" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="2429,2359 3126,2359" stroke="#0000ff" fill="none"/>
 <polyline points="2429,2559 3126,2559" stroke="#0000ff" fill="none"/>
 <text x="2714" y="2349" fill="#000000" font-family="Arial" font-size="10">ring::SIPAccountBase</text>
 <text x="2437" y="2373" fill="#000000" font-family="Arial" font-size="10">+ OVERRTP_STR: constexpr const char *const= &quot;overrtp&quot;</text>
 <text x="2437" y="2389" fill="#000000" font-family="Arial" font-size="10">+ SIPINFO_STR: constexpr const char *const= &quot;sipinfo&quot;</text>
 <text x="2437" y="2405" fill="#000000" font-family="Arial" font-size="10"># link_: std::shared_ptr</text>
 <text x="2437" y="2421" fill="#000000" font-family="Arial" font-size="10"># messageEngine_: im::MessageEngine</text>
 <text x="2437" y="2437" fill="#000000" font-family="Arial" font-size="10"># tlsCaListFile_: std::string</text>
 <text x="2437" y="2453" fill="#000000" font-family="Arial" font-size="10"># tlsCertificateFile_: std::string</text>
 <text x="2437" y="2469" fill="#000000" font-family="Arial" font-size="10"># tlsPassword_: std::string</text>
 <text x="2437" y="2485" fill="#000000" font-family="Arial" font-size="10"># tlsPrivateKeyFile_: std::string</text>
 <text x="2437" y="2501" fill="#000000" font-family="Arial" font-size="10"># turnServerPwd_: std::string</text>
 <text x="2437" y="2517" fill="#000000" font-family="Arial" font-size="10"># turnServerRealm_: std::string</text>
 <text x="2437" y="2533" fill="#000000" font-family="Arial" font-size="10"># turnServerUserName_: std::string</text>
 <text x="2437" y="2549" fill="#000000" font-family="Arial" font-size="10"># turnServer_: std::string</text>
 <text x="2437" y="2573" fill="#000000" font-family="Arial" font-size="10">+ connectivityChanged () void Virtual</text>
 <text x="2437" y="2589" fill="#000000" font-family="Arial" font-size="10">+ flush () void Virtual</text>
 <text x="2437" y="2605" fill="#000000" font-family="Arial" font-size="10">+ sendTextMessage (to: const std::string &amp; , payloads: const std::map &amp; ) uint64_t Virtual</text>
 <text x="2437" y="2621" fill="#000000" font-family="Arial" font-size="10">+ ~SIPAccountBase () Virtual</text>
 <text x="2437" y="2637" fill="#000000" font-family="Arial" font-size="10">+ getDtmfType () std::string Virtual</text>
 <text x="2437" y="2653" fill="#000000" font-family="Arial" font-size="10">+ getIceOptions () const IceTransportOptions Virtual</text>
 <text x="2437" y="2669" fill="#000000" font-family="Arial" font-size="10">+ getMessageStatus (id: uint64_t ) im::MessageStatus Virtual</text>
 <text x="2437" y="2685" fill="#000000" font-family="Arial" font-size="10">+ getStunPort () pj_uint16_t Virtual</text>
 <text x="2437" y="2701" fill="#000000" font-family="Arial" font-size="10">+ getStunServerName () pj_str_t Virtual</text>
 <text x="2437" y="2717" fill="#000000" font-family="Arial" font-size="10">+ isStunEnabled () bool Virtual</text>
 <text x="2437" y="2733" fill="#000000" font-family="Arial" font-size="10">+ isTlsEnabled () bool Virtual</text>
 <text x="2437" y="2749" fill="#000000" font-family="Arial" font-size="10">+ HALF_MAX_PORT () constexpr unsigned</text>
 <text x="2437" y="2765" fill="#000000" font-family="Arial" font-size="10">+ MAX_PORT () constexpr unsigned</text>
 <text x="2437" y="2781" fill="#000000" font-family="Arial" font-size="10">+ releasePort (port: uint16_t ) void</text>
 <text x="2437" y="2797" fill="#000000" font-family="Arial" font-size="10">+ getContactHeader (pjsip_transport *) pj_str_t Pure Virtual</text>
 <text x="2437" y="2813" fill="#000000" font-family="Arial" font-size="10">+ newIncomingCall (from: const std::string &amp; ) std::shared_ptr Pure Virtual</text>
 <text x="2437" y="2829" fill="#000000" font-family="Arial" font-size="10">+ sendTextMessage (to: const std::string &amp; , payloads: const std::map &amp; , id: uint64_t ) void Pure Virtual</text>
 <text x="2437" y="2845" fill="#000000" font-family="Arial" font-size="10">+ getSrtpFallback () bool Pure Virtual</text>
 <text x="2437" y="2861" fill="#000000" font-family="Arial" font-size="10">+ getSrtpKeyExchange () sip_utils::KeyExchangeProtocol Pure Virtual</text>
 <text x="2437" y="2877" fill="#000000" font-family="Arial" font-size="10">+ getToUri (username: const std::string &amp; ) std::string Pure Virtual</text>
 <text x="2437" y="2893" fill="#000000" font-family="Arial" font-size="10">+ matches (username: const std::string &amp; , hostname: const std::string &amp; ) MatchRank Pure Virtual</text>
 <text x="2437" y="2909" fill="#000000" font-family="Arial" font-size="10">+ SIPAccountBase (accountID: const std::string &amp; ) </text>
 <text x="2437" y="2925" fill="#000000" font-family="Arial" font-size="10">+ SIPAccountBase () </text>
 <text x="2437" y="2941" fill="#000000" font-family="Arial" font-size="10">+ getPortsReservation () auto</text>
 <text x="2437" y="2957" fill="#000000" font-family="Arial" font-size="10">+ onTextMessage (from: const std::string &amp; , payloads: const std::map &amp; ) void</text>
 <text x="2437" y="2973" fill="#000000" font-family="Arial" font-size="10">+ operator= () SIPAccountBase &amp;</text>
 <text x="2437" y="2989" fill="#000000" font-family="Arial" font-size="10">+ setPublishedAddress (ip_addr: const IpAddr &amp; ) void</text>
 <text x="2437" y="3005" fill="#000000" font-family="Arial" font-size="10">+ setPublishedPort (port: pj_uint16_t ) void</text>
 <text x="2437" y="3021" fill="#000000" font-family="Arial" font-size="10">+ setStunServer (srv: const std::string &amp; ) void</text>
 <text x="2437" y="3037" fill="#000000" font-family="Arial" font-size="10">+ generateAudioPort () uint16_t</text>
 <text x="2437" y="3053" fill="#000000" font-family="Arial" font-size="10">+ getLocalInterface () const std::string &amp;</text>
 <text x="2437" y="3069" fill="#000000" font-family="Arial" font-size="10">+ getPublishedAddress () std::string</text>
 <text x="2437" y="3085" fill="#000000" font-family="Arial" font-size="10">+ getPublishedIpAddress () IpAddr</text>
 <text x="2437" y="3101" fill="#000000" font-family="Arial" font-size="10">+ getPublishedPort () pj_uint16_t</text>
 <text x="2437" y="3117" fill="#000000" font-family="Arial" font-size="10">+ getPublishedSameasLocal () bool</text>
 <text x="2437" y="3133" fill="#000000" font-family="Arial" font-size="10">+ getStunServer () std::string</text>
 <text x="2437" y="3149" fill="#000000" font-family="Arial" font-size="10"># serialize (out: YAML::Emitter &amp; ) void Virtual</text>
 <text x="2437" y="3165" fill="#000000" font-family="Arial" font-size="10"># serializeTls (out: YAML::Emitter &amp; ) void Virtual</text>
 <text x="2437" y="3181" fill="#000000" font-family="Arial" font-size="10"># setAccountDetails (details: const std::map &amp; ) void Virtual</text>
 <text x="2437" y="3197" fill="#000000" font-family="Arial" font-size="10"># setRegistrationState (state: RegistrationState , details_code: unsigned , details_str: const std::string &amp; ) void Virtual</text>
 <text x="2437" y="3213" fill="#000000" font-family="Arial" font-size="10"># unserialize (node: const YAML::Node &amp; ) void Virtual</text>
 <text x="2437" y="3229" fill="#000000" font-family="Arial" font-size="10"># getAccountDetails () std::map Virtual</text>
 <text x="2437" y="3245" fill="#000000" font-family="Arial" font-size="10"># getVolatileAccountDetails () std::map Virtual</text>
 <text x="2437" y="3261" fill="#000000" font-family="Arial" font-size="10"># acquirePort (port: uint16_t ) uint16_t</text>
 <text x="2437" y="3277" fill="#000000" font-family="Arial" font-size="10"># audioPortRange_ () std::pair</text>
 <text x="2437" y="3293" fill="#000000" font-family="Arial" font-size="10"># dtmfType_ () std::string</text>
 <text x="2437" y="3309" fill="#000000" font-family="Arial" font-size="10"># interface_ () std::string</text>
 <text x="2437" y="3325" fill="#000000" font-family="Arial" font-size="10"># publishedIpAddress_ () std::string</text>
 <text x="2437" y="3341" fill="#000000" font-family="Arial" font-size="10"># publishedIp_ () IpAddr</text>
 <text x="2437" y="3357" fill="#000000" font-family="Arial" font-size="10"># publishedPort_ () pj_uint16_t</text>
 <text x="2437" y="3373" fill="#000000" font-family="Arial" font-size="10"># publishedSameasLocal_ () bool</text>
 <text x="2437" y="3389" fill="#000000" font-family="Arial" font-size="10"># stunEnabled_ () bool</text>
 <text x="2437" y="3405" fill="#000000" font-family="Arial" font-size="10"># stunServer_ () std::string</text>
 <text x="2437" y="3421" fill="#000000" font-family="Arial" font-size="10"># transportError_ () std::string</text>
 <text x="2437" y="3437" fill="#000000" font-family="Arial" font-size="10"># transportStatus_ () pj_status_t</text>
 <text x="2437" y="3453" fill="#000000" font-family="Arial" font-size="10"># turnEnabled_ () bool</text>
 <text x="2437" y="3469" fill="#000000" font-family="Arial" font-size="10"># videoPortRange_ () std::pair</text>
 <text x="2437" y="3485" fill="#000000" font-family="Arial" font-size="10"># acquireRandomEvenPort (range: const std::pair &amp; ) uint16_t</text>
 <text x="2437" y="3501" fill="#000000" font-family="Arial" font-size="10"># getRandomEvenPort (range: const std::pair &amp; ) uint16_t</text>
 <polyline points="2777,2335 2777,2332 2777,2329 2777,2327 2777,2324 2777,2321 2777,2318 2777,2315 2777,2313 2777,2310 2777,2307" stroke="#CC0044" fill="none"/>
 <polygon points="2774,2307 2777,2297 2781,2307 2774,2307" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="1853,6189 1853,3621 2595,3621 2595,6189 1853,6189" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="1853,3645 2595,3645" stroke="#0000ff" fill="none"/>
 <polyline points="1853,3989 2595,3989" stroke="#0000ff" fill="none"/>
 <text x="2173" y="3635" fill="#000000" font-family="Arial" font-size="10">ring::RingAccount</text>
 <text x="1861" y="3659" fill="#000000" font-family="Arial" font-size="10">+ ACCOUNT_TYPE: constexpr const char *const= &quot;RING&quot;</text>
 <text x="1861" y="3675" fill="#000000" font-family="Arial" font-size="10">+ DHT_DEFAULT_BOOTSTRAP: constexpr const char *const= &quot;bootstrap.ring.cx&quot;</text>
 <text x="1861" y="3691" fill="#000000" font-family="Arial" font-size="10">+ DHT_DEFAULT_PORT: constexpr const in_port_t= 4222</text>
 <text x="1861" y="3707" fill="#000000" font-family="Arial" font-size="10">+ DHT_PORT_RANGE: const std::pair</text>
 <text x="1861" y="3723" fill="#000000" font-family="Arial" font-size="10">+ DHT_TYPE_NS: constexpr const char *const= &quot;cx.ring&quot;</text>
 <text x="1861" y="3739" fill="#000000" font-family="Arial" font-size="10">- USER_PROFILE_TYPE: const dht::ValueType= {...}</text>
 <text x="1861" y="3755" fill="#000000" font-family="Arial" font-size="10">- announceVal_: dht::Value</text>
 <text x="1861" y="3771" fill="#000000" font-family="Arial" font-size="10">- announce_: std::shared_ptr</text>
 <text x="1861" y="3787" fill="#000000" font-family="Arial" font-size="10">- buddyInfoMtx: std::recursive_mutex</text>
 <text x="1861" y="3803" fill="#000000" font-family="Arial" font-size="10">- callKey_: dht::InfoHash</text>
 <text x="1861" y="3819" fill="#000000" font-family="Arial" font-size="10">- contacts_: std::map</text>
 <text x="1861" y="3835" fill="#000000" font-family="Arial" font-size="10">- dhParamsCv_: std::condition_variable</text>
 <text x="1861" y="3851" fill="#000000" font-family="Arial" font-size="10">- dhParamsMtx_: std::mutex</text>
 <text x="1861" y="3867" fill="#000000" font-family="Arial" font-size="10">- dhParams_: std::shared_future</text>
 <text x="1861" y="3883" fill="#000000" font-family="Arial" font-size="10">- knownDevices_: std::map</text>
 <text x="1861" y="3899" fill="#000000" font-family="Arial" font-size="10">- pendingCalls_: std::list</text>
 <text x="1861" y="3915" fill="#000000" font-family="Arial" font-size="10">- pendingSipCalls_: std::list</text>
 <text x="1861" y="3931" fill="#000000" font-family="Arial" font-size="10">- sentMessages_: std::map</text>
 <text x="1861" y="3947" fill="#000000" font-family="Arial" font-size="10">- trackedBuddies_: std::map</text>
 <text x="1861" y="3963" fill="#000000" font-family="Arial" font-size="10">- trustRequests_: std::map</text>
 <text x="1861" y="3979" fill="#000000" font-family="Arial" font-size="10">- trust_: tls::TrustStore</text>
 <text x="1861" y="4003" fill="#000000" font-family="Arial" font-size="10">+ connectivityChanged () void Virtual</text>
 <text x="1861" y="4019" fill="#000000" font-family="Arial" font-size="10">+ doRegister () void Virtual</text>
 <text x="1861" y="4035" fill="#000000" font-family="Arial" font-size="10">+ doUnregister (cb: std::function ) void Virtual</text>
 <text x="1861" y="4051" fill="#000000" font-family="Arial" font-size="10">+ flush () void Virtual</text>
 <text x="1861" y="4067" fill="#000000" font-family="Arial" font-size="10">+ getContactHeader (pjsip_transport *) pj_str_t Virtual</text>
 <text x="1861" y="4083" fill="#000000" font-family="Arial" font-size="10">+ loadConfig () void Virtual</text>
 <text x="1861" y="4099" fill="#000000" font-family="Arial" font-size="10">+ newIncomingCall (from: const std::string &amp; ) std::shared_ptr Virtual</text>
 <text x="1861" y="4115" fill="#000000" font-family="Arial" font-size="10">+ newOutgoingCall (toUrl: const std::string &amp; ) std::shared_ptr Virtual</text>
 <text x="1861" y="4131" fill="#000000" font-family="Arial" font-size="10">+ sendTextMessage (to: const std::string &amp; , payloads: const std::map &amp; , id: uint64_t ) void Virtual</text>
 <text x="1861" y="4147" fill="#000000" font-family="Arial" font-size="10">+ serialize (out: YAML::Emitter &amp; ) void Virtual</text>
 <text x="1861" y="4163" fill="#000000" font-family="Arial" font-size="10">+ unserialize (node: const YAML::Node &amp; ) void Virtual</text>
 <text x="1861" y="4179" fill="#000000" font-family="Arial" font-size="10">+ ~RingAccount () Virtual</text>
 <text x="1861" y="4195" fill="#000000" font-family="Arial" font-size="10">+ getAccountDetails () std::map Virtual</text>
 <text x="1861" y="4211" fill="#000000" font-family="Arial" font-size="10">+ getAccountType () const char * Virtual</text>
 <text x="1861" y="4227" fill="#000000" font-family="Arial" font-size="10">+ getSrtpFallback () bool Virtual</text>
 <text x="1861" y="4243" fill="#000000" font-family="Arial" font-size="10">+ getSrtpKeyExchange () sip_utils::KeyExchangeProtocol Virtual</text>
 <text x="1861" y="4259" fill="#000000" font-family="Arial" font-size="10">+ getToUri (username: const std::string &amp; ) std::string Virtual</text>
 <text x="1861" y="4275" fill="#000000" font-family="Arial" font-size="10">+ getVolatileAccountDetails () std::map Virtual</text>
 <text x="1861" y="4291" fill="#000000" font-family="Arial" font-size="10">+ isSrtpEnabled () bool Virtual</text>
 <text x="1861" y="4307" fill="#000000" font-family="Arial" font-size="10">+ isTlsEnabled () bool Virtual</text>
 <text x="1861" y="4323" fill="#000000" font-family="Arial" font-size="10">+ matches (username: const std::string &amp; , hostname: const std::string &amp; ) MatchRank Virtual</text>
 <text x="1861" y="4339" fill="#000000" font-family="Arial" font-size="10">+ DHT_PORT_RANGE () const std::pair</text>
 <text x="1861" y="4355" fill="#000000" font-family="Arial" font-size="10">+ newOutgoingCall (toUrl: const std::string &amp; ) std::shared_ptr</text>
 <text x="1861" y="4371" fill="#000000" font-family="Arial" font-size="10">+ RingAccount (accountID: const std::string &amp; , bool) </text>
 <text x="1861" y="4387" fill="#000000" font-family="Arial" font-size="10">+ RingAccount () </text>
 <text x="1861" y="4403" fill="#000000" font-family="Arial" font-size="10">+ acceptTrustRequest (from: const std::string &amp; ) bool</text>
 <text x="1861" y="4419" fill="#000000" font-family="Arial" font-size="10">+ addContact (uri: const std::string &amp; , confirmed: bool ) void</text>
 <text x="1861" y="4435" fill="#000000" font-family="Arial" font-size="10">+ addDevice (password: const std::string &amp; ) void</text>
 <text x="1861" y="4451" fill="#000000" font-family="Arial" font-size="10">+ discardTrustRequest (from: const std::string &amp; ) bool</text>
 <text x="1861" y="4467" fill="#000000" font-family="Arial" font-size="10">+ findCertificate (id: const std::string &amp; ) bool</text>
 <text x="1861" y="4483" fill="#000000" font-family="Arial" font-size="10">+ findCertificate (h: const dht::InfoHash &amp; , std::function) bool</text>
 <text x="1861" y="4499" fill="#000000" font-family="Arial" font-size="10">+ getCertificatesByStatus (status: tls::TrustStore::PermissionStatus ) std::vector</text>
 <text x="1861" y="4515" fill="#000000" font-family="Arial" font-size="10">+ getTrackedBuddyPresence () std::map</text>
 <text x="1861" y="4531" fill="#000000" font-family="Arial" font-size="10">+ getViaAddr () pjsip_host_port *</text>
 <text x="1861" y="4547" fill="#000000" font-family="Arial" font-size="10">+ operator= () RingAccount &amp;</text>
 <text x="1861" y="4563" fill="#000000" font-family="Arial" font-size="10">+ removeContact (uri: const std::string &amp; ) void</text>
 <text x="1861" y="4579" fill="#000000" font-family="Arial" font-size="10">+ revokeDevice (password: const std::string &amp; , device: const std::string &amp; ) bool</text>
 <text x="1861" y="4595" fill="#000000" font-family="Arial" font-size="10">+ sendTrustRequest (to: const std::string &amp; , payload: const std::vector &amp; ) void</text>
 <text x="1861" y="4611" fill="#000000" font-family="Arial" font-size="10">+ sendTrustRequestConfirm (to: const dht::InfoHash &amp; ) void</text>
 <text x="1861" y="4627" fill="#000000" font-family="Arial" font-size="10">+ setCertificateStatus (cert_id: const std::string &amp; , status: tls::TrustStore::PermissionStatus ) bool</text>
 <text x="1861" y="4643" fill="#000000" font-family="Arial" font-size="10">+ setCertificateStatus (cert_id: const std::string &amp; , status: tls::TrustStatus ) bool</text>
 <text x="1861" y="4659" fill="#000000" font-family="Arial" font-size="10">+ setReceivedParameter (received: const std::string &amp; ) void</text>
 <text x="1861" y="4675" fill="#000000" font-family="Arial" font-size="10">+ shared () std::shared_ptr</text>
 <text x="1861" y="4691" fill="#000000" font-family="Arial" font-size="10">+ trackBuddyPresence (buddy_id: const std::string &amp; ) void</text>
 <text x="1861" y="4707" fill="#000000" font-family="Arial" font-size="10">+ getFromUri () std::string</text>
 <text x="1861" y="4723" fill="#000000" font-family="Arial" font-size="10">+ getKnownDevices () std::map</text>
 <text x="1861" y="4739" fill="#000000" font-family="Arial" font-size="10">+ getReceivedParameter () std::string</text>
 <text x="1861" y="4755" fill="#000000" font-family="Arial" font-size="10">+ getServerUri () std::string</text>
 <text x="1861" y="4771" fill="#000000" font-family="Arial" font-size="10">+ getTrustRequests () std::map</text>
 <text x="1861" y="4787" fill="#000000" font-family="Arial" font-size="10">+ shared () std::shared_ptr</text>
 <text x="1861" y="4803" fill="#000000" font-family="Arial" font-size="10">- setAccountDetails (details: const std::map &amp; ) void Virtual</text>
 <text x="1861" y="4819" fill="#000000" font-family="Arial" font-size="10">- computeKeys (password: const std::string &amp; , pin: const std::string &amp; , previous: bool ) std::pair</text>
 <text x="1861" y="4835" fill="#000000" font-family="Arial" font-size="10">- loadArchive (data: const std::vector &amp; ) ArchiveContent</text>
 <text x="1861" y="4851" fill="#000000" font-family="Arial" font-size="10">- loadDhParams (path: const std::string ) tls::DhParams</text>
 <text x="1861" y="4867" fill="#000000" font-family="Arial" font-size="10">- loadIdentity (crt_path: const std::string &amp; , key_path: const std::string &amp; , key_pwd: const std::string &amp; ) dht::crypto::Identity</text>
 <text x="1861" y="4883" fill="#000000" font-family="Arial" font-size="10">- needsMigration (id: const dht::crypto::Identity &amp; ) bool</text>
 <text x="1861" y="4899" fill="#000000" font-family="Arial" font-size="10">- updateCertificates (archive: ArchiveContent &amp; , device: dht::crypto::Identity &amp; ) bool</text>
 <text x="1861" y="4915" fill="#000000" font-family="Arial" font-size="10">- createIceTransport (Args: const , ...) std::shared_ptr</text>
 <text x="1861" y="4931" fill="#000000" font-family="Arial" font-size="10">- SIPStartCall (call: const std::shared_ptr &amp; , target: IpAddr ) bool</text>
 <text x="1861" y="4947" fill="#000000" font-family="Arial" font-size="10">- allowPeersFromContact_ () bool</text>
 <text x="1861" y="4963" fill="#000000" font-family="Arial" font-size="10">- allowPeersFromHistory_ () bool</text>
 <text x="1861" y="4979" fill="#000000" font-family="Arial" font-size="10">- allowPeersFromTrusted_ () bool</text>
 <text x="1861" y="4995" fill="#000000" font-family="Arial" font-size="10">- archivePath_ () std::string</text>
 <text x="1861" y="5011" fill="#000000" font-family="Arial" font-size="10">- cachePath_ () std::string</text>
 <text x="1861" y="5027" fill="#000000" font-family="Arial" font-size="10">- callsMutex_ () mutable std::mutex</text>
 <text x="1861" y="5043" fill="#000000" font-family="Arial" font-size="10">- contactBuffer_ () char [PJSIP_MAX_URL_SIZE]</text>
 <text x="1861" y="5059" fill="#000000" font-family="Arial" font-size="10">- contact_ () pj_str_t</text>
 <text x="1861" y="5075" fill="#000000" font-family="Arial" font-size="10">- createAccount (archive_password: const std::string &amp; ) void</text>
 <text x="1861" y="5091" fill="#000000" font-family="Arial" font-size="10">- createOutgoingCall (call: const std::shared_ptr &amp; , to_id: const std::string &amp; , target: IpAddr ) void</text>
 <text x="1861" y="5107" fill="#000000" font-family="Arial" font-size="10">- createRingDevice (id: const dht::crypto::Identity &amp; ) void</text>
 <text x="1861" y="5123" fill="#000000" font-family="Arial" font-size="10">- dataPath_ () std::string</text>
 <text x="1861" y="5139" fill="#000000" font-family="Arial" font-size="10">- dhtPortUsed_ () UsedPort</text>
 <text x="1861" y="5155" fill="#000000" font-family="Arial" font-size="10">- dhtPort_ () in_port_t</text>
 <text x="1861" y="5171" fill="#000000" font-family="Arial" font-size="10">- dhtPublicInCalls_ () bool</text>
 <text x="1861" y="5187" fill="#000000" font-family="Arial" font-size="10">- dht_ () dht::DhtRunner</text>
 <text x="1861" y="5203" fill="#000000" font-family="Arial" font-size="10">- doRegister_ () void</text>
 <text x="1861" y="5219" fill="#000000" font-family="Arial" font-size="10">- ethAccount_ () std::string</text>
 <text x="1861" y="5235" fill="#000000" font-family="Arial" font-size="10">- ethPath_ () std::string</text>
 <text x="1861" y="5251" fill="#000000" font-family="Arial" font-size="10">- forEachDevice (to: const dht::InfoHash &amp; , op: std::function , end: std::function ) void</text>
 <text x="1861" y="5267" fill="#000000" font-family="Arial" font-size="10">- foundAccountDevice (crt: const std::shared_ptr &amp; , name: const std::string &amp; ) bool</text>
 <text x="1861" y="5283" fill="#000000" font-family="Arial" font-size="10">- foundPeerDevice (crt: const std::shared_ptr &amp; , account_id: dht::InfoHash &amp; ) bool</text>
 <text x="1861" y="5299" fill="#000000" font-family="Arial" font-size="10">- generateDhParams () void</text>
 <text x="1861" y="5315" fill="#000000" font-family="Arial" font-size="10">- handleEvents () void</text>
 <text x="1861" y="5331" fill="#000000" font-family="Arial" font-size="10">- handlePendingCall (pc: PendingCall &amp; , incoming: bool ) bool</text>
 <text x="1861" y="5347" fill="#000000" font-family="Arial" font-size="10">- handlePendingCallList () void</text>
 <text x="1861" y="5363" fill="#000000" font-family="Arial" font-size="10">- idPath_ () std::string</text>
 <text x="1861" y="5379" fill="#000000" font-family="Arial" font-size="10">- identity_ () dht::crypto::Identity</text>
 <text x="1861" y="5395" fill="#000000" font-family="Arial" font-size="10">- igdChanged () void</text>
 <text x="1861" y="5411" fill="#000000" font-family="Arial" font-size="10">- incomingCall (dht::IceCandidates, from: const std::shared_ptr &amp; ) void</text>
 <text x="1861" y="5427" fill="#000000" font-family="Arial" font-size="10">- initRingDevice (a: const ArchiveContent &amp; ) void</text>
 <text x="1861" y="5443" fill="#000000" font-family="Arial" font-size="10">- loadAccount (archive_password: const std::string &amp; , archive_pin: const std::string &amp; ) void</text>
 <text x="1861" y="5459" fill="#000000" font-family="Arial" font-size="10">- loadAccountFromDHT (archive_password: const std::string &amp; , archive_pin: const std::string &amp; ) void</text>
 <text x="1861" y="5475" fill="#000000" font-family="Arial" font-size="10">- loadContacts () void</text>
 <text x="1861" y="5491" fill="#000000" font-family="Arial" font-size="10">- loadKnownDevices () void</text>
 <text x="1861" y="5507" fill="#000000" font-family="Arial" font-size="10">- loadKnownDevicesOld () void</text>
 <text x="1861" y="5523" fill="#000000" font-family="Arial" font-size="10">- loadTreatedCalls () void</text>
 <text x="1861" y="5539" fill="#000000" font-family="Arial" font-size="10">- loadTreatedMessages () void</text>
 <text x="1861" y="5555" fill="#000000" font-family="Arial" font-size="10">- loadTrustRequests () void</text>
 <text x="1861" y="5571" fill="#000000" font-family="Arial" font-size="10">- makeReceipt (id: const dht::crypto::Identity &amp; ) std::string</text>
 <text x="1861" y="5587" fill="#000000" font-family="Arial" font-size="10">- mapPortUPnP () bool</text>
 <text x="1861" y="5603" fill="#000000" font-family="Arial" font-size="10">- migrateAccount (pwd: const std::string &amp; ) bool</text>
 <text x="1861" y="5619" fill="#000000" font-family="Arial" font-size="10">- onPeerMessage (peer_device: const dht::InfoHash &amp; , std::function) void</text>
 <text x="1861" y="5635" fill="#000000" font-family="Arial" font-size="10">- onReceiveDeviceSync (DeviceSync) void</text>
 <text x="1861" y="5651" fill="#000000" font-family="Arial" font-size="10">- onTrackedBuddyOffline (buddy_info_it: std::map::iterator &amp; ) void</text>
 <text x="1861" y="5667" fill="#000000" font-family="Arial" font-size="10">- onTrackedBuddyOnline (buddy_info_it: std::map::iterator &amp; , device_id: const dht::InfoHash &amp; ) void</text>
 <text x="1861" y="5683" fill="#000000" font-family="Arial" font-size="10">- rPort_ () int</text>
 <text x="1861" y="5699" fill="#000000" font-family="Arial" font-size="10">- receiptSignature_ () std::vector</text>
 <text x="1861" y="5715" fill="#000000" font-family="Arial" font-size="10">- receipt_ () std::string</text>
 <text x="1861" y="5731" fill="#000000" font-family="Arial" font-size="10">- receivedParameter_ () std::string</text>
 <text x="1861" y="5747" fill="#000000" font-family="Arial" font-size="10">- registerDhtAddress (IceTransport &amp;) void</text>
 <text x="1861" y="5763" fill="#000000" font-family="Arial" font-size="10">- replyToIncomingIceMsg (std: const , std: const , dht: const , std: const ) void</text>
 <text x="1861" y="5779" fill="#000000" font-family="Arial" font-size="10">- ringAccountId_ () std::string</text>
 <text x="1861" y="5795" fill="#000000" font-family="Arial" font-size="10">- ringDeviceId_ () std::string</text>
 <text x="1861" y="5811" fill="#000000" font-family="Arial" font-size="10">- ringDeviceName_ () std::string</text>
 <text x="1861" y="5827" fill="#000000" font-family="Arial" font-size="10">- saveArchive (content: const ArchiveContent &amp; , pwd: const std::string &amp; ) void</text>
 <text x="1861" y="5843" fill="#000000" font-family="Arial" font-size="10">- startOutgoingCall (call: const std::shared_ptr &amp; , toUri: const std::string ) void</text>
 <text x="1861" y="5859" fill="#000000" font-family="Arial" font-size="10">- syncDevices () void</text>
 <text x="1861" y="5875" fill="#000000" font-family="Arial" font-size="10">- treatedCalls_ () std::set</text>
 <text x="1861" y="5891" fill="#000000" font-family="Arial" font-size="10">- treatedMessages_ () std::set</text>
 <text x="1861" y="5907" fill="#000000" font-family="Arial" font-size="10">- updateContact (dht: const , Contact: const ) void</text>
 <text x="1861" y="5923" fill="#000000" font-family="Arial" font-size="10">- useIdentity (id: const dht::crypto::Identity &amp; ) bool</text>
 <text x="1861" y="5939" fill="#000000" font-family="Arial" font-size="10">- via_addr_ () pjsip_host_port</text>
 <text x="1861" y="5955" fill="#000000" font-family="Arial" font-size="10">- via_tp_ () pjsip_transport *</text>
 <text x="1861" y="5971" fill="#000000" font-family="Arial" font-size="10">- hasCertificate () bool</text>
 <text x="1861" y="5987" fill="#000000" font-family="Arial" font-size="10">- hasPrivateKey () bool</text>
 <text x="1861" y="6003" fill="#000000" font-family="Arial" font-size="10">- loadNodes () std::vector</text>
 <text x="1861" y="6019" fill="#000000" font-family="Arial" font-size="10">- loadValues () std::vector</text>
 <text x="1861" y="6035" fill="#000000" font-family="Arial" font-size="10">- makeArchive (content: const ArchiveContent &amp; ) std::vector</text>
 <text x="1861" y="6051" fill="#000000" font-family="Arial" font-size="10">- readArchive (pwd: const std::string &amp; ) ArchiveContent</text>
 <text x="1861" y="6067" fill="#000000" font-family="Arial" font-size="10">- saveContacts () void</text>
 <text x="1861" y="6083" fill="#000000" font-family="Arial" font-size="10">- saveIdentity (id: const dht::crypto::Identity , path: const std::string &amp; ) std::pair</text>
 <text x="1861" y="6099" fill="#000000" font-family="Arial" font-size="10">- saveKnownDevices () void</text>
 <text x="1861" y="6115" fill="#000000" font-family="Arial" font-size="10">- saveNodes (std: const ) void</text>
 <text x="1861" y="6131" fill="#000000" font-family="Arial" font-size="10">- saveTreatedCalls () void</text>
 <text x="1861" y="6147" fill="#000000" font-family="Arial" font-size="10">- saveTreatedMessages () void</text>
 <text x="1861" y="6163" fill="#000000" font-family="Arial" font-size="10">- saveTrustRequests () void</text>
 <text x="1861" y="6179" fill="#000000" font-family="Arial" font-size="10">- saveValues (std: const ) void</text>
 <polyline points="2582,3621 2585,3611 2588,3601 2591,3590 2594,3580 2596,3570 2599,3560 2602,3550 2605,3540 2607,3531 2610,3521" stroke="#CC0044" fill="none"/>
 <polygon points="2607,3520 2613,3511 2614,3522 2607,3520" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="2613,6085 2613,3725 3259,3725 3259,6085 2613,6085" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="2613,3749 3259,3749" stroke="#0000ff" fill="none"/>
 <polyline points="2613,4301 3259,4301" stroke="#0000ff" fill="none"/>
 <text x="2888" y="3739" fill="#000000" font-family="Arial" font-size="10">ring::SIPAccount</text>
 <text x="2621" y="3763" fill="#000000" font-family="Arial" font-size="10">+ ACCOUNT_TYPE: constexpr const char *const= &quot;SIP&quot;</text>
 <text x="2621" y="3779" fill="#000000" font-family="Arial" font-size="10">- allowContactRewrite_: int</text>
 <text x="2621" y="3795" fill="#000000" font-family="Arial" font-size="10">- allowViaRewrite_: bool</text>
 <text x="2621" y="3811" fill="#000000" font-family="Arial" font-size="10">- auto_rereg_</text>
 <text x="2621" y="3827" fill="#000000" font-family="Arial" font-size="10">- bRegister_: bool</text>
 <text x="2621" y="3843" fill="#000000" font-family="Arial" font-size="10">- ciphers_: CipherArray</text>
 <text x="2621" y="3859" fill="#000000" font-family="Arial" font-size="10">- contactBuffer_: char [PJSIP_MAX_URL_SIZE]</text>
 <text x="2621" y="3875" fill="#000000" font-family="Arial" font-size="10">- contactOverwritten_: bool</text>
 <text x="2621" y="3891" fill="#000000" font-family="Arial" font-size="10">- contactRewriteMethod_: int</text>
 <text x="2621" y="3907" fill="#000000" font-family="Arial" font-size="10">- contact_: pj_str_t</text>
 <text x="2621" y="3923" fill="#000000" font-family="Arial" font-size="10">- cred_: std::vector</text>
 <text x="2621" y="3939" fill="#000000" font-family="Arial" font-size="10">- credentials_: std::vector</text>
 <text x="2621" y="3955" fill="#000000" font-family="Arial" font-size="10">- hostIp_: IpAddr</text>
 <text x="2621" y="3971" fill="#000000" font-family="Arial" font-size="10">- keepAliveEnabled_: bool</text>
 <text x="2621" y="3987" fill="#000000" font-family="Arial" font-size="10">- keepAliveTimerActive_: bool</text>
 <text x="2621" y="4003" fill="#000000" font-family="Arial" font-size="10">- keepAliveTimer_: pj_timer_entry</text>
 <text x="2621" y="4019" fill="#000000" font-family="Arial" font-size="10">- presence_: SIPPresence *</text>
 <text x="2621" y="4035" fill="#000000" font-family="Arial" font-size="10">- rPort_: int</text>
 <text x="2621" y="4051" fill="#000000" font-family="Arial" font-size="10">- receivedParameter_: std::string</text>
 <text x="2621" y="4067" fill="#000000" font-family="Arial" font-size="10">- regc_: pjsip_regc *</text>
 <text x="2621" y="4083" fill="#000000" font-family="Arial" font-size="10">- registrationExpire_: int</text>
 <text x="2621" y="4099" fill="#000000" font-family="Arial" font-size="10">- registrationStateDetailed_: std::pair</text>
 <text x="2621" y="4115" fill="#000000" font-family="Arial" font-size="10">- serviceRoute_: std::string</text>
 <text x="2621" y="4131" fill="#000000" font-family="Arial" font-size="10">- tlsCiphers_: std::string</text>
 <text x="2621" y="4147" fill="#000000" font-family="Arial" font-size="10">- tlsMethod_: std::string</text>
 <text x="2621" y="4163" fill="#000000" font-family="Arial" font-size="10">- tlsNegotiationTimeoutSec_: std::string</text>
 <text x="2621" y="4179" fill="#000000" font-family="Arial" font-size="10">- tlsRequireClientCertificate_: bool</text>
 <text x="2621" y="4195" fill="#000000" font-family="Arial" font-size="10">- tlsServerName_: std::string</text>
 <text x="2621" y="4211" fill="#000000" font-family="Arial" font-size="10">- tlsSetting_: pjsip_tls_setting</text>
 <text x="2621" y="4227" fill="#000000" font-family="Arial" font-size="10">- tlsVerifyClient_: bool</text>
 <text x="2621" y="4243" fill="#000000" font-family="Arial" font-size="10">- tlsVerifyServer_: bool</text>
 <text x="2621" y="4259" fill="#000000" font-family="Arial" font-size="10">- upnpIpAddr_: std::string</text>
 <text x="2621" y="4275" fill="#000000" font-family="Arial" font-size="10">- via_addr_: pjsip_host_port</text>
 <text x="2621" y="4291" fill="#000000" font-family="Arial" font-size="10">- via_tp_: pjsip_transport *</text>
 <text x="2621" y="4315" fill="#000000" font-family="Arial" font-size="10">+ connectivityChanged () void Virtual</text>
 <text x="2621" y="4331" fill="#000000" font-family="Arial" font-size="10">+ doRegister () void Virtual</text>
 <text x="2621" y="4347" fill="#000000" font-family="Arial" font-size="10">+ doUnregister (cb: std::function ) void Virtual</text>
 <text x="2621" y="4363" fill="#000000" font-family="Arial" font-size="10">+ getContactHeader (pjsip_transport *) pj_str_t Virtual</text>
 <text x="2621" y="4379" fill="#000000" font-family="Arial" font-size="10">+ getTransport () std::shared_ptr Virtual</text>
 <text x="2621" y="4395" fill="#000000" font-family="Arial" font-size="10">+ loadConfig () void Virtual</text>
 <text x="2621" y="4411" fill="#000000" font-family="Arial" font-size="10">+ newIncomingCall (from: const std::string &amp; ) std::shared_ptr Virtual</text>
 <text x="2621" y="4427" fill="#000000" font-family="Arial" font-size="10">+ newOutgoingCall (toUrl: const std::string &amp; ) std::shared_ptr Virtual</text>
 <text x="2621" y="4443" fill="#000000" font-family="Arial" font-size="10">+ sendTextMessage (to: const std::string &amp; , payloads: const std::map &amp; , id: uint64_t ) void Virtual</text>
 <text x="2621" y="4459" fill="#000000" font-family="Arial" font-size="10">+ serialize (out: YAML::Emitter &amp; ) void Virtual</text>
 <text x="2621" y="4475" fill="#000000" font-family="Arial" font-size="10">+ setRegistrationState (state: RegistrationState , code: unsigned , detail_str: const std::string &amp; ) void Virtual</text>
 <text x="2621" y="4491" fill="#000000" font-family="Arial" font-size="10">+ unserialize (node: const YAML::Node &amp; ) void Virtual</text>
 <text x="2621" y="4507" fill="#000000" font-family="Arial" font-size="10">+ ~SIPAccount () Virtual</text>
 <text x="2621" y="4523" fill="#000000" font-family="Arial" font-size="10">+ getAccountDetails () std::map Virtual</text>
 <text x="2621" y="4539" fill="#000000" font-family="Arial" font-size="10">+ getAccountType () const char * Virtual</text>
 <text x="2621" y="4555" fill="#000000" font-family="Arial" font-size="10">+ getSrtpFallback () bool Virtual</text>
 <text x="2621" y="4571" fill="#000000" font-family="Arial" font-size="10">+ getSrtpKeyExchange () sip_utils::KeyExchangeProtocol Virtual</text>
 <text x="2621" y="4587" fill="#000000" font-family="Arial" font-size="10">+ getStunPort () pj_uint16_t Virtual</text>
 <text x="2621" y="4603" fill="#000000" font-family="Arial" font-size="10">+ getStunServerName () pj_str_t Virtual</text>
 <text x="2621" y="4619" fill="#000000" font-family="Arial" font-size="10">+ getToUri (username: const std::string &amp; ) std::string Virtual</text>
 <text x="2621" y="4635" fill="#000000" font-family="Arial" font-size="10">+ getVolatileAccountDetails () std::map Virtual</text>
 <text x="2621" y="4651" fill="#000000" font-family="Arial" font-size="10">+ isIP2IP () bool Virtual</text>
 <text x="2621" y="4667" fill="#000000" font-family="Arial" font-size="10">+ isStunEnabled () bool Virtual</text>
 <text x="2621" y="4683" fill="#000000" font-family="Arial" font-size="10">+ isTlsEnabled () bool Virtual</text>
 <text x="2621" y="4699" fill="#000000" font-family="Arial" font-size="10">+ matches (username: const std::string &amp; , hostname: const std::string &amp; ) MatchRank Virtual</text>
 <text x="2621" y="4715" fill="#000000" font-family="Arial" font-size="10">+ getSupportedTlsCiphers () const std::vector &amp;</text>
 <text x="2621" y="4731" fill="#000000" font-family="Arial" font-size="10">+ getSupportedTlsProtocols () const std::vector &amp;</text>
 <text x="2621" y="4747" fill="#000000" font-family="Arial" font-size="10">+ keepAliveRegistrationCb (th: pj_timer_heap_t *, te: pj_timer_entry *) void</text>
 <text x="2621" y="4763" fill="#000000" font-family="Arial" font-size="10">+ newOutgoingCall (toUrl: const std::string &amp; ) std::shared_ptr</text>
 <text x="2621" y="4779" fill="#000000" font-family="Arial" font-size="10">+ SIPAccount (accountID: const std::string &amp; , presenceEnabled: bool ) </text>
 <text x="2621" y="4795" fill="#000000" font-family="Arial" font-size="10">+ SIPAccount () </text>
 <text x="2621" y="4811" fill="#000000" font-family="Arial" font-size="10">+ checkNATAddress (param: pjsip_regc_cbparam *, pool: pj_pool_t *) bool</text>
 <text x="2621" y="4827" fill="#000000" font-family="Arial" font-size="10">+ destroyRegistrationInfo () void</text>
 <text x="2621" y="4843" fill="#000000" font-family="Arial" font-size="10">+ doubleRegistrationExpire () void</text>
 <text x="2621" y="4859" fill="#000000" font-family="Arial" font-size="10">+ enablePresence (enable: const bool &amp; ) void</text>
 <text x="2621" y="4875" fill="#000000" font-family="Arial" font-size="10">+ getHostPortFromSTUN (pool: pj_pool_t *) pjsip_host_port</text>
 <text x="2621" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getRegistrationInfo () pjsip_regc *</text>
 <text x="2621" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getTlsSetting () pjsip_tls_setting *</text>
 <text x="2621" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getTransportSelector () pjsip_tpselector</text>
 <text x="2621" y="4939" fill="#000000" font-family="Arial" font-size="10">+ getViaAddr () pjsip_host_port *</text>
 <text x="2621" y="4955" fill="#000000" font-family="Arial" font-size="10">+ onRegister (param: pjsip_regc_cbparam *) void</text>
 <text x="2621" y="4971" fill="#000000" font-family="Arial" font-size="10">+ operator= () SIPAccount &amp;</text>
 <text x="2621" y="4987" fill="#000000" font-family="Arial" font-size="10">+ resetAutoRegistration () void</text>
 <text x="2621" y="5003" fill="#000000" font-family="Arial" font-size="10">+ sendRegister () void</text>
 <text x="2621" y="5019" fill="#000000" font-family="Arial" font-size="10">+ sendUnregister () void</text>
 <text x="2621" y="5035" fill="#000000" font-family="Arial" font-size="10">+ setCredentials (details: const std::vector &amp; ) void</text>
 <text x="2621" y="5051" fill="#000000" font-family="Arial" font-size="10">+ setLocalPort (port: pj_uint16_t ) void</text>
 <text x="2621" y="5067" fill="#000000" font-family="Arial" font-size="10">+ setRPort (rPort: int ) void</text>
 <text x="2621" y="5083" fill="#000000" font-family="Arial" font-size="10">+ setReceivedParameter (received: const std::string &amp; ) void</text>
 <text x="2621" y="5099" fill="#000000" font-family="Arial" font-size="10">+ setRegister (result: bool ) void</text>
 <text x="2621" y="5115" fill="#000000" font-family="Arial" font-size="10">+ setRegistrationExpire (expire: int ) void</text>
 <text x="2621" y="5131" fill="#000000" font-family="Arial" font-size="10">+ setRegistrationInfo (regc: pjsip_regc *) void</text>
 <text x="2621" y="5147" fill="#000000" font-family="Arial" font-size="10">+ setRegistrationStateDetailed (details: const std::pair &amp; ) void</text>
 <text x="2621" y="5163" fill="#000000" font-family="Arial" font-size="10">+ setTransport (std: const ) void</text>
 <text x="2621" y="5179" fill="#000000" font-family="Arial" font-size="10">+ startKeepAliveTimer () void</text>
 <text x="2621" y="5195" fill="#000000" font-family="Arial" font-size="10">+ stopKeepAliveTimer () void</text>
 <text x="2621" y="5211" fill="#000000" font-family="Arial" font-size="10">+ supportPresence (function: int , enable: bool ) void</text>
 <text x="2621" y="5227" fill="#000000" font-family="Arial" font-size="10">+ updateDialogViaSentBy (dlg: pjsip_dialog *) void</text>
 <text x="2621" y="5243" fill="#000000" font-family="Arial" font-size="10">+ getCredInfo () const pjsip_cred_info *</text>
 <text x="2621" y="5259" fill="#000000" font-family="Arial" font-size="10">+ getCredentialCount () unsigned</text>
 <text x="2621" y="5275" fill="#000000" font-family="Arial" font-size="10">+ getFromUri () std::string</text>
 <text x="2621" y="5291" fill="#000000" font-family="Arial" font-size="10">+ getLocalPort () pj_uint16_t</text>
 <text x="2621" y="5307" fill="#000000" font-family="Arial" font-size="10">+ getPresence () SIPPresence *</text>
 <text x="2621" y="5323" fill="#000000" font-family="Arial" font-size="10">+ getRPort () int</text>
 <text x="2621" y="5339" fill="#000000" font-family="Arial" font-size="10">+ getReceivedParameter () std::string</text>
 <text x="2621" y="5355" fill="#000000" font-family="Arial" font-size="10">+ getRegistrationExpire () unsigned</text>
 <text x="2621" y="5371" fill="#000000" font-family="Arial" font-size="10">+ getServerUri () std::string</text>
 <text x="2621" y="5387" fill="#000000" font-family="Arial" font-size="10">+ getServiceRoute () std::string</text>
 <text x="2621" y="5403" fill="#000000" font-family="Arial" font-size="10">+ getTlsListenerPort () pj_uint16_t</text>
 <text x="2621" y="5419" fill="#000000" font-family="Arial" font-size="10">+ getTlsSettings () std::map</text>
 <text x="2621" y="5435" fill="#000000" font-family="Arial" font-size="10">+ getTransportType () pjsip_transport_type_e</text>
 <text x="2621" y="5451" fill="#000000" font-family="Arial" font-size="10">+ getUserAgentName () std::string</text>
 <text x="2621" y="5467" fill="#000000" font-family="Arial" font-size="10">+ hasCredentials () bool</text>
 <text x="2621" y="5483" fill="#000000" font-family="Arial" font-size="10">+ hasServiceRoute () bool</text>
 <text x="2621" y="5499" fill="#000000" font-family="Arial" font-size="10">+ isKeepAliveEnabled () bool</text>
 <text x="2621" y="5515" fill="#000000" font-family="Arial" font-size="10">+ isRegistered () bool</text>
 <text x="2621" y="5531" fill="#000000" font-family="Arial" font-size="10">- onTransportStateChanged (state: pjsip_transport_state , info: const pjsip_transport_state_info *) void Virtual</text>
 <text x="2621" y="5547" fill="#000000" font-family="Arial" font-size="10">- setAccountDetails (details: const std::map &amp; ) void Virtual</text>
 <text x="2621" y="5563" fill="#000000" font-family="Arial" font-size="10">- getLoginName () std::string</text>
 <text x="2621" y="5579" fill="#000000" font-family="Arial" font-size="10">- tlsProtocolFromString (method: const std::string &amp; ) pj_uint32_t</text>
 <text x="2621" y="5595" fill="#000000" font-family="Arial" font-size="10">- SIPStartCall (call: std::shared_ptr &amp; ) bool</text>
 <text x="2621" y="5611" fill="#000000" font-family="Arial" font-size="10">- autoReregTimerCb () void</text>
 <text x="2621" y="5627" fill="#000000" font-family="Arial" font-size="10">- delay10PosDist_ () std::uniform_int_distribution</text>
 <text x="2621" y="5643" fill="#000000" font-family="Arial" font-size="10">- delay10ZeroDist_ () std::uniform_int_distribution</text>
 <text x="2621" y="5659" fill="#000000" font-family="Arial" font-size="10">- doRegister1_ () void</text>
 <text x="2621" y="5675" fill="#000000" font-family="Arial" font-size="10">- doRegister2_ () void</text>
 <text x="2621" y="5691" fill="#000000" font-family="Arial" font-size="10">- initStunConfiguration () void</text>
 <text x="2621" y="5707" fill="#000000" font-family="Arial" font-size="10">- initTlsConfiguration () void</text>
 <text x="2621" y="5723" fill="#000000" font-family="Arial" font-size="10">- localPort_ () pj_uint16_t</text>
 <text x="2621" y="5739" fill="#000000" font-family="Arial" font-size="10">- mapPortUPnP () bool</text>
 <text x="2621" y="5755" fill="#000000" font-family="Arial" font-size="10">- newRegisteredAccountCall (id: const std::string &amp; , toUrl: const std::string &amp; ) std::shared_ptr</text>
 <text x="2621" y="5771" fill="#000000" font-family="Arial" font-size="10">- publishedPortUsed_ () pj_uint16_t</text>
 <text x="2621" y="5787" fill="#000000" font-family="Arial" font-size="10">- scheduleReregistration () void</text>
 <text x="2621" y="5803" fill="#000000" font-family="Arial" font-size="10">- srtpFallback_ () bool</text>
 <text x="2621" y="5819" fill="#000000" font-family="Arial" font-size="10">- srtpKeyExchange_ () sip_utils::KeyExchangeProtocol</text>
 <text x="2621" y="5835" fill="#000000" font-family="Arial" font-size="10">- stunPort_ () pj_uint16_t</text>
 <text x="2621" y="5851" fill="#000000" font-family="Arial" font-size="10">- stunServerName_ () pj_str_t</text>
 <text x="2621" y="5867" fill="#000000" font-family="Arial" font-size="10">- timerIdDist_ () std::uniform_int_distribution</text>
 <text x="2621" y="5883" fill="#000000" font-family="Arial" font-size="10">- tlsEnable_ () bool</text>
 <text x="2621" y="5899" fill="#000000" font-family="Arial" font-size="10">- tlsListenerPort_ () pj_uint16_t</text>
 <text x="2621" y="5915" fill="#000000" font-family="Arial" font-size="10">- tlsListener_ () std::shared_ptr</text>
 <text x="2621" y="5931" fill="#000000" font-family="Arial" font-size="10">- transportType_ () pjsip_transport_type_e</text>
 <text x="2621" y="5947" fill="#000000" font-family="Arial" font-size="10">- transport_ () std::shared_ptr</text>
 <text x="2621" y="5963" fill="#000000" font-family="Arial" font-size="10">- trimCiphers () void</text>
 <text x="2621" y="5979" fill="#000000" font-family="Arial" font-size="10">- usePublishedAddressPortInVIA () void</text>
 <text x="2621" y="5995" fill="#000000" font-family="Arial" font-size="10">- useUPnPAddressPortInVIA () void</text>
 <text x="2621" y="6011" fill="#000000" font-family="Arial" font-size="10">- fullMatch (username: const std::string &amp; , hostname: const std::string &amp; ) bool</text>
 <text x="2621" y="6027" fill="#000000" font-family="Arial" font-size="10">- hostnameMatch (hostname: const std::string &amp; ) bool</text>
 <text x="2621" y="6043" fill="#000000" font-family="Arial" font-size="10">- isSrtpEnabled () bool</text>
 <text x="2621" y="6059" fill="#000000" font-family="Arial" font-size="10">- proxyMatch (hostname: const std::string &amp; ) bool</text>
 <text x="2621" y="6075" fill="#000000" font-family="Arial" font-size="10">- userMatch (username: const std::string &amp; ) bool</text>
 <polyline points="2841,3725 2839,3704 2838,3683 2836,3663 2835,3642 2833,3622 2831,3601 2830,3581 2828,3561 2827,3541 2825,3521" stroke="#CC0044" fill="none"/>
 <polygon points="2821,3521 2824,3511 2828,3521 2821,3521" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="3438,4973 3438,4837 3893,4837 3893,4973 3438,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="3438,4861 3893,4861" stroke="#0000ff" fill="none"/>
 <polyline points="3438,4885 3893,4885" stroke="#0000ff" fill="none"/>
 <text x="3596" y="4851" fill="#000000" font-family="Arial" font-size="10">AccountAudioCodecInfo</text>
 <text x="3663" y="4875" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="3446" y="4899" fill="#000000" font-family="Arial" font-size="10">+ AccountAudioCodecInfo (sysCodecInfo: const SystemAudioCodecInfo &amp; ) </text>
 <text x="3446" y="4915" fill="#000000" font-family="Arial" font-size="10">+ audioformat () AudioFormat</text>
 <text x="3446" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getCodecSpecifications () std::map</text>
 <text x="3446" y="4947" fill="#000000" font-family="Arial" font-size="10">+ setCodecSpecifications (details: const std::map &amp; ) void</text>
 <text x="3446" y="4963" fill="#000000" font-family="Arial" font-size="10">+ isPCMG722 () bool</text>
 <polygon points="3708,3039 3708,2807 4097,2807 4097,3039 3708,3039" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="3708,2831 4097,2831" stroke="#0000ff" fill="none"/>
 <polyline points="3708,2903 4097,2903" stroke="#0000ff" fill="none"/>
 <text x="3850" y="2821" fill="#000000" font-family="Arial" font-size="10">AccountCodecInfo</text>
 <text x="3716" y="2845" fill="#000000" font-family="Arial" font-size="10">+ bitrate: unsigned</text>
 <text x="3716" y="2861" fill="#000000" font-family="Arial" font-size="10">+ payloadType: unsigned</text>
 <text x="3716" y="2877" fill="#000000" font-family="Arial" font-size="10">+ quality: unsigned</text>
 <text x="3716" y="2893" fill="#000000" font-family="Arial" font-size="10">+ systemCodecInfo: const SystemCodecInfo &amp;</text>
 <text x="3716" y="2917" fill="#000000" font-family="Arial" font-size="10">+ AccountCodecInfo (sysCodecInfo: const SystemCodecInfo &amp; ) </text>
 <text x="3716" y="2933" fill="#000000" font-family="Arial" font-size="10">+ AccountCodecInfo () </text>
 <text x="3716" y="2949" fill="#000000" font-family="Arial" font-size="10">+ AccountCodecInfo () </text>
 <text x="3716" y="2965" fill="#000000" font-family="Arial" font-size="10">+ getCodecSpecifications () std::map</text>
 <text x="3716" y="2981" fill="#000000" font-family="Arial" font-size="10">+ isActive () bool</text>
 <text x="3716" y="2997" fill="#000000" font-family="Arial" font-size="10">+ operator= (o: const AccountCodecInfo &amp; ) AccountCodecInfo &amp;</text>
 <text x="3716" y="3013" fill="#000000" font-family="Arial" font-size="10">+ operator= (AccountCodecInfo) AccountCodecInfo &amp;</text>
 <text x="3716" y="3029" fill="#000000" font-family="Arial" font-size="10">+ order () unsigned</text>
 <polyline points="3673,4837 3686,4728 3704,4578 3726,4396 3750,4193 3776,3978 3802,3760 3827,3548 3851,3353 3871,3183 3887,3049" stroke="#CC0044" fill="none"/>
 <polygon points="3884,3049 3888,3039 3890,3050 3884,3049" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="4384,5149 4384,4661 4923,4661 4923,5149 4384,5149" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="4384,4685 4923,4685" stroke="#0000ff" fill="none"/>
 <polyline points="4384,4709 4923,4709" stroke="#0000ff" fill="none"/>
 <text x="4593" y="4675" fill="#000000" font-family="Arial" font-size="10">ring::AccountFactory</text>
 <text x="4392" y="4699" fill="#000000" font-family="Arial" font-size="10">+ DEFAULT_ACCOUNT_TYPE: const char *const= SIPAccount::ACCOUNT_TYPE</text>
 <text x="4392" y="4723" fill="#000000" font-family="Arial" font-size="10">+ clear () void</text>
 <text x="4392" y="4739" fill="#000000" font-family="Arial" font-size="10">+ clear () void</text>
 <text x="4392" y="4755" fill="#000000" font-family="Arial" font-size="10">+ AccountFactory () </text>
 <text x="4392" y="4771" fill="#000000" font-family="Arial" font-size="10">+ clear () void</text>
 <text x="4392" y="4787" fill="#000000" font-family="Arial" font-size="10">+ createAccount (accountType: const char *const , id: const std::string &amp; ) std::shared_ptr</text>
 <text x="4392" y="4803" fill="#000000" font-family="Arial" font-size="10">+ removeAccount (account: Account &amp; ) void</text>
 <text x="4392" y="4819" fill="#000000" font-family="Arial" font-size="10">+ removeAccount (id: const std::string &amp; ) void</text>
 <text x="4392" y="4835" fill="#000000" font-family="Arial" font-size="10">+ accountCount () std::size_t</text>
 <text x="4392" y="4851" fill="#000000" font-family="Arial" font-size="10">+ accountCount () std::size_t</text>
 <text x="4392" y="4867" fill="#000000" font-family="Arial" font-size="10">+ empty () bool</text>
 <text x="4392" y="4883" fill="#000000" font-family="Arial" font-size="10">+ empty () bool</text>
 <text x="4392" y="4899" fill="#000000" font-family="Arial" font-size="10">+ getAccount (id: const std::string &amp; ) std::shared_ptr</text>
 <text x="4392" y="4915" fill="#000000" font-family="Arial" font-size="10">+ getAccount (accountId: const std::string &amp; ) std::shared_ptr</text>
 <text x="4392" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getAllAccounts () std::vector</text>
 <text x="4392" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getAllAccounts () std::vector</text>
 <text x="4392" y="4963" fill="#000000" font-family="Arial" font-size="10">+ hasAccount (id: const std::string &amp; ) bool</text>
 <text x="4392" y="4979" fill="#000000" font-family="Arial" font-size="10">+ hasAccount (id: const std::string &amp; ) bool</text>
 <text x="4392" y="4995" fill="#000000" font-family="Arial" font-size="10">+ accountCount () std::size_t</text>
 <text x="4392" y="5011" fill="#000000" font-family="Arial" font-size="10">+ empty () bool</text>
 <text x="4392" y="5027" fill="#000000" font-family="Arial" font-size="10">+ getAccount (id: const std::string &amp; ) std::shared_ptr</text>
 <text x="4392" y="5043" fill="#000000" font-family="Arial" font-size="10">+ getAllAccounts () std::vector</text>
 <text x="4392" y="5059" fill="#000000" font-family="Arial" font-size="10">+ hasAccount (id: const std::string &amp; ) bool</text>
 <text x="4392" y="5075" fill="#000000" font-family="Arial" font-size="10">+ isSupportedType (name: const char *const ) bool</text>
 <text x="4392" y="5091" fill="#000000" font-family="Arial" font-size="10">- accountMaps_ () std::map</text>
 <text x="4392" y="5107" fill="#000000" font-family="Arial" font-size="10">- generators_ () std::map</text>
 <text x="4392" y="5123" fill="#000000" font-family="Arial" font-size="10">- mutex_ () mutable std::recursive_mutex</text>
 <text x="4392" y="5139" fill="#000000" font-family="Arial" font-size="10">- getMap_ () const AccountMap *</text>
 <polygon points="4941,4941 4941,4869 5352,4869 5352,4941 4941,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="4941,4893 5352,4893" stroke="#0000ff" fill="none"/>
 <polyline points="4941,4917 5352,4917" stroke="#0000ff" fill="none"/>
 <text x="4970" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::AccountMessageStatusChanged</text>
 <text x="4949" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;AccountMessageStatusChanged&quot;</text>
 <text x="5144" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="3911,4981 3911,4829 4366,4829 4366,4981 3911,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="3911,4853 4366,4853" stroke="#0000ff" fill="none"/>
 <polyline points="3911,4909 4366,4909" stroke="#0000ff" fill="none"/>
 <text x="4069" y="4843" fill="#000000" font-family="Arial" font-size="10">AccountVideoCodecInfo</text>
 <text x="3919" y="4867" fill="#000000" font-family="Arial" font-size="10">+ frameRate: unsigned</text>
 <text x="3919" y="4883" fill="#000000" font-family="Arial" font-size="10">+ parameters: std::string</text>
 <text x="3919" y="4899" fill="#000000" font-family="Arial" font-size="10">+ profileId: unsigned</text>
 <text x="3919" y="4923" fill="#000000" font-family="Arial" font-size="10">+ AccountVideoCodecInfo (sysCodecInfo: const SystemVideoCodecInfo &amp; ) </text>
 <text x="3919" y="4939" fill="#000000" font-family="Arial" font-size="10">+ getCodecSpecifications () std::map</text>
 <text x="3919" y="4955" fill="#000000" font-family="Arial" font-size="10">+ isAutoQualityEnabled () bool</text>
 <text x="3919" y="4971" fill="#000000" font-family="Arial" font-size="10">+ setCodecSpecifications (details: const std::map &amp; ) void</text>
 <polyline points="4129,4829 4116,4717 4097,4565 4076,4384 4052,4181 4026,3968 4001,3751 3976,3542 3953,3349 3933,3182 3917,3049" stroke="#CC0044" fill="none"/>
 <polygon points="3913,3049 3916,3039 3920,3049 3913,3049" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="5370,4941 5370,4869 5697,4869 5697,4941 5370,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="5370,4893 5697,4893" stroke="#0000ff" fill="none"/>
 <polyline points="5370,4917 5697,4917" stroke="#0000ff" fill="none"/>
 <text x="5399" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::AccountsChanged</text>
 <text x="5378" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;AccountsChanged&quot;</text>
 <text x="5531" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="5715,4957 5715,4853 5952,4853 5952,4957 5715,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="5715,4877 5952,4877" stroke="#0000ff" fill="none"/>
 <polyline points="5715,4917 5952,4917" stroke="#0000ff" fill="none"/>
 <text x="5783" y="4867" fill="#000000" font-family="Arial" font-size="10">dev::crypto::Alias</text>
 <text x="5723" y="4891" fill="#000000" font-family="Arial" font-size="10">- m_secret: Secret</text>
 <text x="5723" y="4907" fill="#000000" font-family="Arial" font-size="10">- m_sessions: std::map</text>
 <text x="5723" y="4931" fill="#000000" font-family="Arial" font-size="10">+ Alias (_s: Secret const &amp; ) </text>
 <text x="5723" y="4947" fill="#000000" font-family="Arial" font-size="10">+ session (_a: Address ) AliasSession</text>
 <polygon points="5970,5333 5970,4477 6528,4477 6528,5333 5970,5333" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="5970,4501 6528,4501" stroke="#0000ff" fill="none"/>
 <polyline points="5970,4813 6528,4813" stroke="#0000ff" fill="none"/>
 <text x="6206" y="4491" fill="#000000" font-family="Arial" font-size="10">ring::AlsaLayer</text>
 <text x="5978" y="4515" fill="#000000" font-family="Arial" font-size="10">- audioPlugin_: std::string</text>
 <text x="5978" y="4531" fill="#000000" font-family="Arial" font-size="10">- audioThread_: std::unique_ptr</text>
 <text x="5978" y="4547" fill="#000000" font-family="Arial" font-size="10">- captureBuff_: AudioBuffer</text>
 <text x="5978" y="4563" fill="#000000" font-family="Arial" font-size="10">- captureHandle_: snd_pcm_t *</text>
 <text x="5978" y="4579" fill="#000000" font-family="Arial" font-size="10">- captureIBuff_: std::vector</text>
 <text x="5978" y="4595" fill="#000000" font-family="Arial" font-size="10">- indexIn_: int</text>
 <text x="5978" y="4611" fill="#000000" font-family="Arial" font-size="10">- indexOut_: int</text>
 <text x="5978" y="4627" fill="#000000" font-family="Arial" font-size="10">- indexRing_: int</text>
 <text x="5978" y="4643" fill="#000000" font-family="Arial" font-size="10">- is_capture_open_: bool</text>
 <text x="5978" y="4659" fill="#000000" font-family="Arial" font-size="10">- is_capture_prepared_: bool</text>
 <text x="5978" y="4675" fill="#000000" font-family="Arial" font-size="10">- is_capture_running_: bool</text>
 <text x="5978" y="4691" fill="#000000" font-family="Arial" font-size="10">- is_playback_open_: bool</text>
 <text x="5978" y="4707" fill="#000000" font-family="Arial" font-size="10">- is_playback_prepared_: bool</text>
 <text x="5978" y="4723" fill="#000000" font-family="Arial" font-size="10">- is_playback_running_: bool</text>
 <text x="5978" y="4739" fill="#000000" font-family="Arial" font-size="10">- mainRingBuffer_: std::shared_ptr</text>
 <text x="5978" y="4755" fill="#000000" font-family="Arial" font-size="10">- playbackBuff_: AudioBuffer</text>
 <text x="5978" y="4771" fill="#000000" font-family="Arial" font-size="10">- playbackHandle_: snd_pcm_t *</text>
 <text x="5978" y="4787" fill="#000000" font-family="Arial" font-size="10">- playbackIBuff_: std::vector</text>
 <text x="5978" y="4803" fill="#000000" font-family="Arial" font-size="10">- ringtoneHandle_: snd_pcm_t *</text>
 <text x="5978" y="4827" fill="#000000" font-family="Arial" font-size="10">+ startStream () void Virtual</text>
 <text x="5978" y="4843" fill="#000000" font-family="Arial" font-size="10">+ stopStream () void Virtual</text>
 <text x="5978" y="4859" fill="#000000" font-family="Arial" font-size="10">+ ~AlsaLayer () Virtual</text>
 <text x="5978" y="4875" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceIndex (description: const std::string &amp; , type: DeviceType ) int Virtual</text>
 <text x="5978" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceName (index: int , type: DeviceType ) std::string Virtual</text>
 <text x="5978" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getCaptureDeviceList () std::vector Virtual</text>
 <text x="5978" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getIndexCapture () int Virtual</text>
 <text x="5978" y="4939" fill="#000000" font-family="Arial" font-size="10">+ getIndexPlayback () int Virtual</text>
 <text x="5978" y="4955" fill="#000000" font-family="Arial" font-size="10">+ getIndexRingtone () int Virtual</text>
 <text x="5978" y="4971" fill="#000000" font-family="Arial" font-size="10">+ getPlaybackDeviceList () std::vector Virtual</text>
 <text x="5978" y="4987" fill="#000000" font-family="Arial" font-size="10">+ soundCardIndexExists (card: int , stream: DeviceType ) bool</text>
 <text x="5978" y="5003" fill="#000000" font-family="Arial" font-size="10">+ AlsaLayer (pref: const AudioPreference &amp; ) </text>
 <text x="5978" y="5019" fill="#000000" font-family="Arial" font-size="10">+ AlsaLayer () </text>
 <text x="5978" y="5035" fill="#000000" font-family="Arial" font-size="10">+ buildDeviceTopo (plugin: const std::string &amp; , card: int ) std::string</text>
 <text x="5978" y="5051" fill="#000000" font-family="Arial" font-size="10">+ capture () void</text>
 <text x="5978" y="5067" fill="#000000" font-family="Arial" font-size="10">+ operator= () AlsaLayer &amp;</text>
 <text x="5978" y="5083" fill="#000000" font-family="Arial" font-size="10">+ playback () void</text>
 <text x="5978" y="5099" fill="#000000" font-family="Arial" font-size="10">+ ringtone () void</text>
 <text x="5978" y="5115" fill="#000000" font-family="Arial" font-size="10">- updatePreference (preference: AudioPreference &amp; , index: int , type: DeviceType ) void Virtual</text>
 <text x="5978" y="5131" fill="#000000" font-family="Arial" font-size="10">- alsa_set_params (pcm_handle: snd_pcm_t *) bool</text>
 <text x="5978" y="5147" fill="#000000" font-family="Arial" font-size="10">- closeCaptureStream () void</text>
 <text x="5978" y="5163" fill="#000000" font-family="Arial" font-size="10">- closePlaybackStream () void</text>
 <text x="5978" y="5179" fill="#000000" font-family="Arial" font-size="10">- openDevice (snd_pcm_t **pcm, dev: const std::string &amp; , stream: snd_pcm_stream_t ) bool</text>
 <text x="5978" y="5195" fill="#000000" font-family="Arial" font-size="10">- prepareCaptureStream () void</text>
 <text x="5978" y="5211" fill="#000000" font-family="Arial" font-size="10">- preparePlaybackStream () void</text>
 <text x="5978" y="5227" fill="#000000" font-family="Arial" font-size="10">- read (buffer: AudioSample *, frames: int ) int</text>
 <text x="5978" y="5243" fill="#000000" font-family="Arial" font-size="10">- startCaptureStream () void</text>
 <text x="5978" y="5259" fill="#000000" font-family="Arial" font-size="10">- startPlaybackStream () void</text>
 <text x="5978" y="5275" fill="#000000" font-family="Arial" font-size="10">- stopCaptureStream () void</text>
 <text x="5978" y="5291" fill="#000000" font-family="Arial" font-size="10">- stopPlaybackStream () void</text>
 <text x="5978" y="5307" fill="#000000" font-family="Arial" font-size="10">- write (buffer: AudioSample *, frames: int , handle: snd_pcm_t *) void</text>
 <text x="5978" y="5323" fill="#000000" font-family="Arial" font-size="10">- getAudioDeviceIndexMap (getCapture: bool ) std::vector</text>
 <polygon points="8032,3399 8032,2447 8586,2447 8586,3399 8032,3399" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="8032,2471 8586,2471" stroke="#0000ff" fill="none"/>
 <polyline points="8032,2719 8586,2719" stroke="#0000ff" fill="none"/>
 <text x="8262" y="2461" fill="#000000" font-family="Arial" font-size="10">ring::AudioLayer</text>
 <text x="8040" y="2485" fill="#000000" font-family="Arial" font-size="10"># audioFormat_: AudioFormat</text>
 <text x="8040" y="2501" fill="#000000" font-family="Arial" font-size="10"># audioInputFormat_: AudioFormat</text>
 <text x="8040" y="2517" fill="#000000" font-family="Arial" font-size="10"># captureGain_: double</text>
 <text x="8040" y="2533" fill="#000000" font-family="Arial" font-size="10"># inputResampler_: std::unique_ptr</text>
 <text x="8040" y="2549" fill="#000000" font-family="Arial" font-size="10"># isCaptureMuted_: bool</text>
 <text x="8040" y="2565" fill="#000000" font-family="Arial" font-size="10"># isPlaybackMuted_: bool</text>
 <text x="8040" y="2581" fill="#000000" font-family="Arial" font-size="10"># playbackBuffer_: AudioBuffer</text>
 <text x="8040" y="2597" fill="#000000" font-family="Arial" font-size="10"># playbackGain_: double</text>
 <text x="8040" y="2613" fill="#000000" font-family="Arial" font-size="10"># playbackResampleBuffer_: AudioBuffer</text>
 <text x="8040" y="2629" fill="#000000" font-family="Arial" font-size="10"># resampler_: std::unique_ptr</text>
 <text x="8040" y="2645" fill="#000000" font-family="Arial" font-size="10"># ringtoneBuffer_: AudioBuffer</text>
 <text x="8040" y="2661" fill="#000000" font-family="Arial" font-size="10"># ringtoneResampleBuffer_: AudioBuffer</text>
 <text x="8040" y="2677" fill="#000000" font-family="Arial" font-size="10"># startedCv_: mutable std::condition_variable</text>
 <text x="8040" y="2693" fill="#000000" font-family="Arial" font-size="10"># urgentRingBuffer_: RingBuffer</text>
 <text x="8040" y="2709" fill="#000000" font-family="Arial" font-size="10">- lastNotificationTime_: std::chrono::system_clock::time_point</text>
 <text x="8040" y="2733" fill="#000000" font-family="Arial" font-size="10">+ ~AudioLayer () Virtual</text>
 <text x="8040" y="2749" fill="#000000" font-family="Arial" font-size="10">+ startStream () void Pure Virtual</text>
 <text x="8040" y="2765" fill="#000000" font-family="Arial" font-size="10">+ stopStream () void Pure Virtual</text>
 <text x="8040" y="2781" fill="#000000" font-family="Arial" font-size="10">+ updatePreference (pref: AudioPreference &amp; , index: int , type: DeviceType ) void Pure Virtual</text>
 <text x="8040" y="2797" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceIndex (name: const std::string &amp; , type: DeviceType ) int Pure Virtual</text>
 <text x="8040" y="2813" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceName (index: int , type: DeviceType ) std::string Pure Virtual</text>
 <text x="8040" y="2829" fill="#000000" font-family="Arial" font-size="10">+ getCaptureDeviceList () std::vector Pure Virtual</text>
 <text x="8040" y="2845" fill="#000000" font-family="Arial" font-size="10">+ getIndexCapture () int Pure Virtual</text>
 <text x="8040" y="2861" fill="#000000" font-family="Arial" font-size="10">+ getIndexPlayback () int Pure Virtual</text>
 <text x="8040" y="2877" fill="#000000" font-family="Arial" font-size="10">+ getIndexRingtone () int Pure Virtual</text>
 <text x="8040" y="2893" fill="#000000" font-family="Arial" font-size="10">+ getPlaybackDeviceList () std::vector Pure Virtual</text>
 <text x="8040" y="2909" fill="#000000" font-family="Arial" font-size="10">+ AudioLayer () </text>
 <text x="8040" y="2925" fill="#000000" font-family="Arial" font-size="10">+ AudioLayer (pref: const AudioPreference &amp; ) </text>
 <text x="8040" y="2941" fill="#000000" font-family="Arial" font-size="10">+ flushMain () void</text>
 <text x="8040" y="2957" fill="#000000" font-family="Arial" font-size="10">+ flushUrgent () void</text>
 <text x="8040" y="2973" fill="#000000" font-family="Arial" font-size="10">+ muteCapture (muted: bool ) void</text>
 <text x="8040" y="2989" fill="#000000" font-family="Arial" font-size="10">+ mutePlayback (muted: bool ) void</text>
 <text x="8040" y="3005" fill="#000000" font-family="Arial" font-size="10">+ muteRingtone (muted: bool ) void</text>
 <text x="8040" y="3021" fill="#000000" font-family="Arial" font-size="10">+ notifyIncomingCall () void</text>
 <text x="8040" y="3037" fill="#000000" font-family="Arial" font-size="10">+ operator= () AudioLayer &amp;</text>
 <text x="8040" y="3053" fill="#000000" font-family="Arial" font-size="10">+ putUrgent (buffer: AudioBuffer &amp; ) void</text>
 <text x="8040" y="3069" fill="#000000" font-family="Arial" font-size="10">+ putUrgent (buffer: AudioBuffer &amp; ) void</text>
 <text x="8040" y="3085" fill="#000000" font-family="Arial" font-size="10">+ setCaptureGain (gain: double ) void</text>
 <text x="8040" y="3101" fill="#000000" font-family="Arial" font-size="10">+ setPlaybackGain (gain: double ) void</text>
 <text x="8040" y="3117" fill="#000000" font-family="Arial" font-size="10">+ waitForStart (rel_time: const std::chrono::duration &amp; ) bool</text>
 <text x="8040" y="3133" fill="#000000" font-family="Arial" font-size="10">+ getCaptureGain () double</text>
 <text x="8040" y="3149" fill="#000000" font-family="Arial" font-size="10">+ getFormat () AudioFormat</text>
 <text x="8040" y="3165" fill="#000000" font-family="Arial" font-size="10">+ getPlaybackGain () double</text>
 <text x="8040" y="3181" fill="#000000" font-family="Arial" font-size="10">+ getSampleRate () unsigned int</text>
 <text x="8040" y="3197" fill="#000000" font-family="Arial" font-size="10">+ isCaptureMuted () bool</text>
 <text x="8040" y="3213" fill="#000000" font-family="Arial" font-size="10">+ isPlaybackMuted () bool</text>
 <text x="8040" y="3229" fill="#000000" font-family="Arial" font-size="10">+ isRingtoneMuted () bool</text>
 <text x="8040" y="3245" fill="#000000" font-family="Arial" font-size="10">+ isStarted () bool</text>
 <text x="8040" y="3261" fill="#000000" font-family="Arial" font-size="10"># dcblocker_ () DcBlocker</text>
 <text x="8040" y="3277" fill="#000000" font-family="Arial" font-size="10"># devicesChanged () void</text>
 <text x="8040" y="3293" fill="#000000" font-family="Arial" font-size="10"># getToPlay (format: AudioFormat , writableSamples: size_t ) const AudioBuffer &amp;</text>
 <text x="8040" y="3309" fill="#000000" font-family="Arial" font-size="10"># getToRing (format: AudioFormat , writableSamples: size_t ) const AudioBuffer &amp;</text>
 <text x="8040" y="3325" fill="#000000" font-family="Arial" font-size="10"># hardwareFormatAvailable (playback: AudioFormat ) void</text>
 <text x="8040" y="3341" fill="#000000" font-family="Arial" font-size="10"># hardwareInputFormatAvailable (capture: AudioFormat ) void</text>
 <text x="8040" y="3357" fill="#000000" font-family="Arial" font-size="10"># isRingtoneMuted_ () bool</text>
 <text x="8040" y="3373" fill="#000000" font-family="Arial" font-size="10"># mutex_ () mutable std::mutex</text>
 <text x="8040" y="3389" fill="#000000" font-family="Arial" font-size="10"># status_ () std::atomic</text>
 <polyline points="6236,4477 6242,4386 6251,4292 6265,4194 6284,4096 6308,3997 6339,3900 6377,3805 6422,3714 6475,3628 6537,3548 6661,3426 6800,3321 6952,3232 7111,3158 7275,3096 7439,3046 7599,3007 7752,2978 7895,2956 8022,2941" stroke="#CC0044" fill="none"/>
 <polygon points="8022,2938 8032,2940 8022,2945 8022,2938" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="10094,5013 10094,4797 10300,4797 10300,5013 10094,5013" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="10094,4821 10300,4821" stroke="#0000ff" fill="none"/>
 <polyline points="10094,4877 10300,4877" stroke="#0000ff" fill="none"/>
 <text x="10150" y="4811" fill="#000000" font-family="Arial" font-size="10">ring::AlsaThread</text>
 <text x="10102" y="4835" fill="#000000" font-family="Arial" font-size="10">- alsa_: AlsaLayer *</text>
 <text x="10102" y="4851" fill="#000000" font-family="Arial" font-size="10">- running_: std::atomic</text>
 <text x="10102" y="4867" fill="#000000" font-family="Arial" font-size="10">- thread_: std::thread</text>
 <text x="10102" y="4891" fill="#000000" font-family="Arial" font-size="10">+ AlsaThread (alsa: AlsaLayer *) </text>
 <text x="10102" y="4907" fill="#000000" font-family="Arial" font-size="10">+ AlsaThread () </text>
 <text x="10102" y="4923" fill="#000000" font-family="Arial" font-size="10">+ initAudioLayer () void</text>
 <text x="10102" y="4939" fill="#000000" font-family="Arial" font-size="10">+ operator= () AlsaThread &amp;</text>
 <text x="10102" y="4955" fill="#000000" font-family="Arial" font-size="10">+ start () void</text>
 <text x="10102" y="4971" fill="#000000" font-family="Arial" font-size="10">+ ~AlsaThread () </text>
 <text x="10102" y="4987" fill="#000000" font-family="Arial" font-size="10">+ isRunning () bool</text>
 <text x="10102" y="5003" fill="#000000" font-family="Arial" font-size="10">- run () void</text>
 <polygon points="10318,4981 10318,4829 10532,4829 10532,4981 10318,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="10318,4853 10532,4853" stroke="#0000ff" fill="none"/>
 <polyline points="10318,4957 10532,4957" stroke="#0000ff" fill="none"/>
 <text x="10326" y="4843" fill="#000000" font-family="Arial" font-size="10">ring::RingAccount::ArchiveContent</text>
 <text x="10326" y="4867" fill="#000000" font-family="Arial" font-size="10">+ ca_key: std::shared_ptr</text>
 <text x="10326" y="4883" fill="#000000" font-family="Arial" font-size="10">+ config: std::map</text>
 <text x="10326" y="4899" fill="#000000" font-family="Arial" font-size="10">+ contacts: std::map</text>
 <text x="10326" y="4915" fill="#000000" font-family="Arial" font-size="10">+ eth_key: std::vector</text>
 <text x="10326" y="4931" fill="#000000" font-family="Arial" font-size="10">+ id: dht::crypto::Identity</text>
 <text x="10326" y="4947" fill="#000000" font-family="Arial" font-size="10">+ revoked: std::shared_ptr</text>
 <text x="10423" y="4971" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="10550,5037 10550,4773 10686,4773 10686,5037 10550,5037" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="10550,4797 10686,4797" stroke="#0000ff" fill="none"/>
 <polyline points="10550,4821 10686,4821" stroke="#0000ff" fill="none"/>
 <text x="10585" y="4787" fill="#000000" font-family="Arial" font-size="10">AudioBuffer</text>
 <text x="10616" y="4811" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="10558" y="4835" fill="#000000" font-family="Arial" font-size="10">+ applyGain () </text>
 <text x="10558" y="4851" fill="#000000" font-family="Arial" font-size="10">+ channels () </text>
 <text x="10558" y="4867" fill="#000000" font-family="Arial" font-size="10">+ copy () </text>
 <text x="10558" y="4883" fill="#000000" font-family="Arial" font-size="10">+ deinterleave () </text>
 <text x="10558" y="4899" fill="#000000" font-family="Arial" font-size="10">+ frames () </text>
 <text x="10558" y="4915" fill="#000000" font-family="Arial" font-size="10">+ getFormat () </text>
 <text x="10558" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getSampleRate () </text>
 <text x="10558" y="4947" fill="#000000" font-family="Arial" font-size="10">+ interleave () </text>
 <text x="10558" y="4963" fill="#000000" font-family="Arial" font-size="10">+ resize () </text>
 <text x="10558" y="4979" fill="#000000" font-family="Arial" font-size="10">+ setChannelNum () </text>
 <text x="10558" y="4995" fill="#000000" font-family="Arial" font-size="10">+ setFormat () </text>
 <text x="10558" y="5011" fill="#000000" font-family="Arial" font-size="10">+ setSampleRate () </text>
 <text x="10558" y="5027" fill="#000000" font-family="Arial" font-size="10">+ AudioBuffer () </text>
 <polygon points="10705,5037 10705,4773 11024,4773 11024,5037 10705,5037" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="10705,4797 11024,4797" stroke="#0000ff" fill="none"/>
 <polyline points="10705,4917 11024,4917" stroke="#0000ff" fill="none"/>
 <text x="10814" y="4787" fill="#000000" font-family="Arial" font-size="10">ring::AudioDevice</text>
 <text x="10713" y="4811" fill="#000000" font-family="Arial" font-size="10">+ bufferSizeFrames_: UInt32</text>
 <text x="10713" y="4827" fill="#000000" font-family="Arial" font-size="10">+ channels_: int</text>
 <text x="10713" y="4843" fill="#000000" font-family="Arial" font-size="10">+ format_: AudioStreamBasicDescription</text>
 <text x="10713" y="4859" fill="#000000" font-family="Arial" font-size="10">+ id_: AudioDeviceID</text>
 <text x="10713" y="4875" fill="#000000" font-family="Arial" font-size="10">+ isInput_: bool</text>
 <text x="10713" y="4891" fill="#000000" font-family="Arial" font-size="10">+ name_: std::string</text>
 <text x="10713" y="4907" fill="#000000" font-family="Arial" font-size="10">+ safetyOffset_: UInt32</text>
 <text x="10713" y="4931" fill="#000000" font-family="Arial" font-size="10">+ AudioDevice () </text>
 <text x="10713" y="4947" fill="#000000" font-family="Arial" font-size="10">+ AudioDevice (devid: AudioDeviceID , isInput: bool ) </text>
 <text x="10713" y="4963" fill="#000000" font-family="Arial" font-size="10">+ init (devid: AudioDeviceID , isInput: bool ) void</text>
 <text x="10713" y="4979" fill="#000000" font-family="Arial" font-size="10">+ setBufferSize (size: UInt32 ) void</text>
 <text x="10713" y="4995" fill="#000000" font-family="Arial" font-size="10">+ valid () bool</text>
 <text x="10713" y="5011" fill="#000000" font-family="Arial" font-size="10">- countChannels () int</text>
 <text x="10713" y="5027" fill="#000000" font-family="Arial" font-size="10">- getName () std::string</text>
 <polygon points="11042,4965 11042,4845 11467,4845 11467,4965 11042,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="11042,4869 11467,4869" stroke="#0000ff" fill="none"/>
 <polyline points="11042,4909 11467,4909" stroke="#0000ff" fill="none"/>
 <text x="11213" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::AudioFile</text>
 <text x="11050" y="4883" fill="#000000" font-family="Arial" font-size="10"># filepath_: std::string</text>
 <text x="11050" y="4899" fill="#000000" font-family="Arial" font-size="10">- updatePlaybackScale_: unsigned</text>
 <text x="11050" y="4923" fill="#000000" font-family="Arial" font-size="10">+ AudioFile (fileName: const std::string &amp; , sampleRate: unsigned int ) </text>
 <text x="11050" y="4939" fill="#000000" font-family="Arial" font-size="10">+ getFilePath () std::string</text>
 <text x="11050" y="4955" fill="#000000" font-family="Arial" font-size="10">- onBufferFinish () void Virtual</text>
 <polygon points="11343,3071 11343,2775 11662,2775 11662,3071 11343,3071" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="11343,2799 11662,2799" stroke="#0000ff" fill="none"/>
 <polyline points="11343,2823 11662,2823" stroke="#0000ff" fill="none"/>
 <text x="11457" y="2789" fill="#000000" font-family="Arial" font-size="10">ring::AudioLoop</text>
 <text x="11500" y="2813" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="11351" y="2837" fill="#000000" font-family="Arial" font-size="10">+ ~AudioLoop () Virtual</text>
 <text x="11351" y="2853" fill="#000000" font-family="Arial" font-size="10">+ AudioLoop () </text>
 <text x="11351" y="2869" fill="#000000" font-family="Arial" font-size="10">+ AudioLoop (sampleRate: unsigned int ) </text>
 <text x="11351" y="2885" fill="#000000" font-family="Arial" font-size="10">+ AudioLoop () </text>
 <text x="11351" y="2901" fill="#000000" font-family="Arial" font-size="10">+ getNext (output: AudioBuffer &amp; , gain: double ) void</text>
 <text x="11351" y="2917" fill="#000000" font-family="Arial" font-size="10">+ getNext (output: AudioBuffer &amp; , gain: double ) void</text>
 <text x="11351" y="2933" fill="#000000" font-family="Arial" font-size="10">+ operator= (AudioLoop) AudioLoop &amp;</text>
 <text x="11351" y="2949" fill="#000000" font-family="Arial" font-size="10">+ operator= () AudioLoop &amp;</text>
 <text x="11351" y="2965" fill="#000000" font-family="Arial" font-size="10">+ reset () void</text>
 <text x="11351" y="2981" fill="#000000" font-family="Arial" font-size="10">+ seek (relative_position: double ) void</text>
 <text x="11351" y="2997" fill="#000000" font-family="Arial" font-size="10">+ getFormat () AudioFormat</text>
 <text x="11351" y="3013" fill="#000000" font-family="Arial" font-size="10">+ getSize () size_t</text>
 <text x="11351" y="3029" fill="#000000" font-family="Arial" font-size="10"># buffer_ () AudioBuffer *</text>
 <text x="11351" y="3045" fill="#000000" font-family="Arial" font-size="10"># pos_ () size_t</text>
 <text x="11351" y="3061" fill="#000000" font-family="Arial" font-size="10">- onBufferFinish () void Virtual</text>
 <polyline points="11261,4845 11274,4742 11292,4599 11314,4424 11339,4227 11365,4017 11392,3802 11418,3593 11443,3396 11464,3223 11482,3081" stroke="#CC0044" fill="none"/>
 <polygon points="11479,3081 11484,3071 11486,3082 11479,3081" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="12036,4941 12036,4869 12325,4869 12325,4941 12036,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="12036,4893 12325,4893" stroke="#0000ff" fill="none"/>
 <polyline points="12036,4917 12325,4917" stroke="#0000ff" fill="none"/>
 <text x="12110" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::AudioFileException</text>
 <text x="12178" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="12044" y="4931" fill="#000000" font-family="Arial" font-size="10">+ AudioFileException (str: const std::string &amp; ) </text>
 <polygon points="13222,2959 13222,2887 13314,2887 13314,2959 13222,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="13222,2911 13314,2911" stroke="#0000ff" fill="none"/>
 <polyline points="13222,2935 13314,2935" stroke="#0000ff" fill="none"/>
 <text x="13230" y="2901" fill="#000000" font-family="Arial" font-size="10">runtime_error</text>
 <text x="13266" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="13266" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="12174,4869 12165,4804 12154,4712 12145,4597 12139,4464 12140,4318 12150,4162 12172,4003 12208,3844 12261,3691 12333,3548 12405,3447 12491,3355 12586,3273 12687,3199 12791,3135 12892,3079 12989,3032 13077,2994 13153,2964 13212,2942" stroke="#CC0044" fill="none"/>
 <polygon points="13211,2939 13222,2939 13214,2945 13211,2939" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="14375,5029 14375,4781 14764,4781 14764,5029 14375,5029" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="14375,4805 14764,4805" stroke="#0000ff" fill="none"/>
 <polyline points="14375,4861 14764,4861" stroke="#0000ff" fill="none"/>
 <text x="14518" y="4795" fill="#000000" font-family="Arial" font-size="10">ring::AudioFormat</text>
 <text x="14383" y="4819" fill="#000000" font-family="Arial" font-size="10">+ DEFAULT_SAMPLE_RATE: const constexpr unsigned= 48000</text>
 <text x="14383" y="4835" fill="#000000" font-family="Arial" font-size="10">+ nb_channels: unsigned</text>
 <text x="14383" y="4851" fill="#000000" font-family="Arial" font-size="10">+ sample_rate: unsigned</text>
 <text x="14383" y="4875" fill="#000000" font-family="Arial" font-size="10">+ DEFAULT () const AudioFormat</text>
 <text x="14383" y="4891" fill="#000000" font-family="Arial" font-size="10">+ MONO () const AudioFormat</text>
 <text x="14383" y="4907" fill="#000000" font-family="Arial" font-size="10">+ NONE () const AudioFormat</text>
 <text x="14383" y="4923" fill="#000000" font-family="Arial" font-size="10">+ STEREO () const AudioFormat</text>
 <text x="14383" y="4939" fill="#000000" font-family="Arial" font-size="10">+ AudioFormat (sr: unsigned , c: unsigned ) constexpr</text>
 <text x="14383" y="4955" fill="#000000" font-family="Arial" font-size="10">+ getBandwidth (delay_ms: unsigned ) size_t</text>
 <text x="14383" y="4971" fill="#000000" font-family="Arial" font-size="10">+ getBytesPerFrame () size_t</text>
 <text x="14383" y="4987" fill="#000000" font-family="Arial" font-size="10">+ operator!= (b: const AudioFormat &amp; ) bool</text>
 <text x="14383" y="5003" fill="#000000" font-family="Arial" font-size="10">+ operator== (b: const AudioFormat &amp; ) bool</text>
 <text x="14383" y="5019" fill="#000000" font-family="Arial" font-size="10">+ toString () std::string</text>
 <polygon points="15302,355 15302,283 15417,283 15417,355 15302,355" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="15302,307 15417,307" stroke="#0000ff" fill="none"/>
 <polyline points="15302,331 15417,331" stroke="#0000ff" fill="none"/>
 <text x="15310" y="297" fill="#000000" font-family="Arial" font-size="10">ring::AudioFrame</text>
 <text x="15357" y="321" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="15357" y="345" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="15538,125 15538,5 15730,5 15730,125 15538,125" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="15538,29 15730,29" stroke="#0000ff" fill="none"/>
 <polyline points="15538,53 15730,53" stroke="#0000ff" fill="none"/>
 <text x="15584" y="19" fill="#000000" font-family="Arial" font-size="10">ring::MediaFrame</text>
 <text x="15546" y="43" fill="#000000" font-family="Arial" font-size="10"># frame_: std::unique_ptr</text>
 <text x="15546" y="67" fill="#000000" font-family="Arial" font-size="10">+ reset () void Virtual</text>
 <text x="15546" y="83" fill="#000000" font-family="Arial" font-size="10">+ ~MediaFrame () Pure Virtual</text>
 <text x="15546" y="99" fill="#000000" font-family="Arial" font-size="10">+ MediaFrame () </text>
 <text x="15546" y="115" fill="#000000" font-family="Arial" font-size="10">+ pointer () AVFrame *</text>
 <polyline points="15366,283 15369,272 15373,260 15377,248 15382,235 15387,222 15393,209 15400,197 15408,184 15417,173 15426,162 15435,154 15444,146 15454,138 15464,131 15474,124 15485,118 15495,112 15506,107 15517,102 15528,97" stroke="#CC0044" fill="none"/>
 <polygon points="15527,94 15538,93 15530,100 15527,94" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="17615,4941 17615,4869 17905,4869 17905,4941 17615,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="17615,4893 17905,4893" stroke="#0000ff" fill="none"/>
 <polyline points="17615,4917 17905,4917" stroke="#0000ff" fill="none"/>
 <text x="17671" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::AudioMuted</text>
 <text x="17623" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;AudioMuted&quot;</text>
 <text x="17758" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="17923,5093 17923,4717 18501,4717 18501,5093 17923,5093" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="17923,4741 18501,4741" stroke="#0000ff" fill="none"/>
 <polyline points="17923,4845 18501,4845" stroke="#0000ff" fill="none"/>
 <text x="18140" y="4731" fill="#000000" font-family="Arial" font-size="10">ring::opensl::AudioPlayer</text>
 <text x="17931" y="4755" fill="#000000" font-family="Arial" font-size="10">+ m_: std::mutex</text>
 <text x="17931" y="4771" fill="#000000" font-family="Arial" font-size="10">- outputMixObjectItf_: SLObjectItf</text>
 <text x="17931" y="4787" fill="#000000" font-family="Arial" font-size="10">- playBufferQueueItf_: SLAndroidSimpleBufferQueueItf</text>
 <text x="17931" y="4803" fill="#000000" font-family="Arial" font-size="10">- playItf_: SLPlayItf</text>
 <text x="17931" y="4819" fill="#000000" font-family="Arial" font-size="10">- playerObjectItf_: SLObjectItf</text>
 <text x="17931" y="4835" fill="#000000" font-family="Arial" font-size="10">- sampleInfo_: ring::AudioFormat</text>
 <text x="17931" y="4859" fill="#000000" font-family="Arial" font-size="10">+ dbgGetDevBufCount () size_t</text>
 <text x="17931" y="4875" fill="#000000" font-family="Arial" font-size="10">+ playAudioBuffers (count: unsigned ) void</text>
 <text x="17931" y="4891" fill="#000000" font-family="Arial" font-size="10">+ processSLCallback (bq: SLAndroidSimpleBufferQueueItf ) void</text>
 <text x="17931" y="4907" fill="#000000" font-family="Arial" font-size="10">+ registerCallback (cb: EngineCallback ) void</text>
 <text x="17931" y="4923" fill="#000000" font-family="Arial" font-size="10">+ setBufQueue (playQ: AudioQueue *, freeQ: AudioQueue *) void</text>
 <text x="17931" y="4939" fill="#000000" font-family="Arial" font-size="10">+ start () bool</text>
 <text x="17931" y="4955" fill="#000000" font-family="Arial" font-size="10">+ stop () void</text>
 <text x="17931" y="4971" fill="#000000" font-family="Arial" font-size="10">+ waiting_ () std::atomic_bool</text>
 <text x="17931" y="4987" fill="#000000" font-family="Arial" font-size="10">+ ~AudioPlayer () </text>
 <text x="17931" y="5003" fill="#000000" font-family="Arial" font-size="10">+ started () bool</text>
 <text x="17931" y="5019" fill="#000000" font-family="Arial" font-size="10">- callback_ () EngineCallback</text>
 <text x="17931" y="5035" fill="#000000" font-family="Arial" font-size="10">- devShadowQueue_ () AudioQueue</text>
 <text x="17931" y="5051" fill="#000000" font-family="Arial" font-size="10">- freeQueue_ () AudioQueue *</text>
 <text x="17931" y="5067" fill="#000000" font-family="Arial" font-size="10">- playQueue_ () AudioQueue *</text>
 <text x="17931" y="5083" fill="#000000" font-family="Arial" font-size="10">+ AudioPlayer (sampleFormat: ring::AudioFormat , slEngine: SLEngineItf , streamType: SLint32 ) </text>
 <polygon points="1249,1881 1249,929 1594,929 1594,1881 1249,1881" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="1249,953 1594,953" stroke="#0000ff" fill="none"/>
 <polyline points="1249,1249 1594,1249" stroke="#0000ff" fill="none"/>
 <text x="1359" y="943" fill="#000000" font-family="Arial" font-size="10">ring::AudioPreference</text>
 <text x="1257" y="967" fill="#000000" font-family="Arial" font-size="10">- CONFIG_LABEL: constexpr const char *const= &quot;audio&quot;</text>
 <text x="1257" y="983" fill="#000000" font-family="Arial" font-size="10">- agcEnabled_: bool</text>
 <text x="1257" y="999" fill="#000000" font-family="Arial" font-size="10">- alsaCardin_: int</text>
 <text x="1257" y="1015" fill="#000000" font-family="Arial" font-size="10">- alsaCardout_: int</text>
 <text x="1257" y="1031" fill="#000000" font-family="Arial" font-size="10">- alsaCardring_: int</text>
 <text x="1257" y="1047" fill="#000000" font-family="Arial" font-size="10">- alsaPlugin_: std::string</text>
 <text x="1257" y="1063" fill="#000000" font-family="Arial" font-size="10">- alsaSmplrate_: int</text>
 <text x="1257" y="1079" fill="#000000" font-family="Arial" font-size="10">- alwaysRecording_: bool</text>
 <text x="1257" y="1095" fill="#000000" font-family="Arial" font-size="10">- audioApi_: std::string</text>
 <text x="1257" y="1111" fill="#000000" font-family="Arial" font-size="10">- captureMuted_: bool</text>
 <text x="1257" y="1127" fill="#000000" font-family="Arial" font-size="10">- denoise_: bool</text>
 <text x="1257" y="1143" fill="#000000" font-family="Arial" font-size="10">- playbackMuted_: bool</text>
 <text x="1257" y="1159" fill="#000000" font-family="Arial" font-size="10">- pulseDevicePlayback_: std::string</text>
 <text x="1257" y="1175" fill="#000000" font-family="Arial" font-size="10">- pulseDeviceRecord_: std::string</text>
 <text x="1257" y="1191" fill="#000000" font-family="Arial" font-size="10">- pulseDeviceRingtone_: std::string</text>
 <text x="1257" y="1207" fill="#000000" font-family="Arial" font-size="10">- recordpath_: std::string</text>
 <text x="1257" y="1223" fill="#000000" font-family="Arial" font-size="10">- volumemic_: double</text>
 <text x="1257" y="1239" fill="#000000" font-family="Arial" font-size="10">- volumespkr_: double</text>
 <text x="1257" y="1263" fill="#000000" font-family="Arial" font-size="10">+ serialize (out: YAML::Emitter &amp; ) void Virtual</text>
 <text x="1257" y="1279" fill="#000000" font-family="Arial" font-size="10">+ unserialize (in: const YAML::Node &amp; ) void Virtual</text>
 <text x="1257" y="1295" fill="#000000" font-family="Arial" font-size="10">+ AudioPreference () </text>
 <text x="1257" y="1311" fill="#000000" font-family="Arial" font-size="10">+ createAudioLayer () AudioLayer *</text>
 <text x="1257" y="1327" fill="#000000" font-family="Arial" font-size="10">+ setAGCState (enabled: bool ) void</text>
 <text x="1257" y="1343" fill="#000000" font-family="Arial" font-size="10">+ setAlsaCardin (c: int ) void</text>
 <text x="1257" y="1359" fill="#000000" font-family="Arial" font-size="10">+ setAlsaCardout (c: int ) void</text>
 <text x="1257" y="1375" fill="#000000" font-family="Arial" font-size="10">+ setAlsaCardring (c: int ) void</text>
 <text x="1257" y="1391" fill="#000000" font-family="Arial" font-size="10">+ setAlsaPlugin (p: const std::string &amp; ) void</text>
 <text x="1257" y="1407" fill="#000000" font-family="Arial" font-size="10">+ setAlsaSmplrate (r: int ) void</text>
 <text x="1257" y="1423" fill="#000000" font-family="Arial" font-size="10">+ setAudioApi (api: const std::string &amp; ) void</text>
 <text x="1257" y="1439" fill="#000000" font-family="Arial" font-size="10">+ setCaptureMuted (muted: bool ) void</text>
 <text x="1257" y="1455" fill="#000000" font-family="Arial" font-size="10">+ setIsAlwaysRecording (rec: bool ) void</text>
 <text x="1257" y="1471" fill="#000000" font-family="Arial" font-size="10">+ setNoiseReduce (enabled: bool ) void</text>
 <text x="1257" y="1487" fill="#000000" font-family="Arial" font-size="10">+ setPlaybackMuted (muted: bool ) void</text>
 <text x="1257" y="1503" fill="#000000" font-family="Arial" font-size="10">+ setPulseDevicePlayback (p: const std::string &amp; ) void</text>
 <text x="1257" y="1519" fill="#000000" font-family="Arial" font-size="10">+ setPulseDeviceRecord (r: const std::string &amp; ) void</text>
 <text x="1257" y="1535" fill="#000000" font-family="Arial" font-size="10">+ setPulseDeviceRingtone (r: const std::string &amp; ) void</text>
 <text x="1257" y="1551" fill="#000000" font-family="Arial" font-size="10">+ setRecordPath (r: const std::string &amp; ) bool</text>
 <text x="1257" y="1567" fill="#000000" font-family="Arial" font-size="10">+ setVolumemic (m: double ) void</text>
 <text x="1257" y="1583" fill="#000000" font-family="Arial" font-size="10">+ setVolumespkr (s: double ) void</text>
 <text x="1257" y="1599" fill="#000000" font-family="Arial" font-size="10">+ switchAndCreateAudioLayer () AudioLayer *</text>
 <text x="1257" y="1615" fill="#000000" font-family="Arial" font-size="10">+ getAlsaCardin () int</text>
 <text x="1257" y="1631" fill="#000000" font-family="Arial" font-size="10">+ getAlsaCardout () int</text>
 <text x="1257" y="1647" fill="#000000" font-family="Arial" font-size="10">+ getAlsaCardring () int</text>
 <text x="1257" y="1663" fill="#000000" font-family="Arial" font-size="10">+ getAlsaPlugin () std::string</text>
 <text x="1257" y="1679" fill="#000000" font-family="Arial" font-size="10">+ getAlsaSmplrate () int</text>
 <text x="1257" y="1695" fill="#000000" font-family="Arial" font-size="10">+ getAudioApi () std::string</text>
 <text x="1257" y="1711" fill="#000000" font-family="Arial" font-size="10">+ getCaptureMuted () bool</text>
 <text x="1257" y="1727" fill="#000000" font-family="Arial" font-size="10">+ getIsAlwaysRecording () bool</text>
 <text x="1257" y="1743" fill="#000000" font-family="Arial" font-size="10">+ getNoiseReduce () bool</text>
 <text x="1257" y="1759" fill="#000000" font-family="Arial" font-size="10">+ getPlaybackMuted () bool</text>
 <text x="1257" y="1775" fill="#000000" font-family="Arial" font-size="10">+ getPulseDevicePlayback () std::string</text>
 <text x="1257" y="1791" fill="#000000" font-family="Arial" font-size="10">+ getPulseDeviceRecord () std::string</text>
 <text x="1257" y="1807" fill="#000000" font-family="Arial" font-size="10">+ getPulseDeviceRingtone () std::string</text>
 <text x="1257" y="1823" fill="#000000" font-family="Arial" font-size="10">+ getRecordPath () std::string</text>
 <text x="1257" y="1839" fill="#000000" font-family="Arial" font-size="10">+ getVolumemic () double</text>
 <text x="1257" y="1855" fill="#000000" font-family="Arial" font-size="10">+ getVolumespkr () double</text>
 <text x="1257" y="1871" fill="#000000" font-family="Arial" font-size="10">+ isAGCEnabled () bool</text>
 <polyline points="1421,929 1421,865 1421,800 1421,737 1421,675 1421,615 1421,559 1421,507 1421,459 1421,417 1421,382" stroke="#CC0044" fill="none"/>
 <polygon points="1418,381 1421,371 1425,381 1418,381" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="18520,5109 18520,4701 19135,4701 19135,5109 18520,5109" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="18520,4725 19135,4725" stroke="#0000ff" fill="none"/>
 <polyline points="18520,4893 19135,4893" stroke="#0000ff" fill="none"/>
 <text x="18754" y="4715" fill="#000000" font-family="Arial" font-size="10">ring::AudioReceiveThread</text>
 <text x="18528" y="4739" fill="#000000" font-family="Arial" font-size="10">- SDP_FILENAME: constexpr auto= &quot;dummyFilename&quot;</text>
 <text x="18528" y="4755" fill="#000000" font-family="Arial" font-size="10">- args_: DeviceParams</text>
 <text x="18528" y="4771" fill="#000000" font-family="Arial" font-size="10">- audioDecoder_: std::unique_ptr</text>
 <text x="18528" y="4787" fill="#000000" font-family="Arial" font-size="10">- demuxContext_: std::unique_ptr</text>
 <text x="18528" y="4803" fill="#000000" font-family="Arial" font-size="10">- format_: const AudioFormat &amp;</text>
 <text x="18528" y="4819" fill="#000000" font-family="Arial" font-size="10">- id_: const std::string</text>
 <text x="18528" y="4835" fill="#000000" font-family="Arial" font-size="10">- loop_: ThreadLoop</text>
 <text x="18528" y="4851" fill="#000000" font-family="Arial" font-size="10">- ringbuffer_: std::shared_ptr</text>
 <text x="18528" y="4867" fill="#000000" font-family="Arial" font-size="10">- sdpContext_: std::unique_ptr</text>
 <text x="18528" y="4883" fill="#000000" font-family="Arial" font-size="10">- stream_: std::istringstream</text>
 <text x="18528" y="4907" fill="#000000" font-family="Arial" font-size="10">+ AudioReceiveThread (id: const std::string &amp; , format: const AudioFormat &amp; , sdp: const std::string &amp; ) </text>
 <text x="18528" y="4923" fill="#000000" font-family="Arial" font-size="10">+ AudioReceiveThread () </text>
 <text x="18528" y="4939" fill="#000000" font-family="Arial" font-size="10">+ addIOContext (socketPair: SocketPair &amp; ) void</text>
 <text x="18528" y="4955" fill="#000000" font-family="Arial" font-size="10">+ operator= () AudioReceiveThread &amp;</text>
 <text x="18528" y="4971" fill="#000000" font-family="Arial" font-size="10">+ startLoop () void</text>
 <text x="18528" y="4987" fill="#000000" font-family="Arial" font-size="10">+ ~AudioReceiveThread () </text>
 <text x="18528" y="5003" fill="#000000" font-family="Arial" font-size="10">- interruptCb (data: void *) int</text>
 <text x="18528" y="5019" fill="#000000" font-family="Arial" font-size="10">- readFunction (opaque: void *, buf: uint8_t *, buf_size: int ) int</text>
 <text x="18528" y="5035" fill="#000000" font-family="Arial" font-size="10">- cleanup () void</text>
 <text x="18528" y="5051" fill="#000000" font-family="Arial" font-size="10">- decodeFrame () bool</text>
 <text x="18528" y="5067" fill="#000000" font-family="Arial" font-size="10">- openDecoder () void</text>
 <text x="18528" y="5083" fill="#000000" font-family="Arial" font-size="10">- process () void</text>
 <text x="18528" y="5099" fill="#000000" font-family="Arial" font-size="10">- setup () bool</text>
 <polygon points="19153,5133 19153,4677 19613,4677 19613,5133 19153,5133" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="19153,4701 19613,4701" stroke="#0000ff" fill="none"/>
 <polyline points="19153,4789 19613,4789" stroke="#0000ff" fill="none"/>
 <text x="19332" y="4691" fill="#000000" font-family="Arial" font-size="10">ring::AudioRecord</text>
 <text x="19161" y="4715" fill="#000000" font-family="Arial" font-size="10">- fileHandle_: std::shared_ptr</text>
 <text x="19161" y="4731" fill="#000000" font-family="Arial" font-size="10">- filename_: std::string</text>
 <text x="19161" y="4747" fill="#000000" font-family="Arial" font-size="10">- recorder_: AudioRecorder</text>
 <text x="19161" y="4763" fill="#000000" font-family="Arial" font-size="10">- savePath_: std::string</text>
 <text x="19161" y="4779" fill="#000000" font-family="Arial" font-size="10">- sndFormat_: AudioFormat</text>
 <text x="19161" y="4803" fill="#000000" font-family="Arial" font-size="10">+ AudioRecord () </text>
 <text x="19161" y="4819" fill="#000000" font-family="Arial" font-size="10">+ AudioRecord () </text>
 <text x="19161" y="4835" fill="#000000" font-family="Arial" font-size="10">+ closeFile () void</text>
 <text x="19161" y="4851" fill="#000000" font-family="Arial" font-size="10">+ initFilename (peerNumber: const std::string &amp; ) void</text>
 <text x="19161" y="4867" fill="#000000" font-family="Arial" font-size="10">+ openFile () bool</text>
 <text x="19161" y="4883" fill="#000000" font-family="Arial" font-size="10">+ operator= () AudioRecord &amp;</text>
 <text x="19161" y="4899" fill="#000000" font-family="Arial" font-size="10">+ recData (buffer: AudioBuffer &amp; ) void</text>
 <text x="19161" y="4915" fill="#000000" font-family="Arial" font-size="10">+ setRecordingOptions (format: AudioFormat , path: const std::string &amp; ) void</text>
 <text x="19161" y="4931" fill="#000000" font-family="Arial" font-size="10">+ setSndFormat (format: AudioFormat ) void</text>
 <text x="19161" y="4947" fill="#000000" font-family="Arial" font-size="10">+ toggleRecording () bool</text>
 <text x="19161" y="4963" fill="#000000" font-family="Arial" font-size="10">+ ~AudioRecord () </text>
 <text x="19161" y="4979" fill="#000000" font-family="Arial" font-size="10">+ fileExists () bool</text>
 <text x="19161" y="4995" fill="#000000" font-family="Arial" font-size="10">+ getFilename () std::string</text>
 <text x="19161" y="5011" fill="#000000" font-family="Arial" font-size="10">+ getRecorderID () std::string</text>
 <text x="19161" y="5027" fill="#000000" font-family="Arial" font-size="10">+ isOpenFile () bool</text>
 <text x="19161" y="5043" fill="#000000" font-family="Arial" font-size="10">+ isRecording () bool</text>
 <text x="19161" y="5059" fill="#000000" font-family="Arial" font-size="10">+ stopRecording () void</text>
 <text x="19161" y="5075" fill="#000000" font-family="Arial" font-size="10">- closeWavFile () void</text>
 <text x="19161" y="5091" fill="#000000" font-family="Arial" font-size="10">- openExistingRawFile () bool</text>
 <text x="19161" y="5107" fill="#000000" font-family="Arial" font-size="10">- openExistingWavFile () bool</text>
 <text x="19161" y="5123" fill="#000000" font-family="Arial" font-size="10">- recordingEnabled_ () mutable std::atomic</text>
 <polygon points="19632,5029 19632,4781 20011,4781 20011,5029 19632,5029" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="19632,4805 20011,4805" stroke="#0000ff" fill="none"/>
 <polyline points="19632,4893 20011,4893" stroke="#0000ff" fill="none"/>
 <text x="19764" y="4795" fill="#000000" font-family="Arial" font-size="10">ring::AudioRecorder</text>
 <text x="19640" y="4819" fill="#000000" font-family="Arial" font-size="10">- arecord_: AudioRecord *</text>
 <text x="19640" y="4835" fill="#000000" font-family="Arial" font-size="10">- buffer_: std::unique_ptr</text>
 <text x="19640" y="4851" fill="#000000" font-family="Arial" font-size="10">- recorderId_: std::string</text>
 <text x="19640" y="4867" fill="#000000" font-family="Arial" font-size="10">- ringBufferPool_: RingBufferPool &amp;</text>
 <text x="19640" y="4883" fill="#000000" font-family="Arial" font-size="10">- thread_: ThreadLoop</text>
 <text x="19640" y="4907" fill="#000000" font-family="Arial" font-size="10">+ AudioRecorder (arec: AudioRecord *, rbp: RingBufferPool &amp; ) </text>
 <text x="19640" y="4923" fill="#000000" font-family="Arial" font-size="10">+ AudioRecorder () </text>
 <text x="19640" y="4939" fill="#000000" font-family="Arial" font-size="10">+ operator= () AudioRecorder &amp;</text>
 <text x="19640" y="4955" fill="#000000" font-family="Arial" font-size="10">+ start () void</text>
 <text x="19640" y="4971" fill="#000000" font-family="Arial" font-size="10">+ ~AudioRecorder () </text>
 <text x="19640" y="4987" fill="#000000" font-family="Arial" font-size="10">+ getRecorderID () std::string</text>
 <text x="19640" y="5003" fill="#000000" font-family="Arial" font-size="10">- nextProcessID () unsigned</text>
 <text x="19640" y="5019" fill="#000000" font-family="Arial" font-size="10">- process () void</text>
 <polygon points="20029,5061 20029,4749 20491,4749 20491,5061 20029,5061" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="20029,4773 20491,4773" stroke="#0000ff" fill="none"/>
 <polyline points="20029,4861 20491,4861" stroke="#0000ff" fill="none"/>
 <text x="20180" y="4763" fill="#000000" font-family="Arial" font-size="10">ring::opensl::AudioRecorder</text>
 <text x="20037" y="4787" fill="#000000" font-family="Arial" font-size="10">- audioBufCount: uint32_t</text>
 <text x="20037" y="4803" fill="#000000" font-family="Arial" font-size="10">- recBufQueueItf_: SLAndroidSimpleBufferQueueItf</text>
 <text x="20037" y="4819" fill="#000000" font-family="Arial" font-size="10">- recItf_: SLRecordItf</text>
 <text x="20037" y="4835" fill="#000000" font-family="Arial" font-size="10">- recObjectItf_: SLObjectItf</text>
 <text x="20037" y="4851" fill="#000000" font-family="Arial" font-size="10">- sampleInfo_: ring::AudioFormat</text>
 <text x="20037" y="4875" fill="#000000" font-family="Arial" font-size="10">+ dbgGetDevBufCount () size_t</text>
 <text x="20037" y="4891" fill="#000000" font-family="Arial" font-size="10">+ processSLCallback (bq: SLAndroidSimpleBufferQueueItf ) void</text>
 <text x="20037" y="4907" fill="#000000" font-family="Arial" font-size="10">+ registerCallback (cb: EngineCallback ) void</text>
 <text x="20037" y="4923" fill="#000000" font-family="Arial" font-size="10">+ setBufQueues (freeQ: AudioQueue *, recQ: AudioQueue *) void</text>
 <text x="20037" y="4939" fill="#000000" font-family="Arial" font-size="10">+ start () bool</text>
 <text x="20037" y="4955" fill="#000000" font-family="Arial" font-size="10">+ stop () bool</text>
 <text x="20037" y="4971" fill="#000000" font-family="Arial" font-size="10">+ ~AudioRecorder () </text>
 <text x="20037" y="4987" fill="#000000" font-family="Arial" font-size="10">- callback_ () EngineCallback</text>
 <text x="20037" y="5003" fill="#000000" font-family="Arial" font-size="10">- devShadowQueue_ () AudioQueue</text>
 <text x="20037" y="5019" fill="#000000" font-family="Arial" font-size="10">- freeQueue_ () AudioQueue *</text>
 <text x="20037" y="5035" fill="#000000" font-family="Arial" font-size="10">- recQueue_ () AudioQueue *</text>
 <text x="20037" y="5051" fill="#000000" font-family="Arial" font-size="10">+ AudioRecorder (sampleFormat: ring::AudioFormat , slEngine: SLEngineItf ) </text>
 <polygon points="20509,5037 20509,4773 20953,4773 20953,5037 20509,5037" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="20509,4797 20953,4797" stroke="#0000ff" fill="none"/>
 <polyline points="20509,4885 20953,4885" stroke="#0000ff" fill="none"/>
 <text x="20667" y="4787" fill="#000000" font-family="Arial" font-size="10">ring::AudioRtpSession</text>
 <text x="20517" y="4811" fill="#000000" font-family="Arial" font-size="10">- initSeqVal_: uint16_t</text>
 <text x="20517" y="4827" fill="#000000" font-family="Arial" font-size="10">- muteState_: bool</text>
 <text x="20517" y="4843" fill="#000000" font-family="Arial" font-size="10">- receiveThread_: std::unique_ptr</text>
 <text x="20517" y="4859" fill="#000000" font-family="Arial" font-size="10">- ringbuffer_: std::shared_ptr</text>
 <text x="20517" y="4875" fill="#000000" font-family="Arial" font-size="10">- sender_: std::unique_ptr</text>
 <text x="20517" y="4899" fill="#000000" font-family="Arial" font-size="10">+ restartReceiver () void Virtual</text>
 <text x="20517" y="4915" fill="#000000" font-family="Arial" font-size="10">+ restartSender () void Virtual</text>
 <text x="20517" y="4931" fill="#000000" font-family="Arial" font-size="10">+ start (rtp_sock: std::unique_ptr , rtcp_sock: std::unique_ptr ) void Virtual</text>
 <text x="20517" y="4947" fill="#000000" font-family="Arial" font-size="10">+ stop () void Virtual</text>
 <text x="20517" y="4963" fill="#000000" font-family="Arial" font-size="10">+ ~AudioRtpSession () Virtual</text>
 <text x="20517" y="4979" fill="#000000" font-family="Arial" font-size="10">+ AudioRtpSession (id: const std::string &amp; ) </text>
 <text x="20517" y="4995" fill="#000000" font-family="Arial" font-size="10">+ setMuted (isMuted: bool ) void</text>
 <text x="20517" y="5011" fill="#000000" font-family="Arial" font-size="10">- startReceiver () void</text>
 <text x="20517" y="5027" fill="#000000" font-family="Arial" font-size="10">- startSender () void</text>
 <polygon points="20694,3063 20694,2783 21273,2783 21273,3063 20694,3063" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="20694,2807 21273,2807" stroke="#0000ff" fill="none"/>
 <polyline points="20694,2895 21273,2895" stroke="#0000ff" fill="none"/>
 <text x="20935" y="2797" fill="#000000" font-family="Arial" font-size="10">ring::RtpSession</text>
 <text x="20702" y="2821" fill="#000000" font-family="Arial" font-size="10"># callID_: const std::string</text>
 <text x="20702" y="2837" fill="#000000" font-family="Arial" font-size="10"># mutex_: std::recursive_mutex</text>
 <text x="20702" y="2853" fill="#000000" font-family="Arial" font-size="10"># receive_: MediaDescription</text>
 <text x="20702" y="2869" fill="#000000" font-family="Arial" font-size="10"># send_: MediaDescription</text>
 <text x="20702" y="2885" fill="#000000" font-family="Arial" font-size="10"># socketPair_: std::unique_ptr</text>
 <text x="20702" y="2909" fill="#000000" font-family="Arial" font-size="10">+ updateMedia (send: const MediaDescription &amp; , receive: const MediaDescription &amp; ) void Virtual</text>
 <text x="20702" y="2925" fill="#000000" font-family="Arial" font-size="10">+ ~RtpSession () Virtual</text>
 <text x="20702" y="2941" fill="#000000" font-family="Arial" font-size="10">+ restartReceiver () void Pure Virtual</text>
 <text x="20702" y="2957" fill="#000000" font-family="Arial" font-size="10">+ restartSender () void Pure Virtual</text>
 <text x="20702" y="2973" fill="#000000" font-family="Arial" font-size="10">+ start (rtp_sock: std::unique_ptr , rtcp_sock: std::unique_ptr ) void Pure Virtual</text>
 <text x="20702" y="2989" fill="#000000" font-family="Arial" font-size="10">+ stop () void Pure Virtual</text>
 <text x="20702" y="3005" fill="#000000" font-family="Arial" font-size="10">+ RtpSession (callID: const std::string &amp; ) </text>
 <text x="20702" y="3021" fill="#000000" font-family="Arial" font-size="10">+ isReceiving () bool</text>
 <text x="20702" y="3037" fill="#000000" font-family="Arial" font-size="10">+ isSending () bool</text>
 <text x="20702" y="3053" fill="#000000" font-family="Arial" font-size="10"># getRemoteRtpUri () std::string</text>
 <polyline points="20748,4773 20764,4649 20783,4496 20805,4320 20830,4129 20855,3931 20880,3731 20905,3538 20927,3359 20948,3202 20964,3073" stroke="#CC0044" fill="none"/>
 <polygon points="20961,3072 20965,3063 20968,3073 20961,3072" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="21515,4941 21515,4869 21637,4869 21637,4941 21515,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="21515,4893 21637,4893" stroke="#0000ff" fill="none"/>
 <polyline points="21515,4917 21637,4917" stroke="#0000ff" fill="none"/>
 <text x="21523" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::AudioSample</text>
 <text x="21574" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="21574" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="21655,5093 21655,4717 22651,4717 22651,5093 21655,5093" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="21655,4741 22651,4741" stroke="#0000ff" fill="none"/>
 <polyline points="21655,4925 22651,4925" stroke="#0000ff" fill="none"/>
 <text x="22102" y="4731" fill="#000000" font-family="Arial" font-size="10">ring::AudioSender</text>
 <text x="21663" y="4755" fill="#000000" font-family="Arial" font-size="10">- args_: MediaDescription</text>
 <text x="21663" y="4771" fill="#000000" font-family="Arial" font-size="10">- audioEncoder_: std::unique_ptr</text>
 <text x="21663" y="4787" fill="#000000" font-family="Arial" font-size="10">- dest_: std::string</text>
 <text x="21663" y="4803" fill="#000000" font-family="Arial" font-size="10">- id_: std::string</text>
 <text x="21663" y="4819" fill="#000000" font-family="Arial" font-size="10">- loop_: ThreadLoop</text>
 <text x="21663" y="4835" fill="#000000" font-family="Arial" font-size="10">- micData_: AudioBuffer</text>
 <text x="21663" y="4851" fill="#000000" font-family="Arial" font-size="10">- muteState_: bool</text>
 <text x="21663" y="4867" fill="#000000" font-family="Arial" font-size="10">- muxContext_: std::unique_ptr</text>
 <text x="21663" y="4883" fill="#000000" font-family="Arial" font-size="10">- resampledData_: AudioBuffer</text>
 <text x="21663" y="4899" fill="#000000" font-family="Arial" font-size="10">- resampler_: std::unique_ptr</text>
 <text x="21663" y="4915" fill="#000000" font-family="Arial" font-size="10">- seqVal_: const uint16_t</text>
 <text x="21663" y="4939" fill="#000000" font-family="Arial" font-size="10">+ AudioSender (id: const std::string &amp; , dest: const std::string &amp; , args: const MediaDescription &amp; , socketPair: SocketPair &amp; , seqVal: const uint16_t , muteState: bool ) </text>
 <text x="21663" y="4955" fill="#000000" font-family="Arial" font-size="10">+ AudioSender () </text>
 <text x="21663" y="4971" fill="#000000" font-family="Arial" font-size="10">+ getLastSeqValue () uint16_t</text>
 <text x="21663" y="4987" fill="#000000" font-family="Arial" font-size="10">+ operator= () AudioSender &amp;</text>
 <text x="21663" y="5003" fill="#000000" font-family="Arial" font-size="10">+ setMuted (isMuted: bool ) void</text>
 <text x="21663" y="5019" fill="#000000" font-family="Arial" font-size="10">+ ~AudioSender () </text>
 <text x="21663" y="5035" fill="#000000" font-family="Arial" font-size="10">- cleanup () void</text>
 <text x="21663" y="5051" fill="#000000" font-family="Arial" font-size="10">- process () void</text>
 <text x="21663" y="5067" fill="#000000" font-family="Arial" font-size="10">- secondsPerPacket_ () const seconds</text>
 <text x="21663" y="5083" fill="#000000" font-family="Arial" font-size="10">- setup (socketPair: SocketPair &amp; ) bool</text>
 <polygon points="22669,4941 22669,4869 22797,4869 22797,4941 22669,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="22669,4893 22797,4893" stroke="#0000ff" fill="none"/>
 <polyline points="22669,4917 22797,4917" stroke="#0000ff" fill="none"/>
 <text x="22677" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::AudioSignal</text>
 <text x="22731" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="22731" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="22816,5053 22816,4757 23717,4757 23717,5053 22816,5053" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="22816,4781 23717,4781" stroke="#0000ff" fill="none"/>
 <polyline points="22816,4821 23717,4821" stroke="#0000ff" fill="none"/>
 <text x="23214" y="4771" fill="#000000" font-family="Arial" font-size="10">ring::AudioStream</text>
 <text x="22824" y="4795" fill="#000000" font-family="Arial" font-size="10">- audiostream_: pa_stream *</text>
 <text x="22824" y="4811" fill="#000000" font-family="Arial" font-size="10">- mainloop_: pa_threaded_mainloop *</text>
 <text x="22824" y="4835" fill="#000000" font-family="Arial" font-size="10">+ AudioStream (c: pa_context *, m: pa_threaded_mainloop *, desc: const char *, type: int , samplrate: unsigned , infos: const PaDeviceInfos *, ec: bool ) </text>
 <text x="22824" y="4851" fill="#000000" font-family="Arial" font-size="10">+ AudioStream () </text>
 <text x="22824" y="4867" fill="#000000" font-family="Arial" font-size="10">+ isReady () bool</text>
 <text x="22824" y="4883" fill="#000000" font-family="Arial" font-size="10">+ operator= () AudioStream &amp;</text>
 <text x="22824" y="4899" fill="#000000" font-family="Arial" font-size="10">+ stream () pa_stream *</text>
 <text x="22824" y="4915" fill="#000000" font-family="Arial" font-size="10">+ ~AudioStream () </text>
 <text x="22824" y="4931" fill="#000000" font-family="Arial" font-size="10">+ channels () uint8_t</text>
 <text x="22824" y="4947" fill="#000000" font-family="Arial" font-size="10">+ format () AudioFormat</text>
 <text x="22824" y="4963" fill="#000000" font-family="Arial" font-size="10">+ frameSize () size_t</text>
 <text x="22824" y="4979" fill="#000000" font-family="Arial" font-size="10">+ getDeviceName () std::string</text>
 <text x="22824" y="4995" fill="#000000" font-family="Arial" font-size="10">+ sampleSize () size_t</text>
 <text x="22824" y="5011" fill="#000000" font-family="Arial" font-size="10">+ sampleSpec () const pa_sample_spec *</text>
 <text x="22824" y="5027" fill="#000000" font-family="Arial" font-size="10">- moved (s: pa_stream *) void</text>
 <text x="22824" y="5043" fill="#000000" font-family="Arial" font-size="10">- stateChanged (s: pa_stream *) void</text>
 <polygon points="23735,4941 23735,4869 23876,4869 23876,4941 23735,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="23735,4893 23876,4893" stroke="#0000ff" fill="none"/>
 <polyline points="23735,4917 23876,4917" stroke="#0000ff" fill="none"/>
 <text x="23767" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::BadCast</text>
 <text x="23803" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="23743" y="4931" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polygon points="23915,2959 23915,2887 24172,2887 24172,2959 23915,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="23915,2911 24172,2911" stroke="#0000ff" fill="none"/>
 <polyline points="23915,2935 24172,2935" stroke="#0000ff" fill="none"/>
 <text x="23988" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::RLPException</text>
 <text x="24041" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="23923" y="2949" fill="#000000" font-family="Arial" font-size="10">+ RLPException (_message: std::string ) </text>
 <polyline points="23805,4869 23805,4808 23805,4722 23806,4613 23809,4487 23813,4345 23821,4193 23831,4034 23844,3870 23862,3707 23884,3548 23895,3481 23909,3413 23924,3345 23940,3278 23957,3214 23973,3153 23989,3097 24004,3047 24017,3004 24028,2969" stroke="#CC0044" fill="none"/>
 <polygon points="24025,2967 24032,2959 24032,2970 24025,2967" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="25284,1449 25284,1361 25516,1361 25516,1449 25284,1449" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="25284,1385 25516,1385" stroke="#0000ff" fill="none"/>
 <polyline points="25284,1409 25516,1409" stroke="#0000ff" fill="none"/>
 <text x="25358" y="1375" fill="#000000" font-family="Arial" font-size="10">dev::Exception</text>
 <text x="25292" y="1399" fill="#000000" font-family="Arial" font-size="10">- m_message: std::string</text>
 <text x="25292" y="1423" fill="#000000" font-family="Arial" font-size="10">+ Exception (_message: std::string ) </text>
 <text x="25292" y="1439" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="24043,2887 24044,2853 24047,2810 24051,2759 24058,2703 24068,2643 24081,2580 24099,2516 24121,2452 24148,2391 24180,2334 24276,2203 24385,2081 24504,1967 24630,1863 24758,1768 24884,1684 25005,1609 25116,1546 25215,1494 25296,1454" stroke="#CC0044" fill="none"/>
 <polygon points="25295,1450 25306,1449 25298,1457 25295,1450" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="25364,355 25364,283 25436,283 25436,355 25364,355" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="25364,307 25436,307" stroke="#0000ff" fill="none"/>
 <polyline points="25364,331 25436,331" stroke="#0000ff" fill="none"/>
 <text x="25372" y="297" fill="#000000" font-family="Arial" font-size="10">exception</text>
 <text x="25398" y="321" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="25372" y="345" fill="#000000" font-family="Arial" font-size="10">+ what () </text>
 <polyline points="25400,1361 25400,1296 25400,1208 25400,1103 25400,986 25400,864 25400,742 25400,625 25400,520 25400,431 25400,365" stroke="#CC0044" fill="none"/>
 <polygon points="25397,365 25400,355 25404,365 25397,365" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="24190,2959 24190,2887 24335,2887 24335,2959 24190,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="24190,2911 24335,2911" stroke="#0000ff" fill="none"/>
 <polyline points="24190,2935 24335,2935" stroke="#0000ff" fill="none"/>
 <text x="24198" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::BadHexCharacter</text>
 <text x="24260" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="24198" y="2949" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="24259,2887 24257,2854 24255,2811 24255,2761 24257,2705 24261,2645 24268,2583 24280,2518 24296,2455 24317,2393 24344,2334 24422,2207 24514,2087 24616,1975 24725,1871 24837,1776 24947,1690 25054,1614 25152,1549 25239,1496 25311,1454" stroke="#CC0044" fill="none"/>
 <polygon points="25309,1451 25320,1449 25313,1457 25309,1451" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="23894,4941 23894,4869 24035,4869 24035,4941 23894,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="23894,4893 24035,4893" stroke="#0000ff" fill="none"/>
 <polyline points="23894,4917 24035,4917" stroke="#0000ff" fill="none"/>
 <text x="23927" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::BadRLP</text>
 <text x="23962" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="23902" y="4931" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="23965,4869 23969,4765 23976,4605 23984,4404 23993,4175 24003,3931 24012,3686 24022,3454 24030,3248 24036,3082 24041,2969" stroke="#CC0044" fill="none"/>
 <polygon points="24038,2969 24042,2959 24045,2969 24038,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="24353,2959 24353,2887 24565,2887 24565,2959 24353,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="24353,2911 24565,2911" stroke="#0000ff" fill="none"/>
 <polyline points="24353,2935 24565,2935" stroke="#0000ff" fill="none"/>
 <text x="24421" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::BadRoot</text>
 <text x="24361" y="2925" fill="#000000" font-family="Arial" font-size="10">+ root: h256</text>
 <text x="24361" y="2949" fill="#000000" font-family="Arial" font-size="10">+ BadRoot (_root: h256 const &amp; ) </text>
 <polyline points="24460,2887 24461,2854 24463,2812 24467,2762 24473,2707 24482,2647 24493,2585 24507,2521 24525,2457 24548,2394 24574,2334 24639,2217 24714,2103 24796,1994 24882,1891 24970,1795 25057,1706 25140,1627 25216,1558 25283,1501 25337,1456" stroke="#CC0044" fill="none"/>
 <polygon points="25335,1453 25345,1449 25339,1458 25335,1453" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="24463,4957 24463,4853 24664,4853 24664,4957 24463,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="24463,4877 24664,4877" stroke="#0000ff" fill="none"/>
 <polyline points="24463,4917 24664,4917" stroke="#0000ff" fill="none"/>
 <text x="24479" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::RingAccount::BuddyInfo</text>
 <text x="24471" y="4891" fill="#000000" font-family="Arial" font-size="10">+ devicesTimestamps: std::map</text>
 <text x="24471" y="4907" fill="#000000" font-family="Arial" font-size="10">+ id: dht::InfoHash</text>
 <text x="24471" y="4931" fill="#000000" font-family="Arial" font-size="10">+ BuddyInfo (id: dht::InfoHash ) </text>
 <text x="24471" y="4947" fill="#000000" font-family="Arial" font-size="10">+ updateInfo () std::function</text>
 <polygon points="3138,1937 3138,873 3705,873 3705,1937 3138,1937" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="3138,897 3705,897" stroke="#0000ff" fill="none"/>
 <polyline points="3138,921 3705,921" stroke="#0000ff" fill="none"/>
 <text x="3396" y="887" fill="#000000" font-family="Arial" font-size="10">ring::Call</text>
 <text x="3146" y="911" fill="#000000" font-family="Arial" font-size="10">+ DEFAULT_ID: const char *const</text>
 <text x="3146" y="935" fill="#000000" font-family="Arial" font-size="10">+ initIceTransport (master: bool , channel_num: unsigned ) bool Virtual</text>
 <text x="3146" y="951" fill="#000000" font-family="Arial" font-size="10">+ merge (scall: const std::shared_ptr &amp; ) void Virtual</text>
 <text x="3146" y="967" fill="#000000" font-family="Arial" font-size="10">+ peerHungup () void Virtual</text>
 <text x="3146" y="983" fill="#000000" font-family="Arial" font-size="10">+ removeCall () void Virtual</text>
 <text x="3146" y="999" fill="#000000" font-family="Arial" font-size="10">+ switchInput (std: const ) void Virtual</text>
 <text x="3146" y="1015" fill="#000000" font-family="Arial" font-size="10">+ toggleRecording () bool Virtual</text>
 <text x="3146" y="1031" fill="#000000" font-family="Arial" font-size="10">+ ~Call () Virtual</text>
 <text x="3146" y="1047" fill="#000000" font-family="Arial" font-size="10">+ getDetails () std::map Virtual</text>
 <text x="3146" y="1063" fill="#000000" font-family="Arial" font-size="10">+ useVideoCodec (AccountVideoCodecInfo: const ) bool Virtual</text>
 <text x="3146" y="1079" fill="#000000" font-family="Arial" font-size="10">+ getNullDetails () std::map</text>
 <text x="3146" y="1095" fill="#000000" font-family="Arial" font-size="10">+ answer () void Pure Virtual</text>
 <text x="3146" y="1111" fill="#000000" font-family="Arial" font-size="10">+ attendedTransfer (to: const std::string &amp; ) bool Pure Virtual</text>
 <text x="3146" y="1127" fill="#000000" font-family="Arial" font-size="10">+ carryingDTMFdigits (code: char ) void Pure Virtual</text>
 <text x="3146" y="1143" fill="#000000" font-family="Arial" font-size="10">+ hangup (reason: int ) void Pure Virtual</text>
 <text x="3146" y="1159" fill="#000000" font-family="Arial" font-size="10">+ muteMedia (mediaType: const std::string &amp; , isMuted: bool ) void Pure Virtual</text>
 <text x="3146" y="1175" fill="#000000" font-family="Arial" font-size="10">+ offhold () bool Pure Virtual</text>
 <text x="3146" y="1191" fill="#000000" font-family="Arial" font-size="10">+ onhold () bool Pure Virtual</text>
 <text x="3146" y="1207" fill="#000000" font-family="Arial" font-size="10">+ refuse () void Pure Virtual</text>
 <text x="3146" y="1223" fill="#000000" font-family="Arial" font-size="10">+ restartMediaReceiver () void Pure Virtual</text>
 <text x="3146" y="1239" fill="#000000" font-family="Arial" font-size="10">+ restartMediaSender () void Pure Virtual</text>
 <text x="3146" y="1255" fill="#000000" font-family="Arial" font-size="10">+ sendTextMessage (messages: const std::map &amp; , from: const std::string &amp; ) void Pure Virtual</text>
 <text x="3146" y="1271" fill="#000000" font-family="Arial" font-size="10">+ transfer (to: const std::string &amp; ) void Pure Virtual</text>
 <text x="3146" y="1287" fill="#000000" font-family="Arial" font-size="10">+ getLinkType () const char * Pure Virtual</text>
 <text x="3146" y="1303" fill="#000000" font-family="Arial" font-size="10">+ addStateListener (T) void</text>
 <text x="3146" y="1319" fill="#000000" font-family="Arial" font-size="10">+ addSubCall (call: const std::shared_ptr &amp; ) void</text>
 <text x="3146" y="1335" fill="#000000" font-family="Arial" font-size="10">+ newIceSocket (compId: unsigned ) std::unique_ptr</text>
 <text x="3146" y="1351" fill="#000000" font-family="Arial" font-size="10">+ onTextMessage (std::map) void</text>
 <text x="3146" y="1367" fill="#000000" font-family="Arial" font-size="10">+ setConfId (id: const std::string &amp; ) void</text>
 <text x="3146" y="1383" fill="#000000" font-family="Arial" font-size="10">+ setIPToIP (IPToIP: bool ) void</text>
 <text x="3146" y="1399" fill="#000000" font-family="Arial" font-size="10">+ setLocalAudioPort (port: unsigned int ) void</text>
 <text x="3146" y="1415" fill="#000000" font-family="Arial" font-size="10">+ setLocalIp (ip: const IpAddr &amp; ) void</text>
 <text x="3146" y="1431" fill="#000000" font-family="Arial" font-size="10">+ setLocalVideoPort (port: unsigned int ) void</text>
 <text x="3146" y="1447" fill="#000000" font-family="Arial" font-size="10">+ setPeerDisplayName (name: const std::string &amp; ) void</text>
 <text x="3146" y="1463" fill="#000000" font-family="Arial" font-size="10">+ setPeerNumber (number: const std::string &amp; ) void</text>
 <text x="3146" y="1479" fill="#000000" font-family="Arial" font-size="10">+ setState (call_state: CallState , code: signed ) bool</text>
 <text x="3146" y="1495" fill="#000000" font-family="Arial" font-size="10">+ setState (call_state: CallState , cnx_state: ConnectionState , code: signed ) bool</text>
 <text x="3146" y="1511" fill="#000000" font-family="Arial" font-size="10">+ setState (cnx_state: ConnectionState , code: signed ) bool</text>
 <text x="3146" y="1527" fill="#000000" font-family="Arial" font-size="10">+ waitForIceInitialization (timeout: unsigned ) int</text>
 <text x="3146" y="1543" fill="#000000" font-family="Arial" font-size="10">+ waitForIceNegotiation (timeout: unsigned ) int</text>
 <text x="3146" y="1559" fill="#000000" font-family="Arial" font-size="10">+ getAccount () Account &amp;</text>
 <text x="3146" y="1575" fill="#000000" font-family="Arial" font-size="10">+ getAccountId () const std::string &amp;</text>
 <text x="3146" y="1591" fill="#000000" font-family="Arial" font-size="10">+ getCallId () const std::string &amp;</text>
 <text x="3146" y="1607" fill="#000000" font-family="Arial" font-size="10">+ getCallType () CallType</text>
 <text x="3146" y="1623" fill="#000000" font-family="Arial" font-size="10">+ getConfId () const std::string &amp;</text>
 <text x="3146" y="1639" fill="#000000" font-family="Arial" font-size="10">+ getConnectionState () Call::ConnectionState</text>
 <text x="3146" y="1655" fill="#000000" font-family="Arial" font-size="10">+ getIceTransport () std::shared_ptr</text>
 <text x="3146" y="1671" fill="#000000" font-family="Arial" font-size="10">+ getLocalAudioPort () unsigned int</text>
 <text x="3146" y="1687" fill="#000000" font-family="Arial" font-size="10">+ getLocalIp () IpAddr</text>
 <text x="3146" y="1703" fill="#000000" font-family="Arial" font-size="10">+ getLocalVideoPort () unsigned int</text>
 <text x="3146" y="1719" fill="#000000" font-family="Arial" font-size="10">+ getPeerDisplayName () const std::string &amp;</text>
 <text x="3146" y="1735" fill="#000000" font-family="Arial" font-size="10">+ getPeerNumber () std::string</text>
 <text x="3146" y="1751" fill="#000000" font-family="Arial" font-size="10">+ getState () Call::CallState</text>
 <text x="3146" y="1767" fill="#000000" font-family="Arial" font-size="10">+ getStateStr () std::string</text>
 <text x="3146" y="1783" fill="#000000" font-family="Arial" font-size="10">+ isIceRunning () bool</text>
 <text x="3146" y="1799" fill="#000000" font-family="Arial" font-size="10">+ isIceUsed () bool</text>
 <text x="3146" y="1815" fill="#000000" font-family="Arial" font-size="10">+ isIncoming () bool</text>
 <text x="3146" y="1831" fill="#000000" font-family="Arial" font-size="10"># Call (account: Account &amp; , id: const std::string &amp; , type: Call::CallType ) </text>
 <text x="3146" y="1847" fill="#000000" font-family="Arial" font-size="10"># iceTransport_ () std::shared_ptr</text>
 <text x="3146" y="1863" fill="#000000" font-family="Arial" font-size="10"># isAudioMuted_ () bool</text>
 <text x="3146" y="1879" fill="#000000" font-family="Arial" font-size="10"># isVideoMuted_ () bool</text>
 <text x="3146" y="1895" fill="#000000" font-family="Arial" font-size="10"># quiet () bool</text>
 <text x="3146" y="1911" fill="#000000" font-family="Arial" font-size="10">- callMutex_ () mutable std::recursive_mutex</text>
 <text x="3146" y="1927" fill="#000000" font-family="Arial" font-size="10">- validStateTransition (newState: CallState ) bool</text>
 <polygon points="3491,427 3491,211 3828,211 3828,427 3491,427" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="3491,235 3828,235" stroke="#0000ff" fill="none"/>
 <polyline points="3491,275 3828,275" stroke="#0000ff" fill="none"/>
 <text x="3612" y="225" fill="#000000" font-family="Arial" font-size="10">ring::Recordable</text>
 <text x="3499" y="249" fill="#000000" font-family="Arial" font-size="10"># apiMutex_: mutable std::mutex</text>
 <text x="3499" y="265" fill="#000000" font-family="Arial" font-size="10"># recAudio_: std::unique_ptr</text>
 <text x="3499" y="289" fill="#000000" font-family="Arial" font-size="10">+ toggleRecording () bool Virtual</text>
 <text x="3499" y="305" fill="#000000" font-family="Arial" font-size="10">+ ~Recordable () Virtual</text>
 <text x="3499" y="321" fill="#000000" font-family="Arial" font-size="10">+ getAudioFilename () std::string Virtual</text>
 <text x="3499" y="337" fill="#000000" font-family="Arial" font-size="10">+ Recordable () </text>
 <text x="3499" y="353" fill="#000000" font-family="Arial" font-size="10">+ initRecFilename (filename: const std::string &amp; ) void</text>
 <text x="3499" y="369" fill="#000000" font-family="Arial" font-size="10">+ setRecordingAudioFormat (format: AudioFormat ) void</text>
 <text x="3499" y="385" fill="#000000" font-family="Arial" font-size="10">+ stopRecording () void</text>
 <text x="3499" y="401" fill="#000000" font-family="Arial" font-size="10">+ isRecording () bool</text>
 <text x="3499" y="417" fill="#000000" font-family="Arial" font-size="10"># recording_ () bool</text>
 <polyline points="3538,873 3549,824 3559,775 3570,727 3580,679 3590,634 3600,589 3609,547 3618,508 3626,471 3633,437" stroke="#CC0044" fill="none"/>
 <polygon points="3630,436 3635,427 3637,438 3630,436" stroke="#CC0044" fill="#CC0044"/>
 <polyline points="3256,873 3237,811 3217,749 3198,688 3180,630 3163,574 3147,522 3132,475 3119,432 3107,395 3098,365" stroke="#CC0044" fill="none"/>
 <polygon points="3095,366 3095,355 3101,364 3095,366" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="3153,3463 3153,2383 3689,2383 3689,3463 3153,3463" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="3153,2407 3689,2407" stroke="#0000ff" fill="none"/>
 <polyline points="3153,2495 3689,2495" stroke="#0000ff" fill="none"/>
 <text x="3385" y="2397" fill="#000000" font-family="Arial" font-size="10">ring::SIPCall</text>
 <text x="3161" y="2421" fill="#000000" font-family="Arial" font-size="10">+ LINK_TYPE: const char *const= SIPAccount::ACCOUNT_TYPE</text>
 <text x="3161" y="2437" fill="#000000" font-family="Arial" font-size="10">+ inv: std::unique_ptr</text>
 <text x="3161" y="2453" fill="#000000" font-family="Arial" font-size="10">- avformatrtp_: std::unique_ptr</text>
 <text x="3161" y="2469" fill="#000000" font-family="Arial" font-size="10">- sdp_: std::unique_ptr</text>
 <text x="3161" y="2485" fill="#000000" font-family="Arial" font-size="10">- upnp_: std::unique_ptr</text>
 <text x="3161" y="2509" fill="#000000" font-family="Arial" font-size="10">+ answer () void Virtual</text>
 <text x="3161" y="2525" fill="#000000" font-family="Arial" font-size="10">+ attendedTransfer (to: const std::string &amp; ) bool Virtual</text>
 <text x="3161" y="2541" fill="#000000" font-family="Arial" font-size="10">+ carryingDTMFdigits (code: char ) void Virtual</text>
 <text x="3161" y="2557" fill="#000000" font-family="Arial" font-size="10">+ hangup (reason: int ) void Virtual</text>
 <text x="3161" y="2573" fill="#000000" font-family="Arial" font-size="10">+ initIceTransport (master: bool , channel_num: unsigned ) bool Virtual</text>
 <text x="3161" y="2589" fill="#000000" font-family="Arial" font-size="10">+ merge (scall: const std::shared_ptr &amp; ) void Virtual</text>
 <text x="3161" y="2605" fill="#000000" font-family="Arial" font-size="10">+ muteMedia (mediaType: const std::string &amp; , isMuted: bool ) void Virtual</text>
 <text x="3161" y="2621" fill="#000000" font-family="Arial" font-size="10">+ offhold () bool Virtual</text>
 <text x="3161" y="2637" fill="#000000" font-family="Arial" font-size="10">+ onhold () bool Virtual</text>
 <text x="3161" y="2653" fill="#000000" font-family="Arial" font-size="10">+ peerHungup () void Virtual</text>
 <text x="3161" y="2669" fill="#000000" font-family="Arial" font-size="10">+ refuse () void Virtual</text>
 <text x="3161" y="2685" fill="#000000" font-family="Arial" font-size="10">+ removeCall () void Virtual</text>
 <text x="3161" y="2701" fill="#000000" font-family="Arial" font-size="10">+ restartMediaReceiver () void Virtual</text>
 <text x="3161" y="2717" fill="#000000" font-family="Arial" font-size="10">+ restartMediaSender () void Virtual</text>
 <text x="3161" y="2733" fill="#000000" font-family="Arial" font-size="10">+ sendTextMessage (messages: const std::map &amp; , from: const std::string &amp; ) void Virtual</text>
 <text x="3161" y="2749" fill="#000000" font-family="Arial" font-size="10">+ switchInput (resource: const std::string &amp; ) void Virtual</text>
 <text x="3161" y="2765" fill="#000000" font-family="Arial" font-size="10">+ transfer (to: const std::string &amp; ) void Virtual</text>
 <text x="3161" y="2781" fill="#000000" font-family="Arial" font-size="10">+ ~SIPCall () Virtual</text>
 <text x="3161" y="2797" fill="#000000" font-family="Arial" font-size="10">+ getDetails () std::map Virtual</text>
 <text x="3161" y="2813" fill="#000000" font-family="Arial" font-size="10">+ getLinkType () const char * Virtual</text>
 <text x="3161" y="2829" fill="#000000" font-family="Arial" font-size="10">+ useVideoCodec (codec: const AccountVideoCodecInfo *) bool Virtual</text>
 <text x="3161" y="2845" fill="#000000" font-family="Arial" font-size="10">+ SIPCall () </text>
 <text x="3161" y="2861" fill="#000000" font-family="Arial" font-size="10">+ generateMediaPorts () void</text>
 <text x="3161" y="2877" fill="#000000" font-family="Arial" font-size="10">+ getSDP () Sdp &amp;</text>
 <text x="3161" y="2893" fill="#000000" font-family="Arial" font-size="10">+ getTransport () SipTransport *</text>
 <text x="3161" y="2909" fill="#000000" font-family="Arial" font-size="10">+ onAnswered () void</text>
 <text x="3161" y="2925" fill="#000000" font-family="Arial" font-size="10">+ onClosed () void</text>
 <text x="3161" y="2941" fill="#000000" font-family="Arial" font-size="10">+ onFailure (cause: signed ) void</text>
 <text x="3161" y="2957" fill="#000000" font-family="Arial" font-size="10">+ onMediaUpdate () void</text>
 <text x="3161" y="2973" fill="#000000" font-family="Arial" font-size="10">+ onPeerRinging () void</text>
 <text x="3161" y="2989" fill="#000000" font-family="Arial" font-size="10">+ onReceiveOffer (offer: const pjmedia_sdp_session *) void</text>
 <text x="3161" y="3005" fill="#000000" font-family="Arial" font-size="10">+ openPortsUPnP () void</text>
 <text x="3161" y="3021" fill="#000000" font-family="Arial" font-size="10">+ operator= () SIPCall &amp;</text>
 <text x="3161" y="3037" fill="#000000" font-family="Arial" font-size="10">+ sendSIPInfo (body: const char *const , subtype: const char *const ) void</text>
 <text x="3161" y="3053" fill="#000000" font-family="Arial" font-size="10">+ setCallMediaLocal (localIP: const pj_sockaddr &amp; ) void</text>
 <text x="3161" y="3069" fill="#000000" font-family="Arial" font-size="10">+ setContactHeader (contact: pj_str_t *) void</text>
 <text x="3161" y="3085" fill="#000000" font-family="Arial" font-size="10">+ setPeerRegistredName (name: const std::string &amp; ) void</text>
 <text x="3161" y="3101" fill="#000000" font-family="Arial" font-size="10">+ setSecure (sec: bool ) void</text>
 <text x="3161" y="3117" fill="#000000" font-family="Arial" font-size="10">+ setTransport (t: const std::shared_ptr &amp; ) void</text>
 <text x="3161" y="3133" fill="#000000" font-family="Arial" font-size="10">+ setupLocalSDPFromIce () void</text>
 <text x="3161" y="3149" fill="#000000" font-family="Arial" font-size="10">+ startAllMedia () void</text>
 <text x="3161" y="3165" fill="#000000" font-family="Arial" font-size="10">+ startIce () bool</text>
 <text x="3161" y="3181" fill="#000000" font-family="Arial" font-size="10">+ terminateSipSession (status: int ) void</text>
 <text x="3161" y="3197" fill="#000000" font-family="Arial" font-size="10">+ updateSDPFromSTUN () void</text>
 <text x="3161" y="3213" fill="#000000" font-family="Arial" font-size="10">+ getAVFormatRTP () AudioRtpSession &amp;</text>
 <text x="3161" y="3229" fill="#000000" font-family="Arial" font-size="10">+ getSIPAccount () SIPAccountBase &amp;</text>
 <text x="3161" y="3245" fill="#000000" font-family="Arial" font-size="10">+ isSecure () bool</text>
 <text x="3161" y="3261" fill="#000000" font-family="Arial" font-size="10"># SIPCall (account: SIPAccountBase &amp; , id: const std::string &amp; , type: Call::CallType ) </text>
 <text x="3161" y="3277" fill="#000000" font-family="Arial" font-size="10">- SIPSessionReinvite () int</text>
 <text x="3161" y="3293" fill="#000000" font-family="Arial" font-size="10">- contactBuffer_ () char [PJSIP_MAX_URL_SIZE]</text>
 <text x="3161" y="3309" fill="#000000" font-family="Arial" font-size="10">- contactHeader_ () pj_str_t</text>
 <text x="3161" y="3325" fill="#000000" font-family="Arial" font-size="10">- getAllRemoteCandidates () std::vector</text>
 <text x="3161" y="3341" fill="#000000" font-family="Arial" font-size="10">- internalOffHold (SDPUpdateFunc: const std::function &amp; ) bool</text>
 <text x="3161" y="3357" fill="#000000" font-family="Arial" font-size="10">- peerHolding_ () bool</text>
 <text x="3161" y="3373" fill="#000000" font-family="Arial" font-size="10">- peerRegistredName_ () std::string</text>
 <text x="3161" y="3389" fill="#000000" font-family="Arial" font-size="10">- srtpEnabled_ () bool</text>
 <text x="3161" y="3405" fill="#000000" font-family="Arial" font-size="10">- stopAllMedia () void</text>
 <text x="3161" y="3421" fill="#000000" font-family="Arial" font-size="10">- transferCommon (dst: pj_str_t *) bool</text>
 <text x="3161" y="3437" fill="#000000" font-family="Arial" font-size="10">- transport_ () std::shared_ptr</text>
 <text x="3161" y="3453" fill="#000000" font-family="Arial" font-size="10">- waitForIceAndStartMedia () void</text>
 <polyline points="3421,2383 3421,2340 3421,2297 3421,2253 3421,2209 3421,2165 3421,2121 3421,2077 3421,2033 3421,1990 3421,1947" stroke="#CC0044" fill="none"/>
 <polygon points="3418,1947 3421,1937 3425,1947 3418,1947" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="25093,5165 25093,4645 25608,4645 25608,5165 25093,5165" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="25093,4669 25608,4669" stroke="#0000ff" fill="none"/>
 <polyline points="25093,4693 25608,4693" stroke="#0000ff" fill="none"/>
 <text x="25303" y="4659" fill="#000000" font-family="Arial" font-size="10">ring::CallFactory</text>
 <text x="25348" y="4683" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="25101" y="4707" fill="#000000" font-family="Arial" font-size="10">+ callCount () std::size_t</text>
 <text x="25101" y="4723" fill="#000000" font-family="Arial" font-size="10">+ callCount () std::size_t</text>
 <text x="25101" y="4739" fill="#000000" font-family="Arial" font-size="10">+ clear () void</text>
 <text x="25101" y="4755" fill="#000000" font-family="Arial" font-size="10">+ clear () void</text>
 <text x="25101" y="4771" fill="#000000" font-family="Arial" font-size="10">+ newCall (account: A &amp; , id: const std::string &amp; , type: Call::CallType ) std::shared_ptr</text>
 <text x="25101" y="4787" fill="#000000" font-family="Arial" font-size="10">+ callCount () std::size_t</text>
 <text x="25101" y="4803" fill="#000000" font-family="Arial" font-size="10">+ clear () void</text>
 <text x="25101" y="4819" fill="#000000" font-family="Arial" font-size="10">+ forbid () void</text>
 <text x="25101" y="4835" fill="#000000" font-family="Arial" font-size="10">+ removeCall (call: Call &amp; ) void</text>
 <text x="25101" y="4851" fill="#000000" font-family="Arial" font-size="10">+ removeCall (id: const std::string &amp; ) void</text>
 <text x="25101" y="4867" fill="#000000" font-family="Arial" font-size="10">+ empty () bool</text>
 <text x="25101" y="4883" fill="#000000" font-family="Arial" font-size="10">+ empty () bool</text>
 <text x="25101" y="4899" fill="#000000" font-family="Arial" font-size="10">+ getAllCalls () std::vector</text>
 <text x="25101" y="4915" fill="#000000" font-family="Arial" font-size="10">+ getAllCalls () std::vector</text>
 <text x="25101" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getCall (id: const std::string &amp; ) std::shared_ptr</text>
 <text x="25101" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getCall (id: const std::string &amp; ) std::shared_ptr</text>
 <text x="25101" y="4963" fill="#000000" font-family="Arial" font-size="10">+ getCallIDs () std::vector</text>
 <text x="25101" y="4979" fill="#000000" font-family="Arial" font-size="10">+ getCallIDs () std::vector</text>
 <text x="25101" y="4995" fill="#000000" font-family="Arial" font-size="10">+ hasCall (id: const std::string &amp; ) bool</text>
 <text x="25101" y="5011" fill="#000000" font-family="Arial" font-size="10">+ hasCall (id: const std::string &amp; ) bool</text>
 <text x="25101" y="5027" fill="#000000" font-family="Arial" font-size="10">+ empty () bool</text>
 <text x="25101" y="5043" fill="#000000" font-family="Arial" font-size="10">+ getAllCalls () std::vector</text>
 <text x="25101" y="5059" fill="#000000" font-family="Arial" font-size="10">+ getCall (id: const std::string &amp; ) std::shared_ptr</text>
 <text x="25101" y="5075" fill="#000000" font-family="Arial" font-size="10">+ getCallIDs () std::vector</text>
 <text x="25101" y="5091" fill="#000000" font-family="Arial" font-size="10">+ hasCall (id: const std::string &amp; ) bool</text>
 <text x="25101" y="5107" fill="#000000" font-family="Arial" font-size="10">- allowNewCall_ () std::atomic_bool</text>
 <text x="25101" y="5123" fill="#000000" font-family="Arial" font-size="10">- callMapsMutex_ () mutable std::recursive_mutex</text>
 <text x="25101" y="5139" fill="#000000" font-family="Arial" font-size="10">- callMaps_ () std::map</text>
 <text x="25101" y="5155" fill="#000000" font-family="Arial" font-size="10">- getMap_ () const CallMap *</text>
 <polygon points="25831,4941 25831,4869 25930,4869 25930,4941 25831,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="25831,4893 25930,4893" stroke="#0000ff" fill="none"/>
 <polyline points="25831,4917 25930,4917" stroke="#0000ff" fill="none"/>
 <text x="25839" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::CallIDSet</text>
 <text x="25878" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="25878" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="26051,4941 26051,4869 26168,4869 26168,4941 26051,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="26051,4893 26168,4893" stroke="#0000ff" fill="none"/>
 <polyline points="26051,4917 26168,4917" stroke="#0000ff" fill="none"/>
 <text x="26059" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal</text>
 <text x="26107" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="26107" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="26237,4989 26237,4821 26365,4821 26365,4989 26237,4989" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="26237,4845 26365,4845" stroke="#0000ff" fill="none"/>
 <polyline points="26237,4965 26365,4965" stroke="#0000ff" fill="none"/>
 <text x="26245" y="4835" fill="#000000" font-family="Arial" font-size="10">ring::Call::CallState</text>
 <text x="26245" y="4859" fill="#000000" font-family="Arial" font-size="10">- ACTIVE</text>
 <text x="26245" y="4875" fill="#000000" font-family="Arial" font-size="10">- BUSY</text>
 <text x="26245" y="4891" fill="#000000" font-family="Arial" font-size="10">- COUNT__</text>
 <text x="26245" y="4907" fill="#000000" font-family="Arial" font-size="10">- HOLD</text>
 <text x="26245" y="4923" fill="#000000" font-family="Arial" font-size="10">- INACTIVE</text>
 <text x="26245" y="4939" fill="#000000" font-family="Arial" font-size="10">- MERROR</text>
 <text x="26245" y="4955" fill="#000000" font-family="Arial" font-size="10">- OVER</text>
 <text x="26299" y="4979" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="26409,4957 26409,4853 26533,4853 26533,4957 26409,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="26409,4877 26533,4877" stroke="#0000ff" fill="none"/>
 <polyline points="26409,4933 26533,4933" stroke="#0000ff" fill="none"/>
 <text x="26417" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::Call::CallType</text>
 <text x="26417" y="4891" fill="#000000" font-family="Arial" font-size="10">- INCOMING</text>
 <text x="26417" y="4907" fill="#000000" font-family="Arial" font-size="10">- MISSED</text>
 <text x="26417" y="4923" fill="#000000" font-family="Arial" font-size="10">- OUTGOING</text>
 <text x="26469" y="4947" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="26564,4973 26564,4837 26862,4837 26862,4973 26564,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="26564,4861 26862,4861" stroke="#0000ff" fill="none"/>
 <polyline points="26564,4885 26862,4885" stroke="#0000ff" fill="none"/>
 <text x="26642" y="4851" fill="#000000" font-family="Arial" font-size="10">DRing::CallbackWrapper</text>
 <text x="26572" y="4875" fill="#000000" font-family="Arial" font-size="10">- cb_: TFunc</text>
 <text x="26572" y="4899" fill="#000000" font-family="Arial" font-size="10">+ CallbackWrapper () </text>
 <text x="26572" y="4915" fill="#000000" font-family="Arial" font-size="10">+ CallbackWrapper (TFunc) </text>
 <text x="26572" y="4931" fill="#000000" font-family="Arial" font-size="10">+ CallbackWrapper (p: const std::shared_ptr &amp; ) </text>
 <text x="26572" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator bool () constexpr</text>
 <text x="26572" y="4963" fill="#000000" font-family="Arial" font-size="10">+ operator* () constexpr const TFunc &amp;</text>
 <polygon points="26619,2959 26619,2887 26807,2887 26807,2959 26619,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="26619,2911 26807,2911" stroke="#0000ff" fill="none"/>
 <polyline points="26619,2935 26807,2935" stroke="#0000ff" fill="none"/>
 <text x="26627" y="2901" fill="#000000" font-family="Arial" font-size="10">DRing::CallbackWrapperBase</text>
 <text x="26711" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="26711" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="26713,4837 26713,4716 26713,4548 26713,4346 26713,4120 26713,3884 26713,3649 26713,3428 26713,3233 26713,3076 26713,2969" stroke="#CC0044" fill="none"/>
 <polygon points="26710,2969 26713,2959 26717,2969 26710,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="26880,4965 26880,4845 27140,4845 27140,4965 26880,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="26880,4869 27140,4869" stroke="#0000ff" fill="none"/>
 <polyline points="26880,4941 27140,4941" stroke="#0000ff" fill="none"/>
 <text x="26909" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::video::CaptureGraphInterfaces</text>
 <text x="26888" y="4883" fill="#000000" font-family="Arial" font-size="10">+ captureGraph_: ICaptureGraphBuilder2 *</text>
 <text x="26888" y="4899" fill="#000000" font-family="Arial" font-size="10">+ graph_: IGraphBuilder *</text>
 <text x="26888" y="4915" fill="#000000" font-family="Arial" font-size="10">+ streamConf_: IAMStreamConfig *</text>
 <text x="26888" y="4931" fill="#000000" font-family="Arial" font-size="10">+ videoInputFilter_: IBaseFilter *</text>
 <text x="26888" y="4955" fill="#000000" font-family="Arial" font-size="10">+ CaptureGraphInterfaces () </text>
 <polygon points="27159,5109 27159,4701 27448,4701 27448,5109 27159,5109" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="27159,4725 27448,4725" stroke="#0000ff" fill="none"/>
 <polyline points="27159,5085 27448,5085" stroke="#0000ff" fill="none"/>
 <text x="27193" y="4715" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsValidator::CertificateCheck</text>
 <text x="27167" y="4739" fill="#000000" font-family="Arial" font-size="10">- AUTHORITY_MISMATCH</text>
 <text x="27167" y="4755" fill="#000000" font-family="Arial" font-size="10">- COUNT__</text>
 <text x="27167" y="4771" fill="#000000" font-family="Arial" font-size="10">- EXIST</text>
 <text x="27167" y="4787" fill="#000000" font-family="Arial" font-size="10">- EXPIRED</text>
 <text x="27167" y="4803" fill="#000000" font-family="Arial" font-size="10">- HAS_PRIVATE_KEY</text>
 <text x="27167" y="4819" fill="#000000" font-family="Arial" font-size="10">- KEY_MATCH</text>
 <text x="27167" y="4835" fill="#000000" font-family="Arial" font-size="10">- KNOWN_AUTHORITY</text>
 <text x="27167" y="4851" fill="#000000" font-family="Arial" font-size="10">- NOT_ACTIVATED</text>
 <text x="27167" y="4867" fill="#000000" font-family="Arial" font-size="10">- NOT_REVOKED</text>
 <text x="27167" y="4883" fill="#000000" font-family="Arial" font-size="10">- NOT_SELF_SIGNED</text>
 <text x="27167" y="4899" fill="#000000" font-family="Arial" font-size="10">- PRIVATE_KEY_DIRECTORY_PERMISSIONS</text>
 <text x="27167" y="4915" fill="#000000" font-family="Arial" font-size="10">- PRIVATE_KEY_SELINUX_ATTRIBUTES</text>
 <text x="27167" y="4931" fill="#000000" font-family="Arial" font-size="10">- PRIVATE_KEY_STORAGE_LOCATION</text>
 <text x="27167" y="4947" fill="#000000" font-family="Arial" font-size="10">- PRIVATE_KEY_STORAGE_PERMISSION</text>
 <text x="27167" y="4963" fill="#000000" font-family="Arial" font-size="10">- PUBLIC_KEY_DIRECTORY_PERMISSIONS</text>
 <text x="27167" y="4979" fill="#000000" font-family="Arial" font-size="10">- PUBLIC_KEY_SELINUX_ATTRIBUTES</text>
 <text x="27167" y="4995" fill="#000000" font-family="Arial" font-size="10">- PUBLIC_KEY_STORAGE_LOCATION</text>
 <text x="27167" y="5011" fill="#000000" font-family="Arial" font-size="10">- PUBLIC_KEY_STORAGE_PERMISSION</text>
 <text x="27167" y="5027" fill="#000000" font-family="Arial" font-size="10">- STRONG_SIGNING</text>
 <text x="27167" y="5043" fill="#000000" font-family="Arial" font-size="10">- UNEXPECTED_OWNER</text>
 <text x="27167" y="5059" fill="#000000" font-family="Arial" font-size="10">- VALID</text>
 <text x="27167" y="5075" fill="#000000" font-family="Arial" font-size="10">- VALID_AUTHORITY</text>
 <text x="27301" y="5099" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="27466,5093 27466,4717 27725,4717 27725,5093 27466,5093" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="27466,4741 27725,4741" stroke="#0000ff" fill="none"/>
 <polyline points="27466,5069 27725,5069" stroke="#0000ff" fill="none"/>
 <text x="27483" y="4731" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsValidator::CertificateDetails</text>
 <text x="27474" y="4755" fill="#000000" font-family="Arial" font-size="10">- ACTIVATION_DATE</text>
 <text x="27474" y="4771" fill="#000000" font-family="Arial" font-size="10">- CN</text>
 <text x="27474" y="4787" fill="#000000" font-family="Arial" font-size="10">- COUNT__</text>
 <text x="27474" y="4803" fill="#000000" font-family="Arial" font-size="10">- EXPIRATION_DATE</text>
 <text x="27474" y="4819" fill="#000000" font-family="Arial" font-size="10">- ISSUER</text>
 <text x="27474" y="4835" fill="#000000" font-family="Arial" font-size="10">- ISSUER_DN</text>
 <text x="27474" y="4851" fill="#000000" font-family="Arial" font-size="10">- IS_CA</text>
 <text x="27474" y="4867" fill="#000000" font-family="Arial" font-size="10">- MD5_FINGERPRINT</text>
 <text x="27474" y="4883" fill="#000000" font-family="Arial" font-size="10">- N</text>
 <text x="27474" y="4899" fill="#000000" font-family="Arial" font-size="10">- NEXT_EXPECTED_UPDATE_DATE</text>
 <text x="27474" y="4915" fill="#000000" font-family="Arial" font-size="10">- O</text>
 <text x="27474" y="4931" fill="#000000" font-family="Arial" font-size="10">- OUTGOING_SERVER</text>
 <text x="27474" y="4947" fill="#000000" font-family="Arial" font-size="10">- PUBLIC_KEY_ID</text>
 <text x="27474" y="4963" fill="#000000" font-family="Arial" font-size="10">- PUBLIC_SIGNATURE</text>
 <text x="27474" y="4979" fill="#000000" font-family="Arial" font-size="10">- REQUIRE_PRIVATE_KEY_PASSWORD</text>
 <text x="27474" y="4995" fill="#000000" font-family="Arial" font-size="10">- SERIAL_NUMBER</text>
 <text x="27474" y="5011" fill="#000000" font-family="Arial" font-size="10">- SHA1_FINGERPRINT</text>
 <text x="27474" y="5027" fill="#000000" font-family="Arial" font-size="10">- SIGNATURE_ALGORITHM</text>
 <text x="27474" y="5043" fill="#000000" font-family="Arial" font-size="10">- SUBJECT_KEY_ALGORITHM</text>
 <text x="27474" y="5059" fill="#000000" font-family="Arial" font-size="10">- VERSION_NUMBER</text>
 <text x="27593" y="5083" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="27743,4941 27743,4869 28066,4869 28066,4941 27743,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="27743,4893 28066,4893" stroke="#0000ff" fill="none"/>
 <polyline points="27743,4917 28066,4917" stroke="#0000ff" fill="none"/>
 <text x="27772" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::CertificateExpired</text>
 <text x="27751" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;CertificateExpired&quot;</text>
 <text x="27902" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="28084,4941 28084,4869 28430,4869 28430,4941 28084,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="28084,4893 28430,4893" stroke="#0000ff" fill="none"/>
 <polyline points="28084,4917 28430,4917" stroke="#0000ff" fill="none"/>
 <text x="28114" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::CertificatePathPinned</text>
 <text x="28092" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;CertificatePathPinned&quot;</text>
 <text x="28255" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="28449,4941 28449,4869 28768,4869 28768,4941 28449,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="28449,4893 28768,4893" stroke="#0000ff" fill="none"/>
 <polyline points="28449,4917 28768,4917" stroke="#0000ff" fill="none"/>
 <text x="28478" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::CertificatePinned</text>
 <text x="28457" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;CertificatePinned&quot;</text>
 <text x="28606" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="28786,4941 28786,4869 29147,4869 29147,4941 28786,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="28786,4893 29147,4893" stroke="#0000ff" fill="none"/>
 <polyline points="28786,4917 29147,4917" stroke="#0000ff" fill="none"/>
 <text x="28815" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::CertificateStateChanged</text>
 <text x="28794" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;CertificateStateChanged&quot;</text>
 <text x="28964" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="29165,5125 29165,4685 29791,4685 29791,5125 29165,5125" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="29165,4709 29791,4709" stroke="#0000ff" fill="none"/>
 <polyline points="29165,4765 29791,4765" stroke="#0000ff" fill="none"/>
 <text x="29408" y="4699" fill="#000000" font-family="Arial" font-size="10">ring::tls::CertificateStore</text>
 <text x="29173" y="4723" fill="#000000" font-family="Arial" font-size="10">- certPath_: const std::string</text>
 <text x="29173" y="4739" fill="#000000" font-family="Arial" font-size="10">- crlPath_: const std::string</text>
 <text x="29173" y="4755" fill="#000000" font-family="Arial" font-size="10">- lock_: mutable std::mutex</text>
 <text x="29173" y="4779" fill="#000000" font-family="Arial" font-size="10">+ instance () CertificateStore &amp;</text>
 <text x="29173" y="4795" fill="#000000" font-family="Arial" font-size="10">+ CertificateStore () </text>
 <text x="29173" y="4811" fill="#000000" font-family="Arial" font-size="10">+ CertificateStore () </text>
 <text x="29173" y="4827" fill="#000000" font-family="Arial" font-size="10">+ loadRevocations (crt: crypto::Certificate &amp; ) void</text>
 <text x="29173" y="4843" fill="#000000" font-family="Arial" font-size="10">+ operator= () CertificateStore &amp;</text>
 <text x="29173" y="4859" fill="#000000" font-family="Arial" font-size="10">+ pinCertificate (crt: const std::vector &amp; , local: bool ) std::vector</text>
 <text x="29173" y="4875" fill="#000000" font-family="Arial" font-size="10">+ pinCertificate (crypto::Certificate, local: bool ) std::vector</text>
 <text x="29173" y="4891" fill="#000000" font-family="Arial" font-size="10">+ pinCertificate (crt: const std::shared_ptr &amp; , local: bool ) std::vector</text>
 <text x="29173" y="4907" fill="#000000" font-family="Arial" font-size="10">+ pinCertificatePath (path: const std::string &amp; , cb: std::function ) void</text>
 <text x="29173" y="4923" fill="#000000" font-family="Arial" font-size="10">+ pinRevocationList (id: const std::string &amp; , crl: const std::shared_ptr &amp; ) void</text>
 <text x="29173" y="4939" fill="#000000" font-family="Arial" font-size="10">+ pinRevocationList (id: const std::string &amp; , dht::crypto::RevocationList) void</text>
 <text x="29173" y="4955" fill="#000000" font-family="Arial" font-size="10">+ setTrustedCertificate (id: const std::string &amp; , status: TrustStatus ) bool</text>
 <text x="29173" y="4971" fill="#000000" font-family="Arial" font-size="10">+ unpinCertificate (std: const ) bool</text>
 <text x="29173" y="4987" fill="#000000" font-family="Arial" font-size="10">+ unpinCertificatePath (std: const ) unsigned</text>
 <text x="29173" y="5003" fill="#000000" font-family="Arial" font-size="10">+ findCertificateByName (name: const std::string &amp; , type: crypto::Certificate::NameType ) std::shared_ptr</text>
 <text x="29173" y="5019" fill="#000000" font-family="Arial" font-size="10">+ findCertificateByUID (uid: const std::string &amp; ) std::shared_ptr</text>
 <text x="29173" y="5035" fill="#000000" font-family="Arial" font-size="10">+ findIssuer (crt: const std::shared_ptr &amp; ) std::shared_ptr</text>
 <text x="29173" y="5051" fill="#000000" font-family="Arial" font-size="10">+ getCertificate (k: const std::string &amp; ) std::shared_ptr</text>
 <text x="29173" y="5067" fill="#000000" font-family="Arial" font-size="10">+ getPinnedCertificates () std::vector</text>
 <text x="29173" y="5083" fill="#000000" font-family="Arial" font-size="10">+ getTrustedCertificates () std::vector</text>
 <text x="29173" y="5099" fill="#000000" font-family="Arial" font-size="10">- loadLocalCertificates () unsigned</text>
 <text x="29173" y="5115" fill="#000000" font-family="Arial" font-size="10">- pinRevocationList (id: const std::string &amp; , crl: const dht::crypto::RevocationList &amp; ) void</text>
 <polygon points="29809,4957 29809,4853 30115,4853 30115,4957 29809,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="29809,4877 30115,4877" stroke="#0000ff" fill="none"/>
 <polyline points="29809,4933 30115,4933" stroke="#0000ff" fill="none"/>
 <text x="29870" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::tls::ChangeStateEventData</text>
 <text x="29817" y="4891" fill="#000000" font-family="Arial" font-size="10">+ ssl_info: pj_ssl_sock_info</text>
 <text x="29817" y="4907" fill="#000000" font-family="Arial" font-size="10">+ state_info: pjsip_transport_state_info</text>
 <text x="29817" y="4923" fill="#000000" font-family="Arial" font-size="10">+ tls_info: pjsip_tls_state_info</text>
 <text x="29817" y="4947" fill="#000000" font-family="Arial" font-size="10">+ decltype (PJSIP_TP_STATE_DISCONNECTED) </text>
 <polygon points="30133,4989 30133,4821 30351,4821 30351,4989 30133,4989" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="30133,4845 30351,4845" stroke="#0000ff" fill="none"/>
 <polyline points="30133,4965 30351,4965" stroke="#0000ff" fill="none"/>
 <text x="30141" y="4835" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsValidator::CheckValues</text>
 <text x="30141" y="4859" fill="#000000" font-family="Arial" font-size="10">- COUNT__</text>
 <text x="30141" y="4875" fill="#000000" font-family="Arial" font-size="10">- CUSTOM</text>
 <text x="30141" y="4891" fill="#000000" font-family="Arial" font-size="10">- FAILED</text>
 <text x="30141" y="4907" fill="#000000" font-family="Arial" font-size="10">- ISO_DATE</text>
 <text x="30141" y="4923" fill="#000000" font-family="Arial" font-size="10">- NUMBER</text>
 <text x="30141" y="4939" fill="#000000" font-family="Arial" font-size="10">- PASSED</text>
 <text x="30141" y="4955" fill="#000000" font-family="Arial" font-size="10">- UNSUPPORTED</text>
 <text x="30240" y="4979" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="30370,4973 30370,4837 30615,4837 30615,4973 30370,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="30370,4861 30615,4861" stroke="#0000ff" fill="none"/>
 <polyline points="30370,4949 30615,4949" stroke="#0000ff" fill="none"/>
 <text x="30378" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsValidator::CheckValuesType</text>
 <text x="30378" y="4875" fill="#000000" font-family="Arial" font-size="10">- BOOLEAN</text>
 <text x="30378" y="4891" fill="#000000" font-family="Arial" font-size="10">- COUNT__</text>
 <text x="30378" y="4907" fill="#000000" font-family="Arial" font-size="10">- CUSTOM</text>
 <text x="30378" y="4923" fill="#000000" font-family="Arial" font-size="10">- ISO_DATE</text>
 <text x="30378" y="4939" fill="#000000" font-family="Arial" font-size="10">- NUMBER</text>
 <text x="30490" y="4963" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="30633,4941 30633,4869 30746,4869 30746,4941 30633,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="30633,4893 30746,4893" stroke="#0000ff" fill="none"/>
 <polyline points="30633,4917 30746,4917" stroke="#0000ff" fill="none"/>
 <text x="30641" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::CipherArray</text>
 <text x="30687" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="30687" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="30764,4981 30764,4829 31389,4829 31389,4981 30764,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="30764,4853 31389,4853" stroke="#0000ff" fill="none"/>
 <polyline points="30764,4909 31389,4909" stroke="#0000ff" fill="none"/>
 <text x="31033" y="4843" fill="#000000" font-family="Arial" font-size="10">ClutterSHMSrc</text>
 <text x="30772" y="4867" fill="#000000" font-family="Arial" font-size="10">- height_: unsigned</text>
 <text x="30772" y="4883" fill="#000000" font-family="Arial" font-size="10">- texture_: ClutterActor *</text>
 <text x="30772" y="4899" fill="#000000" font-family="Arial" font-size="10">- width_: unsigned</text>
 <text x="30772" y="4923" fill="#000000" font-family="Arial" font-size="10">+ ClutterSHMSrc (name: const std::string &amp; , width: unsigned , height: unsigned , texture: ClutterActor *) </text>
 <text x="30772" y="4939" fill="#000000" font-family="Arial" font-size="10">+ ClutterSHMSrc () </text>
 <text x="30772" y="4955" fill="#000000" font-family="Arial" font-size="10">+ operator= () ClutterSHMSrc &amp;</text>
 <text x="30772" y="4971" fill="#000000" font-family="Arial" font-size="10">+ render_to_texture () void</text>
 <polygon points="30938,3063 30938,2783 31214,2783 31214,3063 30938,3063" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="30938,2807 31214,2807" stroke="#0000ff" fill="none"/>
 <polyline points="30938,2895 31214,2895" stroke="#0000ff" fill="none"/>
 <text x="31052" y="2797" fill="#000000" font-family="Arial" font-size="10">SHMSrc</text>
 <text x="30946" y="2821" fill="#000000" font-family="Arial" font-size="10"># buffer_gen_: unsigned</text>
 <text x="30946" y="2837" fill="#000000" font-family="Arial" font-size="10"># fd_: int</text>
 <text x="30946" y="2853" fill="#000000" font-family="Arial" font-size="10"># shm_area_: SHMHeader *</text>
 <text x="30946" y="2869" fill="#000000" font-family="Arial" font-size="10"># shm_area_len_: size_t</text>
 <text x="30946" y="2885" fill="#000000" font-family="Arial" font-size="10"># shm_name_: std::string</text>
 <text x="30946" y="2909" fill="#000000" font-family="Arial" font-size="10">+ ~SHMSrc () Virtual</text>
 <text x="30946" y="2925" fill="#000000" font-family="Arial" font-size="10">+ SHMSrc (shm_name: const std::string &amp; ) </text>
 <text x="30946" y="2941" fill="#000000" font-family="Arial" font-size="10">+ SHMSrc () </text>
 <text x="30946" y="2957" fill="#000000" font-family="Arial" font-size="10">+ operator= () SHMSrc &amp;</text>
 <text x="30946" y="2973" fill="#000000" font-family="Arial" font-size="10">+ render (dest: char *, len: size_t ) void</text>
 <text x="30946" y="2989" fill="#000000" font-family="Arial" font-size="10">+ resize_area () bool</text>
 <text x="30946" y="3005" fill="#000000" font-family="Arial" font-size="10">+ start () bool</text>
 <text x="30946" y="3021" fill="#000000" font-family="Arial" font-size="10">+ stop () bool</text>
 <text x="30946" y="3037" fill="#000000" font-family="Arial" font-size="10"># shm_lock () void</text>
 <text x="30946" y="3053" fill="#000000" font-family="Arial" font-size="10"># shm_unlock () void</text>
 <polyline points="31076,4829 31076,4719 31076,4572 31076,4395 31076,4198 31076,3990 31076,3778 31076,3572 31076,3380 31076,3210 31076,3073" stroke="#CC0044" fill="none"/>
 <polygon points="31073,3073 31076,3063 31080,3073 31073,3073" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="31407,4941 31407,4869 31671,4869 31671,4941 31407,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="31407,4893 31671,4893" stroke="#0000ff" fill="none"/>
 <polyline points="31407,4917 31671,4917" stroke="#0000ff" fill="none"/>
 <text x="31487" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::CompileError</text>
 <text x="31537" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="31415" y="4931" fill="#000000" font-family="Arial" font-size="10">+ CompileError (error: const std::string &amp; ) </text>
 <polygon points="31609,2959 31609,2887 31747,2887 31747,2959 31609,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="31609,2911 31747,2911" stroke="#0000ff" fill="none"/>
 <polyline points="31609,2935 31747,2935" stroke="#0000ff" fill="none"/>
 <text x="31617" y="2901" fill="#000000" font-family="Arial" font-size="10">std::invalid_argument</text>
 <text x="31676" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="31676" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="31541,4869 31548,4765 31560,4605 31574,4404 31590,4175 31607,3931 31625,3686 31641,3454 31655,3248 31667,3082 31675,2969" stroke="#CC0044" fill="none"/>
 <polygon points="31671,2969 31676,2959 31678,2969 31671,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="31961,4965 31961,4845 32137,4845 32137,4965 31961,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="31961,4869 32137,4869" stroke="#0000ff" fill="none"/>
 <polyline points="31961,4941 32137,4941" stroke="#0000ff" fill="none"/>
 <text x="31995" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::ComponentIO</text>
 <text x="31969" y="4883" fill="#000000" font-family="Arial" font-size="10">+ cb: IceRecvCb</text>
 <text x="31969" y="4899" fill="#000000" font-family="Arial" font-size="10">+ cv: std::condition_variable</text>
 <text x="31969" y="4915" fill="#000000" font-family="Arial" font-size="10">+ mutex: std::mutex</text>
 <text x="31969" y="4931" fill="#000000" font-family="Arial" font-size="10">+ queue: std::deque</text>
 <text x="32047" y="4955" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="32156,4941 32156,4869 32613,4869 32613,4941 32156,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="32156,4893 32613,4893" stroke="#0000ff" fill="none"/>
 <polyline points="32156,4917 32613,4917" stroke="#0000ff" fill="none"/>
 <text x="32347" y="4883" fill="#000000" font-family="Arial" font-size="10">ConcreteCall</text>
 <text x="32382" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="32164" y="4931" fill="#000000" font-family="Arial" font-size="10">+ ConcreteCall (account: A &amp; , id: const std::string &amp; , type: Call::CallType ) </text>
 <polygon points="32357,2959 32357,2887 32411,2887 32411,2959 32357,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="32357,2911 32411,2911" stroke="#0000ff" fill="none"/>
 <polyline points="32357,2935 32411,2935" stroke="#0000ff" fill="none"/>
 <text x="32381" y="2901" fill="#000000" font-family="Arial" font-size="10">T</text>
 <text x="32382" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="32382" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="32384,4869 32384,4765 32384,4605 32384,4404 32384,4175 32384,3931 32384,3686 32384,3454 32384,3248 32384,3082 32384,2969" stroke="#CC0044" fill="none"/>
 <polygon points="32381,2969 32384,2959 32388,2969 32381,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="3723,1545 3723,1265 4071,1265 4071,1545 3723,1545" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="3723,1289 4071,1289" stroke="#0000ff" fill="none"/>
 <polyline points="3723,1345 4071,1345" stroke="#0000ff" fill="none"/>
 <text x="3850" y="1279" fill="#000000" font-family="Arial" font-size="10">ring::Conference</text>
 <text x="3731" y="1303" fill="#000000" font-family="Arial" font-size="10">- confState_: ConferenceState</text>
 <text x="3731" y="1319" fill="#000000" font-family="Arial" font-size="10">- id_: std::string</text>
 <text x="3731" y="1335" fill="#000000" font-family="Arial" font-size="10">- participants_: ParticipantSet</text>
 <text x="3731" y="1359" fill="#000000" font-family="Arial" font-size="10">+ toggleRecording () bool Virtual</text>
 <text x="3731" y="1375" fill="#000000" font-family="Arial" font-size="10">+ ~Conference () Virtual</text>
 <text x="3731" y="1391" fill="#000000" font-family="Arial" font-size="10">+ Conference () </text>
 <text x="3731" y="1407" fill="#000000" font-family="Arial" font-size="10">+ add (participant_id: const std::string &amp; ) void</text>
 <text x="3731" y="1423" fill="#000000" font-family="Arial" font-size="10">+ bindParticipant (participant_id: const std::string &amp; ) void</text>
 <text x="3731" y="1439" fill="#000000" font-family="Arial" font-size="10">+ remove (participant_id: const std::string &amp; ) void</text>
 <text x="3731" y="1455" fill="#000000" font-family="Arial" font-size="10">+ setState (state: ConferenceState ) void</text>
 <text x="3731" y="1471" fill="#000000" font-family="Arial" font-size="10">+ getConfID () std::string</text>
 <text x="3731" y="1487" fill="#000000" font-family="Arial" font-size="10">+ getDisplayNames () std::vector</text>
 <text x="3731" y="1503" fill="#000000" font-family="Arial" font-size="10">+ getParticipantList () ParticipantSet</text>
 <text x="3731" y="1519" fill="#000000" font-family="Arial" font-size="10">+ getState () Conference::ConferenceState</text>
 <text x="3731" y="1535" fill="#000000" font-family="Arial" font-size="10">+ getStateStr () std::string</text>
 <polyline points="3871,1265 3860,1208 3848,1144 3834,1075 3820,1000 3804,922 3787,840 3769,758 3751,675 3732,592 3713,512 3711,505 3709,497 3707,490 3705,482 3703,475 3701,467 3699,460 3697,452 3695,445 3693,437" stroke="#CC0044" fill="none"/>
 <polygon points="3690,438 3691,427 3697,436 3690,438" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="32631,4941 32631,4869 32968,4869 32968,4941 32631,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="32631,4893 32968,4893" stroke="#0000ff" fill="none"/>
 <polyline points="32631,4917 32968,4917" stroke="#0000ff" fill="none"/>
 <text x="32687" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::ConferenceChanged</text>
 <text x="32639" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;ConferenceChanged&quot;</text>
 <text x="32797" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="32986,4941 32986,4869 33317,4869 33317,4941 32986,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="32986,4893 33317,4893" stroke="#0000ff" fill="none"/>
 <polyline points="32986,4917 33317,4917" stroke="#0000ff" fill="none"/>
 <text x="33042" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::ConferenceCreated</text>
 <text x="32994" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;ConferenceCreated&quot;</text>
 <text x="33149" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="33335,4941 33335,4869 33470,4869 33470,4941 33335,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="33335,4893 33470,4893" stroke="#0000ff" fill="none"/>
 <polyline points="33335,4917 33470,4917" stroke="#0000ff" fill="none"/>
 <text x="33343" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::ConferenceMap</text>
 <text x="33400" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="33400" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="33488,4941 33488,4869 33827,4869 33827,4941 33488,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="33488,4893 33827,4893" stroke="#0000ff" fill="none"/>
 <polyline points="33488,4917 33827,4917" stroke="#0000ff" fill="none"/>
 <text x="33544" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::ConferenceRemoved</text>
 <text x="33496" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;ConferenceRemoved&quot;</text>
 <text x="33655" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="33845,4941 33845,4869 34015,4869 34015,4941 33845,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="33845,4893 34015,4893" stroke="#0000ff" fill="none"/>
 <polyline points="33845,4917 34015,4917" stroke="#0000ff" fill="none"/>
 <text x="33853" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal</text>
 <text x="33928" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="33928" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="34034,4981 34034,4829 34205,4829 34205,4981 34034,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="34034,4853 34205,4853" stroke="#0000ff" fill="none"/>
 <polyline points="34034,4957 34205,4957" stroke="#0000ff" fill="none"/>
 <text x="34042" y="4843" fill="#000000" font-family="Arial" font-size="10">ring::Call::ConnectionState</text>
 <text x="34042" y="4867" fill="#000000" font-family="Arial" font-size="10">- CONNECTED</text>
 <text x="34042" y="4883" fill="#000000" font-family="Arial" font-size="10">- COUNT__</text>
 <text x="34042" y="4899" fill="#000000" font-family="Arial" font-size="10">- DISCONNECTED</text>
 <text x="34042" y="4915" fill="#000000" font-family="Arial" font-size="10">- PROGRESSING</text>
 <text x="34042" y="4931" fill="#000000" font-family="Arial" font-size="10">- RINGING</text>
 <text x="34042" y="4947" fill="#000000" font-family="Arial" font-size="10">- TRYING</text>
 <text x="34117" y="4971" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="34223,5005 34223,4805 34577,4805 34577,5005 34223,5005" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="34223,4829 34577,4829" stroke="#0000ff" fill="none"/>
 <polyline points="34223,4853 34577,4853" stroke="#0000ff" fill="none"/>
 <text x="34322" y="4819" fill="#000000" font-family="Arial" font-size="10">ring::RingAccount::Contact</text>
 <text x="34398" y="4843" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="34231" y="4867" fill="#000000" font-family="Arial" font-size="10">+ Contact () </text>
 <text x="34231" y="4883" fill="#000000" font-family="Arial" font-size="10">+ Contact (a: time_t , r: time_t , c: bool ) </text>
 <text x="34231" y="4899" fill="#000000" font-family="Arial" font-size="10">+ Contact (json: const Json::Value &amp; ) </text>
 <text x="34231" y="4915" fill="#000000" font-family="Arial" font-size="10">+ MSGPACK_DEFINE_MAP (added, removed, confirmed) </text>
 <text x="34231" y="4931" fill="#000000" font-family="Arial" font-size="10">+ added () time_t</text>
 <text x="34231" y="4947" fill="#000000" font-family="Arial" font-size="10">+ confirmed () bool</text>
 <text x="34231" y="4963" fill="#000000" font-family="Arial" font-size="10">+ removed () time_t</text>
 <text x="34231" y="4979" fill="#000000" font-family="Arial" font-size="10">+ isActive () bool</text>
 <text x="34231" y="4995" fill="#000000" font-family="Arial" font-size="10">+ toJson () Json::Value</text>
 <polygon points="34596,4941 34596,4869 34899,4869 34899,4941 34596,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="34596,4893 34899,4893" stroke="#0000ff" fill="none"/>
 <polyline points="34596,4917 34899,4917" stroke="#0000ff" fill="none"/>
 <text x="34625" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::ContactAdded</text>
 <text x="34604" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;ContactAdded&quot;</text>
 <text x="34745" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="34917,4941 34917,4869 35236,4869 35236,4941 34917,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="34917,4893 35236,4893" stroke="#0000ff" fill="none"/>
 <polyline points="34917,4917 35236,4917" stroke="#0000ff" fill="none"/>
 <text x="34946" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::ContactRemoved</text>
 <text x="34925" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;ContactRemoved&quot;</text>
 <text x="35074" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="35254,5037 35254,4773 36105,4773 36105,5037 35254,5037" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="35254,4797 36105,4797" stroke="#0000ff" fill="none"/>
 <polyline points="35254,4853 36105,4853" stroke="#0000ff" fill="none"/>
 <text x="35619" y="4787" fill="#000000" font-family="Arial" font-size="10">ring::upnp::Controller</text>
 <text x="35262" y="4811" fill="#000000" font-family="Arial" font-size="10">- tcpMappings_: PortMapLocal</text>
 <text x="35262" y="4827" fill="#000000" font-family="Arial" font-size="10">- udpMappings_: PortMapLocal</text>
 <text x="35262" y="4843" fill="#000000" font-family="Arial" font-size="10">- upnpContext_: std::shared_ptr</text>
 <text x="35262" y="4867" fill="#000000" font-family="Arial" font-size="10">+ Controller () </text>
 <text x="35262" y="4883" fill="#000000" font-family="Arial" font-size="10">+ addAnyMapping (port_desired: uint16_t , port_local: uint16_t , type: PortType , use_same_port: bool , unique: bool , port_used: uint16_t *) bool</text>
 <text x="35262" y="4899" fill="#000000" font-family="Arial" font-size="10">+ addAnyMapping (port_desired: uint16_t , type: PortType , unique: bool , port_used: uint16_t *) bool</text>
 <text x="35262" y="4915" fill="#000000" font-family="Arial" font-size="10">+ hasValidIGD (timeout: std::chrono::seconds ) bool</text>
 <text x="35262" y="4931" fill="#000000" font-family="Arial" font-size="10">+ removeMappings () void</text>
 <text x="35262" y="4947" fill="#000000" font-family="Arial" font-size="10">+ setIGDListener (IGDFoundCallback) void</text>
 <text x="35262" y="4963" fill="#000000" font-family="Arial" font-size="10">+ ~Controller () </text>
 <text x="35262" y="4979" fill="#000000" font-family="Arial" font-size="10">+ getExternalIP () IpAddr</text>
 <text x="35262" y="4995" fill="#000000" font-family="Arial" font-size="10">+ getLocalIP () IpAddr</text>
 <text x="35262" y="5011" fill="#000000" font-family="Arial" font-size="10">- listToken_ () size_t</text>
 <text x="35262" y="5027" fill="#000000" font-family="Arial" font-size="10">- removeMappings (type: PortType ) void</text>
 <polygon points="36123,4941 36123,4869 36306,4869 36306,4941 36123,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="36123,4893 36306,4893" stroke="#0000ff" fill="none"/>
 <polyline points="36123,4917 36306,4917" stroke="#0000ff" fill="none"/>
 <text x="36174" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::Converter</text>
 <text x="36212" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="36131" y="4931" fill="#000000" font-family="Arial" font-size="10">+ convert (const: RLP , int) T</text>
 <polygon points="36324,4941 36324,4869 36632,4869 36632,4941 36324,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="36324,4893 36632,4893" stroke="#0000ff" fill="none"/>
 <polyline points="36324,4917 36632,4917" stroke="#0000ff" fill="none"/>
 <text x="36451" y="4883" fill="#000000" font-family="Arial" font-size="10">Converter</text>
 <text x="36476" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="36332" y="4931" fill="#000000" font-family="Arial" font-size="10">+ convert (_r: RLP const &amp; , _flags: int ) std::string</text>
 <polygon points="36650,4941 36650,4869 36932,4869 36932,4941 36650,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="36650,4893 36932,4893" stroke="#0000ff" fill="none"/>
 <polyline points="36650,4917 36932,4917" stroke="#0000ff" fill="none"/>
 <text x="36764" y="4883" fill="#000000" font-family="Arial" font-size="10">Converter</text>
 <text x="36789" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="36658" y="4931" fill="#000000" font-family="Arial" font-size="10">+ convert (_r: RLP const &amp; , _flags: int ) bytes</text>
 <polygon points="36950,4941 36950,4869 37232,4869 37232,4941 36950,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="36950,4893 37232,4893" stroke="#0000ff" fill="none"/>
 <polyline points="36950,4917 37232,4917" stroke="#0000ff" fill="none"/>
 <text x="37064" y="4883" fill="#000000" font-family="Arial" font-size="10">Converter</text>
 <text x="37089" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="36958" y="4931" fill="#000000" font-family="Arial" font-size="10">+ convert (_r: RLP const &amp; , _flags: int ) RLPs</text>
 <polygon points="37251,4941 37251,4869 37540,4869 37540,4941 37251,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="37251,4893 37540,4893" stroke="#0000ff" fill="none"/>
 <polyline points="37251,4917 37540,4917" stroke="#0000ff" fill="none"/>
 <text x="37368" y="4883" fill="#000000" font-family="Arial" font-size="10">Converter</text>
 <text x="37393" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="37259" y="4931" fill="#000000" font-family="Arial" font-size="10">+ convert (_r: RLP const &amp; , _flags: int ) uint8_t</text>
 <polygon points="37558,4941 37558,4869 37854,4869 37854,4941 37558,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="37558,4893 37854,4893" stroke="#0000ff" fill="none"/>
 <polyline points="37558,4917 37854,4917" stroke="#0000ff" fill="none"/>
 <text x="37679" y="4883" fill="#000000" font-family="Arial" font-size="10">Converter</text>
 <text x="37704" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="37566" y="4931" fill="#000000" font-family="Arial" font-size="10">+ convert (_r: RLP const &amp; , _flags: int ) uint16_t</text>
 <polygon points="37872,4941 37872,4869 38168,4869 38168,4941 37872,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="37872,4893 38168,4893" stroke="#0000ff" fill="none"/>
 <polyline points="37872,4917 38168,4917" stroke="#0000ff" fill="none"/>
 <text x="37993" y="4883" fill="#000000" font-family="Arial" font-size="10">Converter</text>
 <text x="38018" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="37880" y="4931" fill="#000000" font-family="Arial" font-size="10">+ convert (_r: RLP const &amp; , _flags: int ) uint32_t</text>
 <polygon points="38186,4941 38186,4869 38482,4869 38482,4941 38186,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="38186,4893 38482,4893" stroke="#0000ff" fill="none"/>
 <polyline points="38186,4917 38482,4917" stroke="#0000ff" fill="none"/>
 <text x="38307" y="4883" fill="#000000" font-family="Arial" font-size="10">Converter</text>
 <text x="38332" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="38194" y="4931" fill="#000000" font-family="Arial" font-size="10">+ convert (_r: RLP const &amp; , _flags: int ) uint64_t</text>
 <polygon points="38500,4941 38500,4869 38778,4869 38778,4941 38500,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="38500,4893 38778,4893" stroke="#0000ff" fill="none"/>
 <polyline points="38500,4917 38778,4917" stroke="#0000ff" fill="none"/>
 <text x="38612" y="4883" fill="#000000" font-family="Arial" font-size="10">Converter</text>
 <text x="38637" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="38508" y="4931" fill="#000000" font-family="Arial" font-size="10">+ convert (_r: RLP const &amp; , _flags: int ) u160</text>
 <polygon points="38796,4941 38796,4869 39074,4869 39074,4941 38796,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="38796,4893 39074,4893" stroke="#0000ff" fill="none"/>
 <polyline points="38796,4917 39074,4917" stroke="#0000ff" fill="none"/>
 <text x="38908" y="4883" fill="#000000" font-family="Arial" font-size="10">Converter</text>
 <text x="38933" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="38804" y="4931" fill="#000000" font-family="Arial" font-size="10">+ convert (_r: RLP const &amp; , _flags: int ) u256</text>
 <polygon points="39093,4941 39093,4869 39374,4869 39374,4941 39093,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="39093,4893 39374,4893" stroke="#0000ff" fill="none"/>
 <polyline points="39093,4917 39374,4917" stroke="#0000ff" fill="none"/>
 <text x="39206" y="4883" fill="#000000" font-family="Arial" font-size="10">Converter</text>
 <text x="39231" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="39101" y="4931" fill="#000000" font-family="Arial" font-size="10">+ convert (_r: RLP const &amp; , _flags: int ) bigint</text>
 <polygon points="6547,5173 6547,4637 7764,4637 7764,5173 6547,5173" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="6547,4661 7764,4661" stroke="#0000ff" fill="none"/>
 <polyline points="6547,4813 7764,4813" stroke="#0000ff" fill="none"/>
 <text x="7111" y="4651" fill="#000000" font-family="Arial" font-size="10">ring::CoreLayer</text>
 <text x="6555" y="4675" fill="#000000" font-family="Arial" font-size="10">- captureBuff_: ::AudioBufferList *</text>
 <text x="6555" y="4691" fill="#000000" font-family="Arial" font-size="10">- captureIBuff_: std::vector</text>
 <text x="6555" y="4707" fill="#000000" font-family="Arial" font-size="10">- indexIn_: int</text>
 <text x="6555" y="4723" fill="#000000" font-family="Arial" font-size="10">- indexOut_: int</text>
 <text x="6555" y="4739" fill="#000000" font-family="Arial" font-size="10">- indexRing_: int</text>
 <text x="6555" y="4755" fill="#000000" font-family="Arial" font-size="10">- ioUnit_: AudioUnit</text>
 <text x="6555" y="4771" fill="#000000" font-family="Arial" font-size="10">- mainRingBuffer_: std::shared_ptr</text>
 <text x="6555" y="4787" fill="#000000" font-family="Arial" font-size="10">- playbackBuff_: AudioBuffer</text>
 <text x="6555" y="4803" fill="#000000" font-family="Arial" font-size="10">- playbackIBuff_: std::vector</text>
 <text x="6555" y="4827" fill="#000000" font-family="Arial" font-size="10">+ startStream () void Virtual</text>
 <text x="6555" y="4843" fill="#000000" font-family="Arial" font-size="10">+ stopStream () void Virtual</text>
 <text x="6555" y="4859" fill="#000000" font-family="Arial" font-size="10">+ ~CoreLayer () Virtual</text>
 <text x="6555" y="4875" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceIndex (name: const std::string &amp; , type: DeviceType ) int Virtual</text>
 <text x="6555" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceName (index: int , type: DeviceType ) std::string Virtual</text>
 <text x="6555" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getCaptureDeviceList () std::vector Virtual</text>
 <text x="6555" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getIndexCapture () int Virtual</text>
 <text x="6555" y="4939" fill="#000000" font-family="Arial" font-size="10">+ getIndexPlayback () int Virtual</text>
 <text x="6555" y="4955" fill="#000000" font-family="Arial" font-size="10">+ getIndexRingtone () int Virtual</text>
 <text x="6555" y="4971" fill="#000000" font-family="Arial" font-size="10">+ getPlaybackDeviceList () std::vector Virtual</text>
 <text x="6555" y="4987" fill="#000000" font-family="Arial" font-size="10">+ CoreLayer (pref: const AudioPreference &amp; ) </text>
 <text x="6555" y="5003" fill="#000000" font-family="Arial" font-size="10">+ CoreLayer () </text>
 <text x="6555" y="5019" fill="#000000" font-family="Arial" font-size="10">+ destroyAudioLayer () void</text>
 <text x="6555" y="5035" fill="#000000" font-family="Arial" font-size="10">+ initAudioLayerIO () void</text>
 <text x="6555" y="5051" fill="#000000" font-family="Arial" font-size="10">+ operator= () CoreLayer &amp;</text>
 <text x="6555" y="5067" fill="#000000" font-family="Arial" font-size="10">- updatePreference (preference: AudioPreference &amp; , index: int , type: DeviceType ) void Virtual</text>
 <text x="6555" y="5083" fill="#000000" font-family="Arial" font-size="10">- inputCallback (inRefCon: void *, ioActionFlags: AudioUnitRenderActionFlags *, inTimeStamp: const AudioTimeStamp *, inBusNumber: UInt32 , inNumberFrames: UInt32 , ioData: AudioBufferList *) OSStatus</text>
 <text x="6555" y="5099" fill="#000000" font-family="Arial" font-size="10">- outputCallback (inRefCon: void *, ioActionFlags: AudioUnitRenderActionFlags *, inTimeStamp: const AudioTimeStamp *, inBusNumber: UInt32 , inNumberFrames: UInt32 , ioData: AudioBufferList *) OSStatus</text>
 <text x="6555" y="5115" fill="#000000" font-family="Arial" font-size="10">- initAudioFormat () void</text>
 <text x="6555" y="5131" fill="#000000" font-family="Arial" font-size="10">- read (ioActionFlags: AudioUnitRenderActionFlags *, inTimeStamp: const AudioTimeStamp *, inBusNumber: UInt32 , inNumberFrames: UInt32 , ioData: AudioBufferList *) void</text>
 <text x="6555" y="5147" fill="#000000" font-family="Arial" font-size="10">- write (ioActionFlags: AudioUnitRenderActionFlags *, inTimeStamp: const AudioTimeStamp *, inBusNumber: UInt32 , inNumberFrames: UInt32 , ioData: AudioBufferList *) void</text>
 <text x="6555" y="5163" fill="#000000" font-family="Arial" font-size="10">- getDeviceList (getCapture: bool ) std::vector</text>
 <polyline points="7251,4637 7285,4548 7324,4450 7367,4345 7415,4234 7466,4120 7521,4003 7579,3886 7641,3771 7705,3657 7772,3548 7794,3514 7818,3480 7842,3446 7868,3412 7893,3378 7919,3345 7946,3313 7972,3281 7999,3249 8025,3219" stroke="#CC0044" fill="none"/>
 <polygon points="8023,3216 8032,3211 8028,3221 8023,3216" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="39392,4981 39392,4829 39892,4829 39892,4981 39392,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="39392,4853 39892,4853" stroke="#0000ff" fill="none"/>
 <polyline points="39392,4877 39892,4877" stroke="#0000ff" fill="none"/>
 <text x="39557" y="4843" fill="#000000" font-family="Arial" font-size="10">ring::SIPAccount::Credentials</text>
 <text x="39640" y="4867" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="39400" y="4891" fill="#000000" font-family="Arial" font-size="10">+ Credentials (r: const std::string &amp; , u: const std::string &amp; , p: const std::string &amp; ) </text>
 <text x="39400" y="4907" fill="#000000" font-family="Arial" font-size="10">+ computePasswordHash () void</text>
 <text x="39400" y="4923" fill="#000000" font-family="Arial" font-size="10">+ password () std::string</text>
 <text x="39400" y="4939" fill="#000000" font-family="Arial" font-size="10">+ password_h () std::string</text>
 <text x="39400" y="4955" fill="#000000" font-family="Arial" font-size="10">+ realm () std::string</text>
 <text x="39400" y="4971" fill="#000000" font-family="Arial" font-size="10">+ username () std::string</text>
 <polygon points="39911,5069 39911,4741 41314,4741 41314,5069 39911,5069" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="39911,4765 41314,4765" stroke="#0000ff" fill="none"/>
 <polyline points="39911,4885 41314,4885" stroke="#0000ff" fill="none"/>
 <text x="40569" y="4755" fill="#000000" font-family="Arial" font-size="10">CryptoAttribute</text>
 <text x="39919" y="4779" fill="#000000" font-family="Arial" font-size="10">- cryptoSuite_: std::string</text>
 <text x="39919" y="4795" fill="#000000" font-family="Arial" font-size="10">- lifetime_: std::string</text>
 <text x="39919" y="4811" fill="#000000" font-family="Arial" font-size="10">- mkiLength_: std::string</text>
 <text x="39919" y="4827" fill="#000000" font-family="Arial" font-size="10">- mkiValue_: std::string</text>
 <text x="39919" y="4843" fill="#000000" font-family="Arial" font-size="10">- srtpKeyInfo_: std::string</text>
 <text x="39919" y="4859" fill="#000000" font-family="Arial" font-size="10">- srtpKeyMethod_: std::string</text>
 <text x="39919" y="4875" fill="#000000" font-family="Arial" font-size="10">- tag_: std::string</text>
 <text x="39919" y="4899" fill="#000000" font-family="Arial" font-size="10">+ CryptoAttribute () </text>
 <text x="39919" y="4915" fill="#000000" font-family="Arial" font-size="10">+ CryptoAttribute (tag: const std::string &amp; , cryptoSuite: const std::string &amp; , srtpKeyMethod: const std::string &amp; , srtpKeyInfo: const std::string &amp; , lifetime: const std::string &amp; , mkiValue: const std::string &amp; , mkiLength: const std::string &amp; ) </text>
 <text x="39919" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getCryptoSuite () std::string</text>
 <text x="39919" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getLifetime () std::string</text>
 <text x="39919" y="4963" fill="#000000" font-family="Arial" font-size="10">+ getMkiLength () std::string</text>
 <text x="39919" y="4979" fill="#000000" font-family="Arial" font-size="10">+ getMkiValue () std::string</text>
 <text x="39919" y="4995" fill="#000000" font-family="Arial" font-size="10">+ getSrtpKeyInfo () std::string</text>
 <text x="39919" y="5011" fill="#000000" font-family="Arial" font-size="10">+ getSrtpKeyMethod () std::string</text>
 <text x="39919" y="5027" fill="#000000" font-family="Arial" font-size="10">+ getTag () std::string</text>
 <text x="39919" y="5043" fill="#000000" font-family="Arial" font-size="10">+ operator bool () </text>
 <text x="39919" y="5059" fill="#000000" font-family="Arial" font-size="10">+ to_string () std::string</text>
 <polygon points="24584,2959 24584,2887 24767,2887 24767,2959 24584,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="24584,2911 24767,2911" stroke="#0000ff" fill="none"/>
 <polyline points="24584,2935 24767,2935" stroke="#0000ff" fill="none"/>
 <text x="24592" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::crypto::CryptoException</text>
 <text x="24673" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="24592" y="2949" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="24676,2887 24677,2854 24680,2812 24684,2764 24689,2709 24697,2650 24707,2588 24719,2523 24735,2459 24753,2395 24775,2334 24824,2223 24881,2113 24943,2007 25009,1904 25076,1807 25142,1717 25205,1635 25263,1564 25313,1504 25354,1457" stroke="#CC0044" fill="none"/>
 <polygon points="25351,1454 25361,1449 25357,1459 25351,1454" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="41332,5029 41332,4781 41504,4781 41504,5029 41332,5029" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="41332,4805 41504,4805" stroke="#0000ff" fill="none"/>
 <polyline points="41332,5005 41504,5005" stroke="#0000ff" fill="none"/>
 <text x="41343" y="4795" fill="#000000" font-family="Arial" font-size="10">ring::CryptoSuiteDefinition</text>
 <text x="41340" y="4819" fill="#000000" font-family="Arial" font-size="10">+ cipher: CipherMode</text>
 <text x="41340" y="4835" fill="#000000" font-family="Arial" font-size="10">+ encryptionKeyLength: int</text>
 <text x="41340" y="4851" fill="#000000" font-family="Arial" font-size="10">+ mac: MACMode</text>
 <text x="41340" y="4867" fill="#000000" font-family="Arial" font-size="10">+ masterKeyLength: int</text>
 <text x="41340" y="4883" fill="#000000" font-family="Arial" font-size="10">+ masterSaltLength: int</text>
 <text x="41340" y="4899" fill="#000000" font-family="Arial" font-size="10">+ name: const char *</text>
 <text x="41340" y="4915" fill="#000000" font-family="Arial" font-size="10">+ srtcpAuthKeyLen: int</text>
 <text x="41340" y="4931" fill="#000000" font-family="Arial" font-size="10">+ srtcpAuthTagLength: int</text>
 <text x="41340" y="4947" fill="#000000" font-family="Arial" font-size="10">+ srtcpLifetime: int</text>
 <text x="41340" y="4963" fill="#000000" font-family="Arial" font-size="10">+ srtpAuthKeyLength: int</text>
 <text x="41340" y="4979" fill="#000000" font-family="Arial" font-size="10">+ srtpAuthTagLength: int</text>
 <text x="41340" y="4995" fill="#000000" font-family="Arial" font-size="10">+ srtpLifetime: int</text>
 <text x="41416" y="5019" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="41522,5421 41522,4389 42162,4389 42162,5421 41522,5421" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="41522,4413 42162,4413" stroke="#0000ff" fill="none"/>
 <polyline points="41522,4757 42162,4757" stroke="#0000ff" fill="none"/>
 <text x="41790" y="4403" fill="#000000" font-family="Arial" font-size="10">DBusCallManager</text>
 <text x="41530" y="4427" fill="#000000" font-family="Arial" font-size="10">+ SmartInfo</text>
 <text x="41530" y="4443" fill="#000000" font-family="Arial" font-size="10">+ audioMuted</text>
 <text x="41530" y="4459" fill="#000000" font-family="Arial" font-size="10">+ callStateChanged</text>
 <text x="41530" y="4475" fill="#000000" font-family="Arial" font-size="10">+ conferenceChanged</text>
 <text x="41530" y="4491" fill="#000000" font-family="Arial" font-size="10">+ conferenceCreated</text>
 <text x="41530" y="4507" fill="#000000" font-family="Arial" font-size="10">+ conferenceRemoved</text>
 <text x="41530" y="4523" fill="#000000" font-family="Arial" font-size="10">+ incomingCall</text>
 <text x="41530" y="4539" fill="#000000" font-family="Arial" font-size="10">+ incomingMessage</text>
 <text x="41530" y="4555" fill="#000000" font-family="Arial" font-size="10">+ newCallCreated</text>
 <text x="41530" y="4571" fill="#000000" font-family="Arial" font-size="10">+ onRtcpReportReceived</text>
 <text x="41530" y="4587" fill="#000000" font-family="Arial" font-size="10">+ peerHold</text>
 <text x="41530" y="4603" fill="#000000" font-family="Arial" font-size="10">+ recordPlaybackFilepath</text>
 <text x="41530" y="4619" fill="#000000" font-family="Arial" font-size="10">+ recordPlaybackStopped</text>
 <text x="41530" y="4635" fill="#000000" font-family="Arial" font-size="10">+ recordingStateChanged</text>
 <text x="41530" y="4651" fill="#000000" font-family="Arial" font-size="10">+ secureSdesOff</text>
 <text x="41530" y="4667" fill="#000000" font-family="Arial" font-size="10">+ secureSdesOn</text>
 <text x="41530" y="4683" fill="#000000" font-family="Arial" font-size="10">+ transferFailed</text>
 <text x="41530" y="4699" fill="#000000" font-family="Arial" font-size="10">+ transferSucceeded</text>
 <text x="41530" y="4715" fill="#000000" font-family="Arial" font-size="10">+ updatePlaybackScale</text>
 <text x="41530" y="4731" fill="#000000" font-family="Arial" font-size="10">+ videoMuted</text>
 <text x="41530" y="4747" fill="#000000" font-family="Arial" font-size="10">+ voiceMailNotify</text>
 <text x="41530" y="4771" fill="#000000" font-family="Arial" font-size="10">+ DBusCallManager (connection: DBus::Connection &amp; ) </text>
 <text x="41530" y="4787" fill="#000000" font-family="Arial" font-size="10">+ accept (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="4803" fill="#000000" font-family="Arial" font-size="10">+ addMainParticipant (confID: const std::string &amp; ) auto</text>
 <text x="41530" y="4819" fill="#000000" font-family="Arial" font-size="10">+ addParticipant (callID: const std::string &amp; , confID: const std::string &amp; ) auto</text>
 <text x="41530" y="4835" fill="#000000" font-family="Arial" font-size="10">+ attendedTransfer (transferID: const std::string &amp; , targetID: const std::string &amp; ) auto</text>
 <text x="41530" y="4851" fill="#000000" font-family="Arial" font-size="10">+ createConfFromParticipantList (participants: const std::vector &amp; ) void</text>
 <text x="41530" y="4867" fill="#000000" font-family="Arial" font-size="10">+ detachParticipant (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="4883" fill="#000000" font-family="Arial" font-size="10">+ getCallDetails (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="4899" fill="#000000" font-family="Arial" font-size="10">+ getCallList () auto</text>
 <text x="41530" y="4915" fill="#000000" font-family="Arial" font-size="10">+ getConferenceDetails (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getConferenceId (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getConferenceList () auto</text>
 <text x="41530" y="4963" fill="#000000" font-family="Arial" font-size="10">+ getCurrentAudioCodecName (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="4979" fill="#000000" font-family="Arial" font-size="10">+ getDisplayNames (confID: const std::string &amp; ) auto</text>
 <text x="41530" y="4995" fill="#000000" font-family="Arial" font-size="10">+ getIsRecording (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="5011" fill="#000000" font-family="Arial" font-size="10">+ getParticipantList (confID: const std::string &amp; ) auto</text>
 <text x="41530" y="5027" fill="#000000" font-family="Arial" font-size="10">+ hangUp (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="5043" fill="#000000" font-family="Arial" font-size="10">+ hangUpConference (confID: const std::string &amp; ) auto</text>
 <text x="41530" y="5059" fill="#000000" font-family="Arial" font-size="10">+ hold (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="5075" fill="#000000" font-family="Arial" font-size="10">+ holdConference (confID: const std::string &amp; ) auto</text>
 <text x="41530" y="5091" fill="#000000" font-family="Arial" font-size="10">+ isConferenceParticipant (call_id: const std::string &amp; ) auto</text>
 <text x="41530" y="5107" fill="#000000" font-family="Arial" font-size="10">+ joinConference (sel_confID: const std::string &amp; , drag_confID: const std::string &amp; ) auto</text>
 <text x="41530" y="5123" fill="#000000" font-family="Arial" font-size="10">+ joinParticipant (sel_callID: const std::string &amp; , drag_callID: const std::string &amp; ) auto</text>
 <text x="41530" y="5139" fill="#000000" font-family="Arial" font-size="10">+ muteLocalMedia (callid: const std::string &amp; , mediaType: const std::string &amp; , mute: const bool &amp; ) auto</text>
 <text x="41530" y="5155" fill="#000000" font-family="Arial" font-size="10">+ placeCall (accountID: const std::string &amp; , to: const std::string &amp; ) auto</text>
 <text x="41530" y="5171" fill="#000000" font-family="Arial" font-size="10">+ playDTMF (key: const std::string &amp; ) void</text>
 <text x="41530" y="5187" fill="#000000" font-family="Arial" font-size="10">+ recordPlaybackSeek (value: const double &amp; ) void</text>
 <text x="41530" y="5203" fill="#000000" font-family="Arial" font-size="10">+ refuse (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="5219" fill="#000000" font-family="Arial" font-size="10">+ removeConference (conference_id: const std::string &amp; ) void</text>
 <text x="41530" y="5235" fill="#000000" font-family="Arial" font-size="10">+ sendTextMessage (callID: const std::string &amp; , messages: const std::map &amp; , isMixed: const bool &amp; ) void</text>
 <text x="41530" y="5251" fill="#000000" font-family="Arial" font-size="10">+ setRecording (callID: const std::string &amp; ) void</text>
 <text x="41530" y="5267" fill="#000000" font-family="Arial" font-size="10">+ startRecordedFilePlayback (filepath: const std::string &amp; ) auto</text>
 <text x="41530" y="5283" fill="#000000" font-family="Arial" font-size="10">+ startSmartInfo (refreshTimeMs: const uint32_t &amp; ) void</text>
 <text x="41530" y="5299" fill="#000000" font-family="Arial" font-size="10">+ startTone (start: const int32_t &amp; , type: const int32_t &amp; ) void</text>
 <text x="41530" y="5315" fill="#000000" font-family="Arial" font-size="10">+ stopRecordedFilePlayback (filepath: const std::string &amp; ) void</text>
 <text x="41530" y="5331" fill="#000000" font-family="Arial" font-size="10">+ stopSmartInfo () void</text>
 <text x="41530" y="5347" fill="#000000" font-family="Arial" font-size="10">+ switchInput (callID: const std::string &amp; , input: const std::string &amp; ) void</text>
 <text x="41530" y="5363" fill="#000000" font-family="Arial" font-size="10">+ toggleRecording (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="5379" fill="#000000" font-family="Arial" font-size="10">+ transfer (callID: const std::string &amp; , to: const std::string &amp; ) auto</text>
 <text x="41530" y="5395" fill="#000000" font-family="Arial" font-size="10">+ unhold (callID: const std::string &amp; ) auto</text>
 <text x="41530" y="5411" fill="#000000" font-family="Arial" font-size="10">+ unholdConference (confID: const std::string &amp; ) auto</text>
 <polygon points="41773,2959 41773,2887 41911,2887 41911,2959 41773,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="41773,2911 41911,2911" stroke="#0000ff" fill="none"/>
 <polyline points="41773,2935 41911,2935" stroke="#0000ff" fill="none"/>
 <text x="41781" y="2901" fill="#000000" font-family="Arial" font-size="10">CallManager_adaptor</text>
 <text x="41840" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="41840" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="41842,4389 41842,4231 41842,4064 41842,3894 41842,3724 41842,3559 41842,3403 41842,3262 41842,3140 41842,3040 41842,2969" stroke="#CC0044" fill="none"/>
 <polygon points="41839,2969 41842,2959 41846,2969 41839,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="43478,2959 43478,2887 43620,2887 43620,2959 43478,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="43478,2911 43620,2911" stroke="#0000ff" fill="none"/>
 <polyline points="43478,2935 43620,2935" stroke="#0000ff" fill="none"/>
 <text x="43486" y="2901" fill="#000000" font-family="Arial" font-size="10">IntrospectableAdaptor</text>
 <text x="43547" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="43547" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="41826,4389 41834,4300 41847,4208 41864,4116 41887,4024 41915,3934 41951,3846 41993,3763 42044,3685 42103,3612 42171,3548 42203,3536 42260,3528 42335,3524 42423,3522 42517,3522 42611,3523 42699,3523 42776,3522 42836,3519 42871,3512 42959,3471 43044,3420 43126,3363 43202,3301 43273,3238 43337,3174 43395,3113 43444,3056 43485,3007 43517,2967" stroke="#CC0044" fill="none"/>
 <polygon points="43514,2965 43523,2959 43520,2969 43514,2965" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="43639,2959 43639,2887 43738,2887 43738,2959 43639,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="43639,2911 43738,2911" stroke="#0000ff" fill="none"/>
 <polyline points="43639,2935 43738,2935" stroke="#0000ff" fill="none"/>
 <text x="43647" y="2901" fill="#000000" font-family="Arial" font-size="10">ObjectAdaptor</text>
 <text x="43686" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="43686" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="41824,4389 41832,4299 41844,4208 41861,4115 41884,4023 41913,3933 41948,3845 41991,3761 42042,3683 42102,3612 42171,3548 42226,3536 42341,3530 42503,3528 42694,3529 42902,3532 43108,3534 43300,3534 43461,3532 43576,3525 43629,3512 43669,3465 43698,3412 43718,3353 43729,3291 43733,3229 43732,3167 43727,3108 43719,3054 43710,3007 43701,2969" stroke="#CC0044" fill="none"/>
 <polygon points="43697,2970 43698,2959 43704,2968 43697,2970" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="45111,5021 45111,4789 45374,4789 45374,5021 45111,5021" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="45111,4813 45374,4813" stroke="#0000ff" fill="none"/>
 <polyline points="45111,4917 45374,4917" stroke="#0000ff" fill="none"/>
 <text x="45210" y="4803" fill="#000000" font-family="Arial" font-size="10">DBusClient</text>
 <text x="45119" y="4827" fill="#000000" font-family="Arial" font-size="10">- callManager_: std::unique_ptr</text>
 <text x="45119" y="4843" fill="#000000" font-family="Arial" font-size="10">- configurationManager_: std::unique_ptr</text>
 <text x="45119" y="4859" fill="#000000" font-family="Arial" font-size="10">- dispatcher_: std::unique_ptr</text>
 <text x="45119" y="4875" fill="#000000" font-family="Arial" font-size="10">- instanceManager_: std::unique_ptr</text>
 <text x="45119" y="4891" fill="#000000" font-family="Arial" font-size="10">- presenceManager_: std::unique_ptr</text>
 <text x="45119" y="4907" fill="#000000" font-family="Arial" font-size="10">- timeout_: std::unique_ptr</text>
 <text x="45119" y="4931" fill="#000000" font-family="Arial" font-size="10">+ DBusClient (flags: int , persistent: bool ) </text>
 <text x="45119" y="4947" fill="#000000" font-family="Arial" font-size="10">+ event_loop () int</text>
 <text x="45119" y="4963" fill="#000000" font-family="Arial" font-size="10">+ exit () int</text>
 <text x="45119" y="4979" fill="#000000" font-family="Arial" font-size="10">+ ~DBusClient () </text>
 <text x="45119" y="4995" fill="#000000" font-family="Arial" font-size="10">- finiLibrary () void</text>
 <text x="45119" y="5011" fill="#000000" font-family="Arial" font-size="10">- initLibrary (flags: int ) int</text>
 <polygon points="42180,5845 42180,3965 43354,3965 43354,5845 42180,5845" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="42180,3989 43354,3989" stroke="#0000ff" fill="none"/>
 <polyline points="42180,4333 43354,4333" stroke="#0000ff" fill="none"/>
 <text x="42689" y="3979" fill="#000000" font-family="Arial" font-size="10">DBusConfigurationManager</text>
 <text x="42188" y="4003" fill="#000000" font-family="Arial" font-size="10">+ accountMessageStatusChanged</text>
 <text x="42188" y="4019" fill="#000000" font-family="Arial" font-size="10">+ accountsChanged</text>
 <text x="42188" y="4035" fill="#000000" font-family="Arial" font-size="10">+ audioDeviceEvent</text>
 <text x="42188" y="4051" fill="#000000" font-family="Arial" font-size="10">+ certificateExpired</text>
 <text x="42188" y="4067" fill="#000000" font-family="Arial" font-size="10">+ certificatePathPinned</text>
 <text x="42188" y="4083" fill="#000000" font-family="Arial" font-size="10">+ certificatePinned</text>
 <text x="42188" y="4099" fill="#000000" font-family="Arial" font-size="10">+ certificateStateChanged</text>
 <text x="42188" y="4115" fill="#000000" font-family="Arial" font-size="10">+ contactAdded</text>
 <text x="42188" y="4131" fill="#000000" font-family="Arial" font-size="10">+ contactRemoved</text>
 <text x="42188" y="4147" fill="#000000" font-family="Arial" font-size="10">+ errorAlert</text>
 <text x="42188" y="4163" fill="#000000" font-family="Arial" font-size="10">+ exportOnRingEnded</text>
 <text x="42188" y="4179" fill="#000000" font-family="Arial" font-size="10">+ incomingAccountMessage</text>
 <text x="42188" y="4195" fill="#000000" font-family="Arial" font-size="10">+ incomingTrustRequest</text>
 <text x="42188" y="4211" fill="#000000" font-family="Arial" font-size="10">+ knownDevicesChanged</text>
 <text x="42188" y="4227" fill="#000000" font-family="Arial" font-size="10">+ mediaParametersChanged</text>
 <text x="42188" y="4243" fill="#000000" font-family="Arial" font-size="10">+ nameRegistrationEnded</text>
 <text x="42188" y="4259" fill="#000000" font-family="Arial" font-size="10">+ registeredNameFound</text>
 <text x="42188" y="4275" fill="#000000" font-family="Arial" font-size="10">+ registrationStateChanged</text>
 <text x="42188" y="4291" fill="#000000" font-family="Arial" font-size="10">+ stunStatusFailure</text>
 <text x="42188" y="4307" fill="#000000" font-family="Arial" font-size="10">+ volatileAccountDetailsChanged</text>
 <text x="42188" y="4323" fill="#000000" font-family="Arial" font-size="10">+ volumeChanged</text>
 <text x="42188" y="4347" fill="#000000" font-family="Arial" font-size="10">+ DBusConfigurationManager (connection: DBus::Connection &amp; ) </text>
 <text x="42188" y="4363" fill="#000000" font-family="Arial" font-size="10">+ acceptTrustRequest (accountId: const std::string &amp; , from: const std::string &amp; ) bool</text>
 <text x="42188" y="4379" fill="#000000" font-family="Arial" font-size="10">+ addAccount (details: const std::map &amp; ) std::string</text>
 <text x="42188" y="4395" fill="#000000" font-family="Arial" font-size="10">+ addContact (accountId: const std::string &amp; , uri: const std::string &amp; ) void</text>
 <text x="42188" y="4411" fill="#000000" font-family="Arial" font-size="10">+ connectivityChanged () void</text>
 <text x="42188" y="4427" fill="#000000" font-family="Arial" font-size="10">+ discardTrustRequest (accountId: const std::string &amp; , from: const std::string &amp; ) bool</text>
 <text x="42188" y="4443" fill="#000000" font-family="Arial" font-size="10">+ exportAccounts (accountIDs: const std::vector &amp; , filepath: const std::string &amp; , password: const std::string &amp; ) int</text>
 <text x="42188" y="4459" fill="#000000" font-family="Arial" font-size="10">+ exportOnRing (accountID: const std::string &amp; , password: const std::string &amp; ) bool</text>
 <text x="42188" y="4475" fill="#000000" font-family="Arial" font-size="10">+ getAccountDetails (accountID: const std::string &amp; ) std::map</text>
 <text x="42188" y="4491" fill="#000000" font-family="Arial" font-size="10">+ getAccountList () std::vector</text>
 <text x="42188" y="4507" fill="#000000" font-family="Arial" font-size="10">+ getAccountTemplate (accountType: const std::string &amp; ) std::map</text>
 <text x="42188" y="4523" fill="#000000" font-family="Arial" font-size="10">+ getActiveCodecList (accountID: const std::string &amp; ) std::vector</text>
 <text x="42188" y="4539" fill="#000000" font-family="Arial" font-size="10">+ getAddrFromInterfaceName (interface: const std::string &amp; ) std::string</text>
 <text x="42188" y="4555" fill="#000000" font-family="Arial" font-size="10">+ getAllIpInterface () std::vector</text>
 <text x="42188" y="4571" fill="#000000" font-family="Arial" font-size="10">+ getAllIpInterfaceByName () std::vector</text>
 <text x="42188" y="4587" fill="#000000" font-family="Arial" font-size="10">+ getAudioInputDeviceIndex (name: const std::string &amp; ) int32_t</text>
 <text x="42188" y="4603" fill="#000000" font-family="Arial" font-size="10">+ getAudioInputDeviceList () std::vector</text>
 <text x="42188" y="4619" fill="#000000" font-family="Arial" font-size="10">+ getAudioManager () std::string</text>
 <text x="42188" y="4635" fill="#000000" font-family="Arial" font-size="10">+ getAudioOutputDeviceIndex (name: const std::string &amp; ) int32_t</text>
 <text x="42188" y="4651" fill="#000000" font-family="Arial" font-size="10">+ getAudioOutputDeviceList () std::vector</text>
 <text x="42188" y="4667" fill="#000000" font-family="Arial" font-size="10">+ getAudioPluginList () std::vector</text>
 <text x="42188" y="4683" fill="#000000" font-family="Arial" font-size="10">+ getCertificateDetails (certificate: const std::string &amp; ) std::map</text>
 <text x="42188" y="4699" fill="#000000" font-family="Arial" font-size="10">+ getCertificateDetailsPath (certificatePath: const std::string &amp; , privateKey: const std::string &amp; , privateKeyPass: const std::string &amp; ) std::map</text>
 <text x="42188" y="4715" fill="#000000" font-family="Arial" font-size="10">+ getCertificatesByStatus (account: const std::string &amp; , status: const std::string &amp; ) std::vector</text>
 <text x="42188" y="4731" fill="#000000" font-family="Arial" font-size="10">+ getCodecDetails (accountID: const std::string &amp; , codecId: const unsigned &amp; ) std::map</text>
 <text x="42188" y="4747" fill="#000000" font-family="Arial" font-size="10">+ getCodecList () std::vector</text>
 <text x="42188" y="4763" fill="#000000" font-family="Arial" font-size="10">+ getContacts (accountId: const std::string &amp; ) auto</text>
 <text x="42188" y="4779" fill="#000000" font-family="Arial" font-size="10">+ getCredentials (accountID: const std::string &amp; ) auto</text>
 <text x="42188" y="4795" fill="#000000" font-family="Arial" font-size="10">+ getCurrentAudioDevicesIndex () std::vector</text>
 <text x="42188" y="4811" fill="#000000" font-family="Arial" font-size="10">+ getCurrentAudioOutputPlugin () std::string</text>
 <text x="42188" y="4827" fill="#000000" font-family="Arial" font-size="10">+ getHistoryLimit () int32_t</text>
 <text x="42188" y="4843" fill="#000000" font-family="Arial" font-size="10">+ getHookSettings () std::map</text>
 <text x="42188" y="4859" fill="#000000" font-family="Arial" font-size="10">+ getIsAlwaysRecording () bool</text>
 <text x="42188" y="4875" fill="#000000" font-family="Arial" font-size="10">+ getKnownRingDevices (accountID: const std::string &amp; ) std::map</text>
 <text x="42188" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getMessageStatus (id: const uint64_t &amp; ) int</text>
 <text x="42188" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getNoiseSuppressState () bool</text>
 <text x="42188" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getPinnedCertificates () std::vector</text>
 <text x="42188" y="4939" fill="#000000" font-family="Arial" font-size="10">+ getRecordPath () std::string</text>
 <text x="42188" y="4955" fill="#000000" font-family="Arial" font-size="10">+ getShortcuts () std::map</text>
 <text x="42188" y="4971" fill="#000000" font-family="Arial" font-size="10">+ getSupportedAudioManagers () std::vector</text>
 <text x="42188" y="4987" fill="#000000" font-family="Arial" font-size="10">+ getSupportedCiphers (accountID: const std::string &amp; ) std::vector</text>
 <text x="42188" y="5003" fill="#000000" font-family="Arial" font-size="10">+ getSupportedTlsMethod () std::vector</text>
 <text x="42188" y="5019" fill="#000000" font-family="Arial" font-size="10">+ getTlsDefaultSettings () std::map</text>
 <text x="42188" y="5035" fill="#000000" font-family="Arial" font-size="10">+ getTrustRequests (accountId: const std::string &amp; ) std::map</text>
 <text x="42188" y="5051" fill="#000000" font-family="Arial" font-size="10">+ getVolatileAccountDetails (accountID: const std::string &amp; ) std::map</text>
 <text x="42188" y="5067" fill="#000000" font-family="Arial" font-size="10">+ getVolume (device: const std::string &amp; ) double</text>
 <text x="42188" y="5083" fill="#000000" font-family="Arial" font-size="10">+ importAccounts (archivePath: const std::string &amp; , password: const std::string &amp; ) int</text>
 <text x="42188" y="5099" fill="#000000" font-family="Arial" font-size="10">+ isAgcEnabled () bool</text>
 <text x="42188" y="5115" fill="#000000" font-family="Arial" font-size="10">+ isCaptureMuted () bool</text>
 <text x="42188" y="5131" fill="#000000" font-family="Arial" font-size="10">+ isDtmfMuted () bool</text>
 <text x="42188" y="5147" fill="#000000" font-family="Arial" font-size="10">+ isPlaybackMuted () bool</text>
 <text x="42188" y="5163" fill="#000000" font-family="Arial" font-size="10">+ isRingtoneMuted () bool</text>
 <text x="42188" y="5179" fill="#000000" font-family="Arial" font-size="10">+ lookupAddress (account: const std::string &amp; , nameserver: const std::string &amp; , address: const std::string &amp; ) bool</text>
 <text x="42188" y="5195" fill="#000000" font-family="Arial" font-size="10">+ lookupName (account: const std::string &amp; , nameserver: const std::string &amp; , name: const std::string &amp; ) bool</text>
 <text x="42188" y="5211" fill="#000000" font-family="Arial" font-size="10">+ muteCapture (mute: const bool &amp; ) void</text>
 <text x="42188" y="5227" fill="#000000" font-family="Arial" font-size="10">+ muteDtmf (mute: const bool &amp; ) void</text>
 <text x="42188" y="5243" fill="#000000" font-family="Arial" font-size="10">+ mutePlayback (mute: const bool &amp; ) void</text>
 <text x="42188" y="5259" fill="#000000" font-family="Arial" font-size="10">+ muteRingtone (mute: const bool &amp; ) void</text>
 <text x="42188" y="5275" fill="#000000" font-family="Arial" font-size="10">+ pinCertificate (certificate: const std::vector &amp; , local: const bool &amp; ) std::vector</text>
 <text x="42188" y="5291" fill="#000000" font-family="Arial" font-size="10">+ pinCertificatePath (certPath: const std::string &amp; ) void</text>
 <text x="42188" y="5307" fill="#000000" font-family="Arial" font-size="10">+ pinRemoteCertificate (accountId: const std::string &amp; , certId: const std::string &amp; ) bool</text>
 <text x="42188" y="5323" fill="#000000" font-family="Arial" font-size="10">+ registerAllAccounts () void</text>
 <text x="42188" y="5339" fill="#000000" font-family="Arial" font-size="10">+ registerName (account: const std::string &amp; , password: const std::string &amp; , name: const std::string &amp; ) bool</text>
 <text x="42188" y="5355" fill="#000000" font-family="Arial" font-size="10">+ removeAccount (accountID: const std::string &amp; ) void</text>
 <text x="42188" y="5371" fill="#000000" font-family="Arial" font-size="10">+ removeContact (accountId: const std::string &amp; , uri: const std::string &amp; ) void</text>
 <text x="42188" y="5387" fill="#000000" font-family="Arial" font-size="10">+ revokeDevice (accountID: const std::string &amp; , password: const std::string &amp; , device: const std::string &amp; ) bool</text>
 <text x="42188" y="5403" fill="#000000" font-family="Arial" font-size="10">+ sendRegister (accountID: const std::string &amp; , enable: const bool &amp; ) void</text>
 <text x="42188" y="5419" fill="#000000" font-family="Arial" font-size="10">+ sendTextMessage (accoundID: const std::string &amp; , to: const std::string &amp; , payloads: const std::map &amp; ) uint64_t</text>
 <text x="42188" y="5435" fill="#000000" font-family="Arial" font-size="10">+ sendTrustRequest (accountId: const std::string &amp; , to: const std::string &amp; , payload: const std::vector &amp; ) void</text>
 <text x="42188" y="5451" fill="#000000" font-family="Arial" font-size="10">+ setAccountActive (accountID: const std::string &amp; , active: const bool &amp; ) void</text>
 <text x="42188" y="5467" fill="#000000" font-family="Arial" font-size="10">+ setAccountDetails (accountID: const std::string &amp; , details: const std::map &amp; ) void</text>
 <text x="42188" y="5483" fill="#000000" font-family="Arial" font-size="10">+ setAccountsOrder (order: const std::string &amp; ) void</text>
 <text x="42188" y="5499" fill="#000000" font-family="Arial" font-size="10">+ setActiveCodecList (accountID: const std::string &amp; , list: const std::vector &amp; ) void</text>
 <text x="42188" y="5515" fill="#000000" font-family="Arial" font-size="10">+ setAgcState (enabled: const bool &amp; ) void</text>
 <text x="42188" y="5531" fill="#000000" font-family="Arial" font-size="10">+ setAudioInputDevice (index: const int32_t &amp; ) void</text>
 <text x="42188" y="5547" fill="#000000" font-family="Arial" font-size="10">+ setAudioManager (api: const std::string &amp; ) bool</text>
 <text x="42188" y="5563" fill="#000000" font-family="Arial" font-size="10">+ setAudioOutputDevice (index: const int32_t &amp; ) void</text>
 <text x="42188" y="5579" fill="#000000" font-family="Arial" font-size="10">+ setAudioPlugin (audioPlugin: const std::string &amp; ) void</text>
 <text x="42188" y="5595" fill="#000000" font-family="Arial" font-size="10">+ setAudioRingtoneDevice (index: const int32_t &amp; ) void</text>
 <text x="42188" y="5611" fill="#000000" font-family="Arial" font-size="10">+ setCertificateStatus (account: const std::string &amp; , certId: const std::string &amp; , status: const std::string &amp; ) bool</text>
 <text x="42188" y="5627" fill="#000000" font-family="Arial" font-size="10">+ setCodecDetails (accountID: const std::string &amp; , codecId: const unsigned &amp; , details: const std::map &amp; ) bool</text>
 <text x="42188" y="5643" fill="#000000" font-family="Arial" font-size="10">+ setCredentials (accountID: const std::string &amp; , std: const , std::string) void</text>
 <text x="42188" y="5659" fill="#000000" font-family="Arial" font-size="10">+ setHistoryLimit (days: const int32_t &amp; ) void</text>
 <text x="42188" y="5675" fill="#000000" font-family="Arial" font-size="10">+ setHookSettings (settings: const std::map &amp; ) void</text>
 <text x="42188" y="5691" fill="#000000" font-family="Arial" font-size="10">+ setIsAlwaysRecording (rec: const bool &amp; ) void</text>
 <text x="42188" y="5707" fill="#000000" font-family="Arial" font-size="10">+ setNoiseSuppressState (state: const bool &amp; ) void</text>
 <text x="42188" y="5723" fill="#000000" font-family="Arial" font-size="10">+ setRecordPath (recPath: const std::string &amp; ) void</text>
 <text x="42188" y="5739" fill="#000000" font-family="Arial" font-size="10">+ setShortcuts (shortcutsMap: const std::map &amp; ) void</text>
 <text x="42188" y="5755" fill="#000000" font-family="Arial" font-size="10">+ setVolume (device: const std::string &amp; , value: const double &amp; ) void</text>
 <text x="42188" y="5771" fill="#000000" font-family="Arial" font-size="10">+ testAccountICEInitialization (accountID: const std::string &amp; ) std::map</text>
 <text x="42188" y="5787" fill="#000000" font-family="Arial" font-size="10">+ unpinCertificate (certId: const std::string &amp; ) bool</text>
 <text x="42188" y="5803" fill="#000000" font-family="Arial" font-size="10">+ unpinCertificatePath (path: const std::string &amp; ) unsigned</text>
 <text x="42188" y="5819" fill="#000000" font-family="Arial" font-size="10">+ validateCertificate (accountId: const std::string &amp; , certificate: const std::string &amp; ) std::map</text>
 <text x="42188" y="5835" fill="#000000" font-family="Arial" font-size="10">+ validateCertificatePath (accountId: const std::string &amp; , certificatePath: const std::string &amp; , privateKey: const std::string &amp; , privateKeyPass: const std::string &amp; , caList: const std::string &amp; ) std::map</text>
 <polygon points="42672,2959 42672,2887 42863,2887 42863,2959 42672,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="42672,2911 42863,2911" stroke="#0000ff" fill="none"/>
 <polyline points="42672,2935 42863,2935" stroke="#0000ff" fill="none"/>
 <text x="42680" y="2901" fill="#000000" font-family="Arial" font-size="10">ConfigurationManager_adaptor</text>
 <text x="42765" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="42765" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="42767,3965 42767,3838 42767,3713 42767,3590 42767,3472 42767,3361 42767,3259 42767,3166 42767,3086 42767,3020 42767,2970" stroke="#CC0044" fill="none"/>
 <polygon points="42764,2969 42767,2959 42771,2969 42764,2969" stroke="#CC0044" fill="#CC0044"/>
 <polyline points="43138,3965 43188,3838 43238,3712 43286,3589 43333,3471 43377,3360 43417,3257 43454,3165 43485,3085 43511,3019 43531,2969" stroke="#CC0044" fill="none"/>
 <polygon points="43528,2967 43535,2959 43535,2970 43528,2967" stroke="#CC0044" fill="#CC0044"/>
 <polyline points="43028,3965 43054,3917 43081,3871 43110,3825 43141,3780 43173,3737 43207,3695 43243,3655 43281,3617 43321,3582 43363,3548 43391,3532 43419,3525 43447,3525 43474,3529 43501,3535 43527,3541 43553,3544 43579,3542 43604,3532 43629,3512 43667,3463 43695,3408 43713,3349 43724,3287 43729,3225 43728,3164 43724,3106 43717,3053 43708,3007 43700,2969" stroke="#CC0044" fill="none"/>
 <polygon points="43696,2970 43697,2959 43703,2968 43696,2970" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="43372,4965 43372,4845 44004,4845 44004,4965 43372,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="43372,4869 44004,4869" stroke="#0000ff" fill="none"/>
 <polyline points="43372,4909 44004,4909" stroke="#0000ff" fill="none"/>
 <text x="43648" y="4859" fill="#000000" font-family="Arial" font-size="10">DBusInstance</text>
 <text x="43380" y="4883" fill="#000000" font-family="Arial" font-size="10">- count_: int</text>
 <text x="43380" y="4899" fill="#000000" font-family="Arial" font-size="10">- onNoMoreClientFunc_: OnNoMoreClientFunc</text>
 <text x="43380" y="4923" fill="#000000" font-family="Arial" font-size="10">+ DBusInstance (connection: DBus::Connection &amp; , onNoMoreClientFunc: const OnNoMoreClientFunc &amp; ) </text>
 <text x="43380" y="4939" fill="#000000" font-family="Arial" font-size="10">+ Register (pid: const int32_t &amp; , name: const std::string &amp; ) void</text>
 <text x="43380" y="4955" fill="#000000" font-family="Arial" font-size="10">+ Unregister (pid: const int32_t &amp; ) void</text>
 <polygon points="43756,2959 43756,2887 43871,2887 43871,2959 43756,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="43756,2911 43871,2911" stroke="#0000ff" fill="none"/>
 <polyline points="43756,2935 43871,2935" stroke="#0000ff" fill="none"/>
 <text x="43764" y="2901" fill="#000000" font-family="Arial" font-size="10">Instance_adaptor</text>
 <text x="43811" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="43811" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="43692,4845 43699,4728 43710,4561 43722,4359 43737,4133 43752,3895 43767,3658 43781,3435 43793,3237 43803,3078 43810,2970" stroke="#CC0044" fill="none"/>
 <polygon points="43807,2969 43811,2959 43814,2970 43807,2969" stroke="#CC0044" fill="#CC0044"/>
 <polyline points="43684,4845 43676,4728 43664,4561 43650,4359 43634,4133 43617,3895 43601,3658 43585,3435 43571,3237 43560,3078 43552,2970" stroke="#CC0044" fill="none"/>
 <polygon points="43549,2970 43551,2959 43556,2969 43549,2970" stroke="#CC0044" fill="#CC0044"/>
 <polyline points="43688,4845 43688,4728 43688,4561 43688,4359 43688,4133 43688,3895 43688,3658 43688,3435 43688,3237 43688,3078 43688,2970" stroke="#CC0044" fill="none"/>
 <polygon points="43685,2969 43688,2959 43692,2969 43685,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="44022,5005 44022,4805 44612,4805 44612,5005 44022,5005" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="44022,4829 44612,4829" stroke="#0000ff" fill="none"/>
 <polyline points="44022,4901 44612,4901" stroke="#0000ff" fill="none"/>
 <text x="44249" y="4819" fill="#000000" font-family="Arial" font-size="10">DBusPresenceManager</text>
 <text x="44030" y="4843" fill="#000000" font-family="Arial" font-size="10">+ newBuddyNotification</text>
 <text x="44030" y="4859" fill="#000000" font-family="Arial" font-size="10">+ newServerSubscriptionRequest</text>
 <text x="44030" y="4875" fill="#000000" font-family="Arial" font-size="10">+ serverError</text>
 <text x="44030" y="4891" fill="#000000" font-family="Arial" font-size="10">+ subscriptionStateChanged</text>
 <text x="44030" y="4915" fill="#000000" font-family="Arial" font-size="10">+ DBusPresenceManager (connection: DBus::Connection &amp; ) </text>
 <text x="44030" y="4931" fill="#000000" font-family="Arial" font-size="10">+ answerServerRequest (uri: const std::string &amp; , flag: const bool &amp; ) void</text>
 <text x="44030" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getSubscriptions (accountID: const std::string &amp; ) auto</text>
 <text x="44030" y="4963" fill="#000000" font-family="Arial" font-size="10">+ publish (accountID: const std::string &amp; , status: const bool &amp; , note: const std::string &amp; ) void</text>
 <text x="44030" y="4979" fill="#000000" font-family="Arial" font-size="10">+ setSubscriptions (accountID: const std::string &amp; , uris: const std::vector &amp; ) void</text>
 <text x="44030" y="4995" fill="#000000" font-family="Arial" font-size="10">+ subscribeBuddy (accountID: const std::string &amp; , uri: const std::string &amp; , flag: const bool &amp; ) void</text>
 <polyline points="44330,4805 44337,4717 44343,4608 44343,4483 44337,4347 44321,4204 44293,4059 44250,3916 44191,3780 44113,3656 44013,3548 43988,3535 43954,3528 43914,3526 43868,3528 43820,3531 43773,3534 43727,3535 43687,3533 43653,3526 43629,3512 43589,3465 43559,3411 43538,3352 43525,3290 43519,3228 43517,3166 43520,3108 43525,3054 43532,3007 43539,2969" stroke="#CC0044" fill="none"/>
 <polygon points="43535,2968 43541,2959 43542,2970 43535,2968" stroke="#CC0044" fill="#CC0044"/>
 <polyline points="44329,4805 44336,4717 44340,4609 44340,4485 44333,4350 44317,4207 44289,4062 44247,3919 44188,3783 44111,3658 44013,3548 43986,3530 43959,3521 43932,3521 43905,3525 43878,3532 43850,3538 43824,3542 43797,3541 43771,3532 43746,3512 43708,3463 43681,3408 43662,3349 43651,3287 43647,3225 43648,3164 43652,3106 43659,3053 43668,3007 43676,2969" stroke="#CC0044" fill="none"/>
 <polygon points="43673,2968 43678,2959 43679,2970 43673,2968" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="44232,2959 44232,2887 44403,2887 44403,2959 44232,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="44232,2911 44403,2911" stroke="#0000ff" fill="none"/>
 <polyline points="44232,2935 44403,2935" stroke="#0000ff" fill="none"/>
 <text x="44240" y="2901" fill="#000000" font-family="Arial" font-size="10">PresenceManager_adaptor</text>
 <text x="44315" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="44315" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="44317,4805 44317,4673 44317,4500 44317,4298 44317,4076 44317,3847 44317,3621 44317,3409 44317,3222 44317,3072 44317,2969" stroke="#CC0044" fill="none"/>
 <polygon points="44314,2969 44317,2959 44321,2969 44314,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="44630,5021 44630,4789 45092,4789 45092,5021 44630,5021" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="44630,4813 45092,4813" stroke="#0000ff" fill="none"/>
 <polyline points="44630,4837 45092,4837" stroke="#0000ff" fill="none"/>
 <text x="44804" y="4803" fill="#000000" font-family="Arial" font-size="10">DBusVideoManager</text>
 <text x="44859" y="4827" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="44638" y="4851" fill="#000000" font-family="Arial" font-size="10">+ DBusVideoManager (connection: DBus::Connection &amp; ) </text>
 <text x="44638" y="4867" fill="#000000" font-family="Arial" font-size="10">+ applySettings (name: const std::string &amp; , settings: const std::map &amp; ) void</text>
 <text x="44638" y="4883" fill="#000000" font-family="Arial" font-size="10">+ getCapabilities (name: const std::string &amp; ) auto</text>
 <text x="44638" y="4899" fill="#000000" font-family="Arial" font-size="10">+ getDefaultDevice () std::string</text>
 <text x="44638" y="4915" fill="#000000" font-family="Arial" font-size="10">+ getDeviceList () std::vector</text>
 <text x="44638" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getSettings (name: const std::string &amp; ) std::map</text>
 <text x="44638" y="4947" fill="#000000" font-family="Arial" font-size="10">+ hasCameraStarted () bool</text>
 <text x="44638" y="4963" fill="#000000" font-family="Arial" font-size="10">+ setDefaultDevice (dev: const std::string &amp; ) void</text>
 <text x="44638" y="4979" fill="#000000" font-family="Arial" font-size="10">+ startCamera () void</text>
 <text x="44638" y="4995" fill="#000000" font-family="Arial" font-size="10">+ stopCamera () void</text>
 <text x="44638" y="5011" fill="#000000" font-family="Arial" font-size="10">+ switchInput (resource: const std::string &amp; ) bool</text>
 <polyline points="44882,4789 44895,4698 44906,4588 44913,4463 44913,4328 44903,4187 44882,4045 44845,3905 44792,3773 44718,3652 44621,3548 44575,3531 44494,3524 44386,3522 44260,3526 44125,3531 43990,3536 43864,3539 43756,3537 43674,3529 43629,3512 43588,3466 43557,3412 43536,3354 43523,3292 43516,3230 43515,3168 43518,3109 43524,3055 43531,3008 43538,2969" stroke="#CC0044" fill="none"/>
 <polygon points="43535,2968 43540,2959 43542,2970 43535,2968" stroke="#CC0044" fill="#CC0044"/>
 <polyline points="44882,4789 44895,4698 44906,4588 44913,4464 44913,4329 44903,4188 44882,4045 44845,3906 44792,3773 44718,3653 44621,3548 44581,3533 44509,3526 44413,3525 44302,3527 44183,3531 44064,3535 43953,3537 43857,3535 43786,3528 43746,3512 43706,3465 43678,3411 43658,3352 43647,3291 43643,3228 43644,3167 43649,3108 43657,3054 43666,3007 43675,2969" stroke="#CC0044" fill="none"/>
 <polygon points="43672,2968 43678,2959 43679,2970 43672,2968" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="44787,2959 44787,2887 44936,2887 44936,2959 44787,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="44787,2911 44936,2911" stroke="#0000ff" fill="none"/>
 <polyline points="44787,2935 44936,2935" stroke="#0000ff" fill="none"/>
 <text x="44795" y="2901" fill="#000000" font-family="Arial" font-size="10">VideoManager_adaptor</text>
 <text x="44859" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="44859" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="44861,4789 44861,4653 44861,4478 44861,4276 44861,4056 44861,3830 44861,3608 44861,3400 44861,3217 44861,3070 44861,2969" stroke="#CC0044" fill="none"/>
 <polygon points="44858,2969 44861,2959 44865,2969 44858,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="45392,4949 45392,4861 45545,4861 45545,4949 45392,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="45392,4885 45545,4885" stroke="#0000ff" fill="none"/>
 <polyline points="45392,4925 45545,4925" stroke="#0000ff" fill="none"/>
 <text x="45458" y="4875" fill="#000000" font-family="Arial" font-size="10">DIR</text>
 <text x="45400" y="4899" fill="#000000" font-family="Arial" font-size="10">+ ent: struct dirent</text>
 <text x="45400" y="4915" fill="#000000" font-family="Arial" font-size="10">+ wdirp: struct _WDIR *</text>
 <text x="45466" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="45563,4949 45563,4861 45851,4861 45851,4949 45563,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="45563,4885 45851,4885" stroke="#0000ff" fill="none"/>
 <polyline points="45563,4909 45851,4909" stroke="#0000ff" fill="none"/>
 <text x="45667" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::DLPlugin</text>
 <text x="45571" y="4899" fill="#000000" font-family="Arial" font-size="10">- handle_: std::unique_ptr</text>
 <text x="45571" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getSymbol (name: const char *) void * Virtual</text>
 <text x="45571" y="4939" fill="#000000" font-family="Arial" font-size="10">+ DLPlugin (handle: void *) </text>
 <polygon points="45520,2991 45520,2855 45894,2855 45894,2991 45520,2991" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="45520,2879 45894,2879" stroke="#0000ff" fill="none"/>
 <polyline points="45520,2903 45894,2903" stroke="#0000ff" fill="none"/>
 <text x="45675" y="2869" fill="#000000" font-family="Arial" font-size="10">ring::Plugin</text>
 <text x="45705" y="2893" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="45528" y="2917" fill="#000000" font-family="Arial" font-size="10">+ getInitFunction () RING_PluginInitFunc Virtual</text>
 <text x="45528" y="2933" fill="#000000" font-family="Arial" font-size="10">+ load (path: const std::string &amp; , error: std::string &amp; ) Plugin *</text>
 <text x="45528" y="2949" fill="#000000" font-family="Arial" font-size="10">+ ~Plugin () Pure Virtual</text>
 <text x="45528" y="2965" fill="#000000" font-family="Arial" font-size="10">+ getSymbol (name: const char *) void * Pure Virtual</text>
 <text x="45528" y="2981" fill="#000000" font-family="Arial" font-size="10">+ Plugin () </text>
 <polyline points="45707,4861 45707,4757 45707,4602 45707,4411 45707,4193 45707,3960 45707,3726 45707,3501 45707,3297 45707,3127 45707,3002" stroke="#CC0044" fill="none"/>
 <polygon points="45704,3001 45707,2991 45711,3001 45704,3001" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="45870,5013 45870,4797 46251,4797 46251,5013 45870,5013" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="45870,4821 46251,4821" stroke="#0000ff" fill="none"/>
 <polyline points="45870,4861 46251,4861" stroke="#0000ff" fill="none"/>
 <text x="46032" y="4811" fill="#000000" font-family="Arial" font-size="10">ring::DSP</text>
 <text x="45878" y="4835" fill="#000000" font-family="Arial" font-size="10">- dspStates_: std::vector</text>
 <text x="45878" y="4851" fill="#000000" font-family="Arial" font-size="10">- smplPerFrame_: int</text>
 <text x="45878" y="4875" fill="#000000" font-family="Arial" font-size="10">+ DSP (smplPerFrame: int , channels: int , samplingRate: int ) </text>
 <text x="45878" y="4891" fill="#000000" font-family="Arial" font-size="10">+ DSP () </text>
 <text x="45878" y="4907" fill="#000000" font-family="Arial" font-size="10">+ disableAGC () void</text>
 <text x="45878" y="4923" fill="#000000" font-family="Arial" font-size="10">+ disableDenoise () void</text>
 <text x="45878" y="4939" fill="#000000" font-family="Arial" font-size="10">+ enableAGC () void</text>
 <text x="45878" y="4955" fill="#000000" font-family="Arial" font-size="10">+ enableDenoise () void</text>
 <text x="45878" y="4971" fill="#000000" font-family="Arial" font-size="10">+ operator= () DSP &amp;</text>
 <text x="45878" y="4987" fill="#000000" font-family="Arial" font-size="10">+ process (buff: AudioBuffer &amp; , samples: int ) void</text>
 <text x="45878" y="5003" fill="#000000" font-family="Arial" font-size="10">- speexStateDeleter (state: SpeexPreprocessState *) void</text>
 <polygon points="46269,4981 46269,4829 46538,4829 46538,4981 46269,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="46269,4853 46538,4853" stroke="#0000ff" fill="none"/>
 <polyline points="46269,4909 46538,4909" stroke="#0000ff" fill="none"/>
 <text x="46371" y="4843" fill="#000000" font-family="Arial" font-size="10">ring::DTMF</text>
 <text x="46277" y="4867" fill="#000000" font-family="Arial" font-size="10">- currentTone_: char</text>
 <text x="46277" y="4883" fill="#000000" font-family="Arial" font-size="10">- dtmfgenerator_: DTMFGenerator</text>
 <text x="46277" y="4899" fill="#000000" font-family="Arial" font-size="10">- newTone_: char</text>
 <text x="46277" y="4923" fill="#000000" font-family="Arial" font-size="10">+ DTMF (sampleRate: unsigned int ) </text>
 <text x="46277" y="4939" fill="#000000" font-family="Arial" font-size="10">+ generateDTMF (buffer: std::vector &amp; ) bool</text>
 <text x="46277" y="4955" fill="#000000" font-family="Arial" font-size="10">+ generateDTMF (buffer: vector &amp; ) bool</text>
 <text x="46277" y="4971" fill="#000000" font-family="Arial" font-size="10">+ startTone (code: char ) void</text>
 <polygon points="12343,4941 12343,4869 12614,4869 12614,4941 12343,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="12343,4893 12614,4893" stroke="#0000ff" fill="none"/>
 <polyline points="12343,4917 12614,4917" stroke="#0000ff" fill="none"/>
 <text x="12417" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::DTMFException</text>
 <text x="12476" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="12351" y="4931" fill="#000000" font-family="Arial" font-size="10">+ DTMFException (str: const std::string &amp; ) </text>
 <polyline points="12473,4869 12466,4806 12459,4716 12453,4603 12450,4472 12454,4327 12464,4173 12484,4013 12516,3853 12562,3697 12623,3548 12670,3465 12725,3386 12787,3311 12853,3241 12921,3177 12989,3119 13055,3067 13115,3023 13169,2986 13213,2957" stroke="#CC0044" fill="none"/>
 <polygon points="13211,2954 13222,2952 13215,2960 13211,2954" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="46556,5037 46556,4773 46936,4773 46936,5037 46556,5037" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="46556,4797 46936,4797" stroke="#0000ff" fill="none"/>
 <polyline points="46556,4885 46936,4885" stroke="#0000ff" fill="none"/>
 <text x="46686" y="4787" fill="#000000" font-family="Arial" font-size="10">ring::DTMFGenerator</text>
 <text x="46564" y="4811" fill="#000000" font-family="Arial" font-size="10">- tones_: const DTMFTone [16]= {...}</text>
 <text x="46564" y="4827" fill="#000000" font-family="Arial" font-size="10">- sampleRate_: int</text>
 <text x="46564" y="4843" fill="#000000" font-family="Arial" font-size="10">- state: DTMFState</text>
 <text x="46564" y="4859" fill="#000000" font-family="Arial" font-size="10">- toneBuffers_: AudioSample *[16]</text>
 <text x="46564" y="4875" fill="#000000" font-family="Arial" font-size="10">- tone_: Tone</text>
 <text x="46564" y="4899" fill="#000000" font-family="Arial" font-size="10">+ DTMFGenerator (sampleRate: unsigned int ) </text>
 <text x="46564" y="4915" fill="#000000" font-family="Arial" font-size="10">+ DTMFGenerator () </text>
 <text x="46564" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getNextSamples (buffer: std::vector &amp; ) void</text>
 <text x="46564" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getNextSamples (buffer: vector &amp; ) void</text>
 <text x="46564" y="4963" fill="#000000" font-family="Arial" font-size="10">+ getSamples (buffer: std::vector &amp; , code: unsigned char ) void</text>
 <text x="46564" y="4979" fill="#000000" font-family="Arial" font-size="10">+ getSamples (buffer: vector &amp; , code: unsigned char ) void</text>
 <text x="46564" y="4995" fill="#000000" font-family="Arial" font-size="10">+ operator= () DTMFGenerator &amp;</text>
 <text x="46564" y="5011" fill="#000000" font-family="Arial" font-size="10">+ ~DTMFGenerator () </text>
 <text x="46564" y="5027" fill="#000000" font-family="Arial" font-size="10">- fillToneBuffer (index: int ) AudioSample *</text>
 <polygon points="46955,4949 46955,4861 47166,4861 47166,4949 46955,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="46955,4885 47166,4885" stroke="#0000ff" fill="none"/>
 <polyline points="46955,4925 47166,4925" stroke="#0000ff" fill="none"/>
 <text x="46963" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::DTMFGenerator::DTMFState</text>
 <text x="46963" y="4899" fill="#000000" font-family="Arial" font-size="10">+ offset: unsigned int</text>
 <text x="46963" y="4915" fill="#000000" font-family="Arial" font-size="10">+ sample: AudioSample *</text>
 <text x="47058" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="47184,4957 47184,4853 47391,4853 47391,4957 47184,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="47184,4877 47391,4877" stroke="#0000ff" fill="none"/>
 <polyline points="47184,4933 47391,4933" stroke="#0000ff" fill="none"/>
 <text x="47192" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::DTMFGenerator::DTMFTone</text>
 <text x="47192" y="4891" fill="#000000" font-family="Arial" font-size="10">+ code: unsigned char</text>
 <text x="47192" y="4907" fill="#000000" font-family="Arial" font-size="10">+ higher: int</text>
 <text x="47192" y="4923" fill="#000000" font-family="Arial" font-size="10">+ lower: int</text>
 <text x="47285" y="4947" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="47409,4949 47409,4861 47508,4861 47508,4949 47409,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="47409,4885 47508,4885" stroke="#0000ff" fill="none"/>
 <polyline points="47409,4925 47508,4925" stroke="#0000ff" fill="none"/>
 <text x="47417" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::DataType</text>
 <text x="47417" y="4899" fill="#000000" font-family="Arial" font-size="10">- RTCP= 2</text>
 <text x="47417" y="4915" fill="#000000" font-family="Arial" font-size="10">- RTP= 1</text>
 <text x="47456" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="47526,4981 47526,4829 48157,4829 48157,4981 47526,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="47526,4853 48157,4853" stroke="#0000ff" fill="none"/>
 <polyline points="47526,4877 48157,4877" stroke="#0000ff" fill="none"/>
 <text x="47797" y="4843" fill="#000000" font-family="Arial" font-size="10">ring::DcBlocker</text>
 <text x="47534" y="4867" fill="#000000" font-family="Arial" font-size="10">- states: std::vector</text>
 <text x="47534" y="4891" fill="#000000" font-family="Arial" font-size="10">+ DcBlocker (channels: unsigned ) </text>
 <text x="47534" y="4907" fill="#000000" font-family="Arial" font-size="10">+ process (out: AudioSample *, in: AudioSample *, samples: int ) void</text>
 <text x="47534" y="4923" fill="#000000" font-family="Arial" font-size="10">+ process (buf: AudioBuffer &amp; ) void</text>
 <text x="47534" y="4939" fill="#000000" font-family="Arial" font-size="10">+ process (buf: AudioBuffer &amp; ) void</text>
 <text x="47534" y="4955" fill="#000000" font-family="Arial" font-size="10">+ reset () void</text>
 <text x="47534" y="4971" fill="#000000" font-family="Arial" font-size="10">- doProcess (out: AudioSample *, in: AudioSample *, samples: unsigned , state: struct StreamState *) void</text>
 <polygon points="48175,4941 48175,4869 48307,4869 48307,4941 48175,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="48175,4893 48307,4893" stroke="#0000ff" fill="none"/>
 <polyline points="48175,4917 48307,4917" stroke="#0000ff" fill="none"/>
 <text x="48183" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::DebugSignal</text>
 <text x="48239" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="48239" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="48326,4941 48326,4869 48643,4869 48643,4941 48326,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="48326,4893 48643,4893" stroke="#0000ff" fill="none"/>
 <polyline points="48326,4917 48643,4917" stroke="#0000ff" fill="none"/>
 <text x="48376" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::VideoSignal::DecodingStarted</text>
 <text x="48334" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;DecodingStarted&quot;</text>
 <text x="48482" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="48661,4941 48661,4869 48984,4869 48984,4941 48661,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="48661,4893 48984,4893" stroke="#0000ff" fill="none"/>
 <polyline points="48661,4917 48984,4917" stroke="#0000ff" fill="none"/>
 <text x="48711" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::VideoSignal::DecodingStopped</text>
 <text x="48669" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;DecodingStopped&quot;</text>
 <text x="48820" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="49002,4949 49002,4861 49311,4861 49311,4949 49002,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="49002,4885 49311,4885" stroke="#0000ff" fill="none"/>
 <polyline points="49002,4909 49311,4909" stroke="#0000ff" fill="none"/>
 <text x="49031" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::PaDeviceInfos::DescriptionComparator</text>
 <text x="49010" y="4899" fill="#000000" font-family="Arial" font-size="10">- baseline: const std::string &amp;</text>
 <text x="49010" y="4923" fill="#000000" font-family="Arial" font-size="10">+ operator() (arg: const PaDeviceInfos &amp; ) bool</text>
 <text x="49010" y="4939" fill="#000000" font-family="Arial" font-size="10">+ DescriptionComparator (ref: const std::string &amp; ) </text>
 <polygon points="49329,4941 49329,4869 49625,4869 49625,4941 49329,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="49329,4893 49625,4893" stroke="#0000ff" fill="none"/>
 <polyline points="49329,4917 49625,4917" stroke="#0000ff" fill="none"/>
 <text x="49380" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::VideoSignal::DeviceAdded</text>
 <text x="49337" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;DeviceAdded&quot;</text>
 <text x="49475" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="49644,4949 49644,4861 50089,4861 50089,4949 49644,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="49644,4885 50089,4885" stroke="#0000ff" fill="none"/>
 <polyline points="49644,4925 50089,4925" stroke="#0000ff" fill="none"/>
 <text x="49748" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::RingAccount::DeviceAnnouncement</text>
 <text x="49652" y="4899" fill="#000000" font-family="Arial" font-size="10">+ TYPE: const constexpr dht::ValueType &amp;= dht::ValueType::USER_DATA</text>
 <text x="49652" y="4915" fill="#000000" font-family="Arial" font-size="10">+ dev: dht::InfoHash</text>
 <text x="49652" y="4939" fill="#000000" font-family="Arial" font-size="10">+ MSGPACK_DEFINE_MAP (dev) </text>
 <polygon points="49822,2959 49822,2887 49910,2887 49910,2959 49822,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="49822,2911 49910,2911" stroke="#0000ff" fill="none"/>
 <polyline points="49822,2935 49910,2935" stroke="#0000ff" fill="none"/>
 <text x="49830" y="2901" fill="#000000" font-family="Arial" font-size="10">SignedValue</text>
 <text x="49864" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="49864" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="49866,4861 49866,4752 49866,4590 49866,4388 49866,4159 49866,3918 49866,3676 49866,3447 49866,3244 49866,3080 49866,2969" stroke="#CC0044" fill="none"/>
 <polygon points="49863,2969 49866,2959 49870,2969 49863,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="50107,4941 50107,4869 50429,4869 50429,4941 50107,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="50107,4893 50429,4893" stroke="#0000ff" fill="none"/>
 <polyline points="50107,4917 50429,4917" stroke="#0000ff" fill="none"/>
 <text x="50173" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::AudioSignal::DeviceEvent</text>
 <text x="50115" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;audioDeviceEvent&quot;</text>
 <text x="50266" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="50448,4941 50448,4869 50739,4869 50739,4941 50448,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="50448,4893 50739,4893" stroke="#0000ff" fill="none"/>
 <polyline points="50448,4917 50739,4917" stroke="#0000ff" fill="none"/>
 <text x="50498" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::VideoSignal::DeviceEvent</text>
 <text x="50456" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;DeviceEvent&quot;</text>
 <text x="50591" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="50757,5037 50757,4773 50943,4773 50943,5037 50757,5037" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="50757,4797 50943,4797" stroke="#0000ff" fill="none"/>
 <polyline points="50757,4821 50943,4821" stroke="#0000ff" fill="none"/>
 <text x="50794" y="4787" fill="#000000" font-family="Arial" font-size="10">ring::DeviceParams</text>
 <text x="50848" y="4811" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="50765" y="4835" fill="#000000" font-family="Arial" font-size="10">+ channel () unsigned</text>
 <text x="50765" y="4851" fill="#000000" font-family="Arial" font-size="10">+ channel_name () std::string</text>
 <text x="50765" y="4867" fill="#000000" font-family="Arial" font-size="10">+ format () std::string</text>
 <text x="50765" y="4883" fill="#000000" font-family="Arial" font-size="10">+ framerate () rational</text>
 <text x="50765" y="4899" fill="#000000" font-family="Arial" font-size="10">+ height () </text>
 <text x="50765" y="4915" fill="#000000" font-family="Arial" font-size="10">+ input () std::string</text>
 <text x="50765" y="4931" fill="#000000" font-family="Arial" font-size="10">+ loop () std::string</text>
 <text x="50765" y="4947" fill="#000000" font-family="Arial" font-size="10">+ name () std::string</text>
 <text x="50765" y="4963" fill="#000000" font-family="Arial" font-size="10">+ offset_x () unsigned</text>
 <text x="50765" y="4979" fill="#000000" font-family="Arial" font-size="10">+ offset_y () unsigned</text>
 <text x="50765" y="4995" fill="#000000" font-family="Arial" font-size="10">+ pixel_format () std::string</text>
 <text x="50765" y="5011" fill="#000000" font-family="Arial" font-size="10">+ sdp_flags () std::string</text>
 <text x="50765" y="5027" fill="#000000" font-family="Arial" font-size="10">+ width () unsigned</text>
 <polygon points="50962,4973 50962,4837 51407,4837 51407,4973 50962,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="50962,4861 51407,4861" stroke="#0000ff" fill="none"/>
 <polyline points="50962,4949 51407,4949" stroke="#0000ff" fill="none"/>
 <text x="51095" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::RingAccount::DeviceSync</text>
 <text x="50970" y="4875" fill="#000000" font-family="Arial" font-size="10">+ TYPE: const constexpr dht::ValueType &amp;= dht::ValueType::USER_DATA</text>
 <text x="50970" y="4891" fill="#000000" font-family="Arial" font-size="10">+ date: uint64_t</text>
 <text x="50970" y="4907" fill="#000000" font-family="Arial" font-size="10">+ device_name: std::string</text>
 <text x="50970" y="4923" fill="#000000" font-family="Arial" font-size="10">+ devices_known: std::map</text>
 <text x="50970" y="4939" fill="#000000" font-family="Arial" font-size="10">+ peers: std::map</text>
 <text x="50970" y="4963" fill="#000000" font-family="Arial" font-size="10">+ MSGPACK_DEFINE_MAP (date, device_name, devices_known, peers) </text>
 <polygon points="51131,2959 51131,2887 51238,2887 51238,2959 51131,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="51131,2911 51238,2911" stroke="#0000ff" fill="none"/>
 <polyline points="51131,2935 51238,2935" stroke="#0000ff" fill="none"/>
 <text x="51139" y="2901" fill="#000000" font-family="Arial" font-size="10">EncryptedValue</text>
 <text x="51182" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="51182" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="51184,4837 51184,4716 51184,4548 51184,4346 51184,4120 51184,3884 51184,3649 51184,3428 51184,3233 51184,3076 51184,2969" stroke="#CC0044" fill="none"/>
 <polygon points="51181,2969 51184,2959 51188,2969 51181,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="51425,4957 51425,4853 51535,4853 51535,4957 51425,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="51425,4877 51535,4877" stroke="#0000ff" fill="none"/>
 <polyline points="51425,4933 51535,4933" stroke="#0000ff" fill="none"/>
 <text x="51433" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::DeviceType</text>
 <text x="51433" y="4891" fill="#000000" font-family="Arial" font-size="10">- CAPTURE</text>
 <text x="51433" y="4907" fill="#000000" font-family="Arial" font-size="10">- PLAYBACK</text>
 <text x="51433" y="4923" fill="#000000" font-family="Arial" font-size="10">- RINGTONE</text>
 <text x="51478" y="4947" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="51553,5021 51553,4789 51877,4789 51877,5021 51553,5021" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="51553,4813 51877,4813" stroke="#0000ff" fill="none"/>
 <polyline points="51553,4837 51877,4837" stroke="#0000ff" fill="none"/>
 <text x="51659" y="4803" fill="#000000" font-family="Arial" font-size="10">ring::tls::DhParams</text>
 <text x="51713" y="4827" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="51561" y="4851" fill="#000000" font-family="Arial" font-size="10">+ generate () DhParams</text>
 <text x="51561" y="4867" fill="#000000" font-family="Arial" font-size="10">+ DhParams () </text>
 <text x="51561" y="4883" fill="#000000" font-family="Arial" font-size="10">+ DhParams () </text>
 <text x="51561" y="4899" fill="#000000" font-family="Arial" font-size="10">+ DhParams (data: const std::vector &amp; ) </text>
 <text x="51561" y="4915" fill="#000000" font-family="Arial" font-size="10">+ get () gnutls_dh_params_t</text>
 <text x="51561" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator= (other: const DhParams &amp; ) DhParams &amp;</text>
 <text x="51561" y="4947" fill="#000000" font-family="Arial" font-size="10">+ get () gnutls_dh_params_t</text>
 <text x="51561" y="4963" fill="#000000" font-family="Arial" font-size="10">+ operator bool () </text>
 <text x="51561" y="4979" fill="#000000" font-family="Arial" font-size="10">+ serialize () std::vector</text>
 <text x="51561" y="4995" fill="#000000" font-family="Arial" font-size="10">- params_ () std::unique_ptr</text>
 <text x="51561" y="5011" fill="#000000" font-family="Arial" font-size="10">+ DhParams (p: gnutls_dh_params_t ) </text>
 <polygon points="51895,4973 51895,4837 52299,4837 52299,4973 51895,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="51895,4861 52299,4861" stroke="#0000ff" fill="none"/>
 <polyline points="51895,4901 52299,4901" stroke="#0000ff" fill="none"/>
 <text x="52039" y="4851" fill="#000000" font-family="Arial" font-size="10">dev::crypto::ECDHE</text>
 <text x="51903" y="4875" fill="#000000" font-family="Arial" font-size="10"># m_ephemeral: KeyPair</text>
 <text x="51903" y="4891" fill="#000000" font-family="Arial" font-size="10"># m_remoteEphemeral: mutable Public</text>
 <text x="51903" y="4915" fill="#000000" font-family="Arial" font-size="10">+ ECDHE () </text>
 <text x="51903" y="4931" fill="#000000" font-family="Arial" font-size="10">+ pubkey () Public</text>
 <text x="51903" y="4947" fill="#000000" font-family="Arial" font-size="10">+ seckey () Secret</text>
 <text x="51903" y="4963" fill="#000000" font-family="Arial" font-size="10">+ agree (_remote: Public const &amp; , o_sharedSecret: Secret &amp; ) void</text>
 <polygon points="52317,4973 52317,4837 52639,4837 52639,4973 52317,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="52317,4861 52639,4861" stroke="#0000ff" fill="none"/>
 <polyline points="52317,4901 52639,4901" stroke="#0000ff" fill="none"/>
 <text x="52391" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::Matrix1D::EnumClassIter</text>
 <text x="52325" y="4875" fill="#000000" font-family="Arial" font-size="10">- p_vec_: const Matrix1D *</text>
 <text x="52325" y="4891" fill="#000000" font-family="Arial" font-size="10">- pos_: int</text>
 <text x="52325" y="4915" fill="#000000" font-family="Arial" font-size="10">+ EnumClassIter (p_vec: const Matrix1D *, pos: int ) </text>
 <text x="52325" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator++ () const Matrix1D::EnumClassIter &amp;</text>
 <text x="52325" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator!= (other: const EnumClassIter &amp; ) bool</text>
 <text x="52325" y="4963" fill="#000000" font-family="Arial" font-size="10">+ operator* () Row</text>
 <polygon points="52657,4973 52657,4837 52979,4837 52979,4973 52657,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="52657,4861 52979,4861" stroke="#0000ff" fill="none"/>
 <polyline points="52657,4901 52979,4901" stroke="#0000ff" fill="none"/>
 <text x="52731" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::Matrix0D::EnumClassIter</text>
 <text x="52665" y="4875" fill="#000000" font-family="Arial" font-size="10">- p_vec_: const Matrix0D *</text>
 <text x="52665" y="4891" fill="#000000" font-family="Arial" font-size="10">- pos_: int</text>
 <text x="52665" y="4915" fill="#000000" font-family="Arial" font-size="10">+ EnumClassIter (p_vec: const Matrix0D *, pos: int ) </text>
 <text x="52665" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator++ () const Matrix0D::EnumClassIter &amp;</text>
 <text x="52665" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator!= (other: const EnumClassIter &amp; ) bool</text>
 <text x="52665" y="4963" fill="#000000" font-family="Arial" font-size="10">+ operator* () EnumClass</text>
 <polygon points="52998,4941 52998,4869 53247,4869 53247,4941 52998,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="52998,4893 53247,4893" stroke="#0000ff" fill="none"/>
 <polyline points="52998,4917 53247,4917" stroke="#0000ff" fill="none"/>
 <text x="53027" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::Error</text>
 <text x="53006" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;Error&quot;</text>
 <text x="53120" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="53265,4941 53265,4869 53453,4869 53453,4941 53265,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="53265,4893 53453,4893" stroke="#0000ff" fill="none"/>
 <polyline points="53265,4917 53453,4917" stroke="#0000ff" fill="none"/>
 <text x="53318" y="4883" fill="#000000" font-family="Arial" font-size="10">EventCallback</text>
 <text x="53357" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="53273" y="4931" fill="#000000" font-family="Arial" font-size="10">+ EventCallback (std: const ) </text>
 <polygon points="53308,2959 53308,2887 53411,2887 53411,2959 53308,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="53308,2911 53411,2911" stroke="#0000ff" fill="none"/>
 <polyline points="53308,2935 53411,2935" stroke="#0000ff" fill="none"/>
 <text x="53316" y="2901" fill="#000000" font-family="Arial" font-size="10">Callback_Base</text>
 <text x="53357" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="53357" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="53359,4869 53359,4765 53359,4605 53359,4404 53359,4175 53359,3931 53359,3686 53359,3454 53359,3248 53359,3082 53359,2969" stroke="#CC0044" fill="none"/>
 <polygon points="53356,2969 53359,2959 53363,2969 53356,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="53472,4941 53472,4869 53811,4869 53811,4941 53472,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="53472,4893 53811,4893" stroke="#0000ff" fill="none"/>
 <polyline points="53472,4917 53811,4917" stroke="#0000ff" fill="none"/>
 <text x="53501" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::ExportOnRingEnded</text>
 <text x="53480" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;ExportOnRingEnded&quot;</text>
 <text x="53639" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="24785,2959 24785,2887 25046,2887 25046,2959 24785,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="24785,2911 25046,2911" stroke="#0000ff" fill="none"/>
 <polyline points="24785,2935 25046,2935" stroke="#0000ff" fill="none"/>
 <text x="24833" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::ExternalFunctionFailure</text>
 <text x="24913" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="24793" y="2949" fill="#000000" font-family="Arial" font-size="10">+ ExternalFunctionFailure (_f: std::string ) </text>
 <polyline points="24922,2887 24928,2855 24937,2814 24947,2766 24958,2712 24971,2654 24986,2592 25001,2527 25018,2462 25035,2397 25054,2334 25087,2231 25122,2126 25158,2022 25196,1919 25233,1822 25268,1730 25301,1645 25332,1571 25357,1508 25378,1459" stroke="#CC0044" fill="none"/>
 <polygon points="25375,1457 25382,1449 25381,1460 25375,1457" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="25064,2959 25064,2887 25205,2887 25205,2959 25064,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="25064,2911 25205,2911" stroke="#0000ff" fill="none"/>
 <polyline points="25064,2935 25205,2935" stroke="#0000ff" fill="none"/>
 <text x="25080" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::FailedInvariant</text>
 <text x="25132" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="25072" y="2949" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="25138,2887 25142,2855 25146,2814 25152,2766 25159,2713 25166,2654 25174,2592 25183,2528 25193,2463 25203,2398 25213,2334 25231,2232 25250,2128 25269,2025 25290,1923 25310,1825 25329,1732 25347,1647 25363,1572 25377,1509 25388,1459" stroke="#CC0044" fill="none"/>
 <polygon points="25385,1458 25390,1449 25391,1460 25385,1458" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="25223,2959 25223,2887 25364,2887 25364,2959 25223,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="25223,2911 25364,2911" stroke="#0000ff" fill="none"/>
 <polyline points="25223,2935 25364,2935" stroke="#0000ff" fill="none"/>
 <text x="25255" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::FileError</text>
 <text x="25291" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="25231" y="2949" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="25295,2887 25301,2805 25310,2685 25320,2536 25332,2368 25345,2189 25357,2009 25370,1836 25380,1681 25389,1552 25396,1459" stroke="#CC0044" fill="none"/>
 <polygon points="25393,1459 25397,1449 25400,1459 25393,1459" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="53829,4957 53829,4853 54060,4853 54060,4957 53829,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="53829,4877 54060,4877" stroke="#0000ff" fill="none"/>
 <polyline points="53829,4917 54060,4917" stroke="#0000ff" fill="none"/>
 <text x="53875" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::fileutils::FileHandle</text>
 <text x="53837" y="4891" fill="#000000" font-family="Arial" font-size="10">+ fd: int</text>
 <text x="53837" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: const std::string</text>
 <text x="53837" y="4931" fill="#000000" font-family="Arial" font-size="10">+ FileHandle (n: const std::string &amp; ) </text>
 <text x="53837" y="4947" fill="#000000" font-family="Arial" font-size="10">+ ~FileHandle () </text>
 <polygon points="54098,3319 54098,2527 54696,2527 54696,3319 54098,3319" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="54098,2551 54696,2551" stroke="#0000ff" fill="none"/>
 <polyline points="54098,2575 54696,2575" stroke="#0000ff" fill="none"/>
 <text x="54353" y="2541" fill="#000000" font-family="Arial" font-size="10">dev::FixedHash</text>
 <text x="54106" y="2565" fill="#000000" font-family="Arial" font-size="10">+ m_data: std::array</text>
 <text x="54106" y="2589" fill="#000000" font-family="Arial" font-size="10">+ operator= () </text>
 <text x="54106" y="2605" fill="#000000" font-family="Arial" font-size="10">+ random () FixedHash</text>
 <text x="54106" y="2621" fill="#000000" font-family="Arial" font-size="10">+ containsBloom (_h: FixedHash const &amp; ) bool</text>
 <text x="54106" y="2637" fill="#000000" font-family="Arial" font-size="10">+ randomize (_eng: Engine &amp; ) void</text>
 <text x="54106" y="2653" fill="#000000" font-family="Arial" font-size="10">+ shiftBloom (_h: FixedHash const &amp; ) FixedHash &amp;</text>
 <text x="54106" y="2669" fill="#000000" font-family="Arial" font-size="10">+ FixedHash () </text>
 <text x="54106" y="2685" fill="#000000" font-family="Arial" font-size="10">+ FixedHash (_arith: Arith const &amp; ) </text>
 <text x="54106" y="2701" fill="#000000" font-family="Arial" font-size="10">+ asArray () std::array &amp;</text>
 <text x="54106" y="2717" fill="#000000" font-family="Arial" font-size="10">+ clear () void</text>
 <text x="54106" y="2733" fill="#000000" font-family="Arial" font-size="10">+ data () byte *</text>
 <text x="54106" y="2749" fill="#000000" font-family="Arial" font-size="10">+ operator&amp;= (_c: FixedHash const &amp; ) FixedHash &amp;</text>
 <text x="54106" y="2765" fill="#000000" font-family="Arial" font-size="10">+ operator++ () FixedHash &amp;</text>
 <text x="54106" y="2781" fill="#000000" font-family="Arial" font-size="10">+ operator[] (_i: unsigned ) byte &amp;</text>
 <text x="54106" y="2797" fill="#000000" font-family="Arial" font-size="10">+ operator^= (_c: FixedHash const &amp; ) FixedHash &amp;</text>
 <text x="54106" y="2813" fill="#000000" font-family="Arial" font-size="10">+ operator|= (_c: FixedHash const &amp; ) FixedHash &amp;</text>
 <text x="54106" y="2829" fill="#000000" font-family="Arial" font-size="10">+ ref () bytesRef</text>
 <text x="54106" y="2845" fill="#000000" font-family="Arial" font-size="10">+ bloomPart () FixedHash</text>
 <text x="54106" y="2861" fill="#000000" font-family="Arial" font-size="10">+ abridged () std::string</text>
 <text x="54106" y="2877" fill="#000000" font-family="Arial" font-size="10">+ abridgedMiddle () std::string</text>
 <text x="54106" y="2893" fill="#000000" font-family="Arial" font-size="10">+ asArray () std::array const &amp;</text>
 <text x="54106" y="2909" fill="#000000" font-family="Arial" font-size="10">+ asBytes () bytes</text>
 <text x="54106" y="2925" fill="#000000" font-family="Arial" font-size="10">+ contains (_c: FixedHash const &amp; ) bool</text>
 <text x="54106" y="2941" fill="#000000" font-family="Arial" font-size="10">+ data () byte const *</text>
 <text x="54106" y="2957" fill="#000000" font-family="Arial" font-size="10">+ firstBitSet () unsigned</text>
 <text x="54106" y="2973" fill="#000000" font-family="Arial" font-size="10">+ hex () std::string</text>
 <text x="54106" y="2989" fill="#000000" font-family="Arial" font-size="10">+ operator Arith () </text>
 <text x="54106" y="3005" fill="#000000" font-family="Arial" font-size="10">+ operator bool () </text>
 <text x="54106" y="3021" fill="#000000" font-family="Arial" font-size="10">+ operator!= (_c: FixedHash const &amp; ) bool</text>
 <text x="54106" y="3037" fill="#000000" font-family="Arial" font-size="10">+ operator&amp; (_c: FixedHash const &amp; ) FixedHash</text>
 <text x="54106" y="3053" fill="#000000" font-family="Arial" font-size="10">+ operator&lt; (_c: FixedHash const &amp; ) bool</text>
 <text x="54106" y="3069" fill="#000000" font-family="Arial" font-size="10">+ operator&lt;= (_c: FixedHash const &amp; ) bool</text>
 <text x="54106" y="3085" fill="#000000" font-family="Arial" font-size="10">+ operator== (_c: FixedHash const &amp; ) bool</text>
 <text x="54106" y="3101" fill="#000000" font-family="Arial" font-size="10">+ operator== (_other: FixedHash const &amp; ) bool</text>
 <text x="54106" y="3117" fill="#000000" font-family="Arial" font-size="10">+ operator&gt; (_c: FixedHash const &amp; ) bool</text>
 <text x="54106" y="3133" fill="#000000" font-family="Arial" font-size="10">+ operator&gt;= (_c: FixedHash const &amp; ) bool</text>
 <text x="54106" y="3149" fill="#000000" font-family="Arial" font-size="10">+ operator[] (_i: unsigned ) byte</text>
 <text x="54106" y="3165" fill="#000000" font-family="Arial" font-size="10">+ operator^ (_c: FixedHash const &amp; ) FixedHash</text>
 <text x="54106" y="3181" fill="#000000" font-family="Arial" font-size="10">+ operator| (_c: FixedHash const &amp; ) FixedHash</text>
 <text x="54106" y="3197" fill="#000000" font-family="Arial" font-size="10">+ operator~ () FixedHash</text>
 <text x="54106" y="3213" fill="#000000" font-family="Arial" font-size="10">+ ref () bytesConstRef</text>
 <text x="54106" y="3229" fill="#000000" font-family="Arial" font-size="10">+ FixedHash (_h: FixedHash const &amp; , _t: ConstructFromHashType ) </text>
 <text x="54106" y="3245" fill="#000000" font-family="Arial" font-size="10">+ FixedHash (_u: unsigned ) </text>
 <text x="54106" y="3261" fill="#000000" font-family="Arial" font-size="10">+ FixedHash (_b: bytes const &amp; , _t: ConstructFromHashType ) </text>
 <text x="54106" y="3277" fill="#000000" font-family="Arial" font-size="10">+ FixedHash (_b: bytesConstRef , _t: ConstructFromHashType ) </text>
 <text x="54106" y="3293" fill="#000000" font-family="Arial" font-size="10">+ FixedHash (_bs: byte const *, ConstructFromPointerType) </text>
 <text x="54106" y="3309" fill="#000000" font-family="Arial" font-size="10">+ FixedHash (_s: std::string const &amp; , _t: ConstructFromStringType , _ht: ConstructFromHashType ) </text>
 <polygon points="54078,5221 54078,4589 54717,4589 54717,5221 54078,5221" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="54078,4613 54717,4613" stroke="#0000ff" fill="none"/>
 <polyline points="54078,4637 54717,4637" stroke="#0000ff" fill="none"/>
 <text x="54332" y="4603" fill="#000000" font-family="Arial" font-size="10">dev::SecureFixedHash</text>
 <text x="54395" y="4627" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="54086" y="4651" fill="#000000" font-family="Arial" font-size="10">+ random () SecureFixedHash</text>
 <text x="54086" y="4667" fill="#000000" font-family="Arial" font-size="10">+ SecureFixedHash () </text>
 <text x="54086" y="4683" fill="#000000" font-family="Arial" font-size="10">+ clear () void</text>
 <text x="54086" y="4699" fill="#000000" font-family="Arial" font-size="10">+ operator&amp;= (_c: FixedHash const &amp; ) SecureFixedHash &amp;</text>
 <text x="54086" y="4715" fill="#000000" font-family="Arial" font-size="10">+ operator&amp;= (_c: SecureFixedHash const &amp; ) SecureFixedHash &amp;</text>
 <text x="54086" y="4731" fill="#000000" font-family="Arial" font-size="10">+ operator= (_c: SecureFixedHash const &amp; ) SecureFixedHash &amp;</text>
 <text x="54086" y="4747" fill="#000000" font-family="Arial" font-size="10">+ operator^= (_c: FixedHash const &amp; ) SecureFixedHash &amp;</text>
 <text x="54086" y="4763" fill="#000000" font-family="Arial" font-size="10">+ operator^= (_c: SecureFixedHash const &amp; ) SecureFixedHash &amp;</text>
 <text x="54086" y="4779" fill="#000000" font-family="Arial" font-size="10">+ operator|= (_c: FixedHash const &amp; ) SecureFixedHash &amp;</text>
 <text x="54086" y="4795" fill="#000000" font-family="Arial" font-size="10">+ operator|= (_c: SecureFixedHash const &amp; ) SecureFixedHash &amp;</text>
 <text x="54086" y="4811" fill="#000000" font-family="Arial" font-size="10">+ writable () FixedHash &amp;</text>
 <text x="54086" y="4827" fill="#000000" font-family="Arial" font-size="10">+ ~SecureFixedHash () </text>
 <text x="54086" y="4843" fill="#000000" font-family="Arial" font-size="10">+ asBytesSec () bytesSec</text>
 <text x="54086" y="4859" fill="#000000" font-family="Arial" font-size="10">+ data () byte const *</text>
 <text x="54086" y="4875" fill="#000000" font-family="Arial" font-size="10">+ makeInsecure () FixedHash const &amp;</text>
 <text x="54086" y="4891" fill="#000000" font-family="Arial" font-size="10">+ operator!= (_c: SecureFixedHash const &amp; ) bool</text>
 <text x="54086" y="4907" fill="#000000" font-family="Arial" font-size="10">+ operator&amp; (_c: FixedHash const &amp; ) SecureFixedHash</text>
 <text x="54086" y="4923" fill="#000000" font-family="Arial" font-size="10">+ operator&amp; (_c: SecureFixedHash const &amp; ) SecureFixedHash</text>
 <text x="54086" y="4939" fill="#000000" font-family="Arial" font-size="10">+ operator&lt; (_c: SecureFixedHash const &amp; ) bool</text>
 <text x="54086" y="4955" fill="#000000" font-family="Arial" font-size="10">+ operator&lt;= (_c: SecureFixedHash const &amp; ) bool</text>
 <text x="54086" y="4971" fill="#000000" font-family="Arial" font-size="10">+ operator== (_c: SecureFixedHash const &amp; ) bool</text>
 <text x="54086" y="4987" fill="#000000" font-family="Arial" font-size="10">+ operator&gt; (_c: SecureFixedHash const &amp; ) bool</text>
 <text x="54086" y="5003" fill="#000000" font-family="Arial" font-size="10">+ operator&gt;= (_c: SecureFixedHash const &amp; ) bool</text>
 <text x="54086" y="5019" fill="#000000" font-family="Arial" font-size="10">+ operator^ (_c: FixedHash const &amp; ) SecureFixedHash</text>
 <text x="54086" y="5035" fill="#000000" font-family="Arial" font-size="10">+ operator^ (_c: SecureFixedHash const &amp; ) SecureFixedHash</text>
 <text x="54086" y="5051" fill="#000000" font-family="Arial" font-size="10">+ operator| (_c: FixedHash const &amp; ) SecureFixedHash</text>
 <text x="54086" y="5067" fill="#000000" font-family="Arial" font-size="10">+ operator| (_c: SecureFixedHash const &amp; ) SecureFixedHash</text>
 <text x="54086" y="5083" fill="#000000" font-family="Arial" font-size="10">+ operator~ () SecureFixedHash</text>
 <text x="54086" y="5099" fill="#000000" font-family="Arial" font-size="10">+ ref () bytesConstRef</text>
 <text x="54086" y="5115" fill="#000000" font-family="Arial" font-size="10">+ SecureFixedHash (_h: FixedHash const &amp; , _t: ConstructFromHashType ) </text>
 <text x="54086" y="5131" fill="#000000" font-family="Arial" font-size="10">+ SecureFixedHash (_h: SecureFixedHash const &amp; , _t: ConstructFromHashType ) </text>
 <text x="54086" y="5147" fill="#000000" font-family="Arial" font-size="10">+ SecureFixedHash (_b: bytes const &amp; , _t: ConstructFromHashType ) </text>
 <text x="54086" y="5163" fill="#000000" font-family="Arial" font-size="10">+ SecureFixedHash (_b: bytesConstRef , _t: ConstructFromHashType ) </text>
 <text x="54086" y="5179" fill="#000000" font-family="Arial" font-size="10">+ SecureFixedHash (_b: bytesSec const &amp; , _t: ConstructFromHashType ) </text>
 <text x="54086" y="5195" fill="#000000" font-family="Arial" font-size="10">+ SecureFixedHash (_s: std::string const &amp; , _t: ConstructFromStringType , _ht: ConstructFromHashType ) </text>
 <text x="54086" y="5211" fill="#000000" font-family="Arial" font-size="10">+ SecureFixedHash (_d: bytes const *, _t: ConstructFromPointerType ) </text>
 <polyline points="54397,4589 54397,4481 54397,4363 54397,4237 54397,4106 54397,3971 54397,3835 54397,3701 54397,3571 54397,3446 54397,3329" stroke="#CC0044" fill="none"/>
 <polygon points="54394,3329 54397,3319 54401,3329 54394,3329" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="54735,4973 54735,4837 54881,4837 54881,4973 54735,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="54735,4861 54881,4861" stroke="#0000ff" fill="none"/>
 <polyline points="54735,4885 54881,4885" stroke="#0000ff" fill="none"/>
 <text x="54752" y="4851" fill="#000000" font-family="Arial" font-size="10">DRing::FrameBuffer</text>
 <text x="54743" y="4875" fill="#000000" font-family="Arial" font-size="10">+ storage: std::vector</text>
 <text x="54743" y="4899" fill="#000000" font-family="Arial" font-size="10">+ format () int</text>
 <text x="54743" y="4915" fill="#000000" font-family="Arial" font-size="10">+ height () int</text>
 <text x="54743" y="4931" fill="#000000" font-family="Arial" font-size="10">+ ptr () uint8_t *</text>
 <text x="54743" y="4947" fill="#000000" font-family="Arial" font-size="10">+ ptrSize () std::size_t</text>
 <text x="54743" y="4963" fill="#000000" font-family="Arial" font-size="10">+ width () int</text>
 <polygon points="54899,4941 54899,4869 55155,4869 55155,4941 54899,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="54899,4893 55155,4893" stroke="#0000ff" fill="none"/>
 <polyline points="54899,4917 55155,4917" stroke="#0000ff" fill="none"/>
 <text x="54961" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::GenericGuardBool</text>
 <text x="54907" y="4907" fill="#000000" font-family="Arial" font-size="10">+ b: bool</text>
 <text x="54907" y="4931" fill="#000000" font-family="Arial" font-size="10">+ GenericGuardBool (_m: MutexType &amp; ) </text>
 <polygon points="54918,2959 54918,2887 55137,2887 55137,2959 54918,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="54918,2911 55137,2911" stroke="#0000ff" fill="none"/>
 <polyline points="54918,2935 55137,2935" stroke="#0000ff" fill="none"/>
 <text x="54926" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::GenericGuardBool::GuardType</text>
 <text x="55025" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="55025" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="55027,4869 55027,4765 55027,4605 55027,4404 55027,4175 55027,3931 55027,3686 55027,3454 55027,3248 55027,3082 55027,2969" stroke="#CC0044" fill="none"/>
 <polygon points="55024,2969 55027,2959 55031,2969 55024,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="55174,4957 55174,4853 55443,4853 55443,4957 55174,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="55174,4877 55443,4877" stroke="#0000ff" fill="none"/>
 <polyline points="55174,4917 55443,4917" stroke="#0000ff" fill="none"/>
 <text x="55235" y="4867" fill="#000000" font-family="Arial" font-size="10">dev::GenericUnguardBool</text>
 <text x="55182" y="4891" fill="#000000" font-family="Arial" font-size="10">+ b: bool</text>
 <text x="55182" y="4907" fill="#000000" font-family="Arial" font-size="10">+ m: MutexType &amp;</text>
 <text x="55182" y="4931" fill="#000000" font-family="Arial" font-size="10">+ GenericUnguardBool (_m: MutexType &amp; ) </text>
 <text x="55182" y="4947" fill="#000000" font-family="Arial" font-size="10">+ ~GenericUnguardBool () </text>
 <polygon points="55461,4957 55461,4853 55771,4853 55771,4957 55461,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="55461,4877 55771,4877" stroke="#0000ff" fill="none"/>
 <polyline points="55461,4917 55771,4917" stroke="#0000ff" fill="none"/>
 <text x="55523" y="4867" fill="#000000" font-family="Arial" font-size="10">dev::GenericUnguardSharedBool</text>
 <text x="55469" y="4891" fill="#000000" font-family="Arial" font-size="10">+ b: bool</text>
 <text x="55469" y="4907" fill="#000000" font-family="Arial" font-size="10">+ m: MutexType &amp;</text>
 <text x="55469" y="4931" fill="#000000" font-family="Arial" font-size="10">+ GenericUnguardSharedBool (_m: MutexType &amp; ) </text>
 <text x="55469" y="4947" fill="#000000" font-family="Arial" font-size="10">+ ~GenericUnguardSharedBool () </text>
 <polygon points="55677,2959 55677,2887 56070,2887 56070,2959 55677,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="55677,2911 56070,2911" stroke="#0000ff" fill="none"/>
 <polyline points="55677,2935 56070,2935" stroke="#0000ff" fill="none"/>
 <text x="55798" y="2901" fill="#000000" font-family="Arial" font-size="10">ring::upnp::GlobalMapping</text>
 <text x="55685" y="2925" fill="#000000" font-family="Arial" font-size="10">+ users: unsigned</text>
 <text x="55685" y="2949" fill="#000000" font-family="Arial" font-size="10">+ GlobalMapping (mapping: const Mapping &amp; , users: unsigned ) </text>
 <polygon points="55573,1609 55573,1201 56173,1201 56173,1609 55573,1609" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="55573,1225 56173,1225" stroke="#0000ff" fill="none"/>
 <polyline points="55573,1345 56173,1345" stroke="#0000ff" fill="none"/>
 <text x="55816" y="1215" fill="#000000" font-family="Arial" font-size="10">ring::upnp::Mapping</text>
 <text x="55581" y="1239" fill="#000000" font-family="Arial" font-size="10">+ UPNP_DEFAULT_MAPPING_DESCRIPTION: constexpr const char *= &quot;RING&quot;</text>
 <text x="55581" y="1255" fill="#000000" font-family="Arial" font-size="10">+ UPNP_PORT_MAX: constexpr uint16_t= 65535</text>
 <text x="55581" y="1271" fill="#000000" font-family="Arial" font-size="10">+ UPNP_PORT_MIN: constexpr uint16_t= 1024</text>
 <text x="55581" y="1287" fill="#000000" font-family="Arial" font-size="10"># description_: std::string</text>
 <text x="55581" y="1303" fill="#000000" font-family="Arial" font-size="10"># port_external_: uint16_t</text>
 <text x="55581" y="1319" fill="#000000" font-family="Arial" font-size="10"># port_internal_: uint16_t</text>
 <text x="55581" y="1335" fill="#000000" font-family="Arial" font-size="10"># type_: PortType</text>
 <text x="55581" y="1359" fill="#000000" font-family="Arial" font-size="10">+ Mapping (port_external: uint16_t , port_internal: uint16_t , type: PortType , description: std::string ) </text>
 <text x="55581" y="1375" fill="#000000" font-family="Arial" font-size="10">+ Mapping (Mapping) </text>
 <text x="55581" y="1391" fill="#000000" font-family="Arial" font-size="10">+ Mapping () </text>
 <text x="55581" y="1407" fill="#000000" font-family="Arial" font-size="10">+ operator= (Mapping) Mapping &amp;</text>
 <text x="55581" y="1423" fill="#000000" font-family="Arial" font-size="10">+ operator= () Mapping &amp;</text>
 <text x="55581" y="1439" fill="#000000" font-family="Arial" font-size="10">+ ~Mapping () </text>
 <text x="55581" y="1455" fill="#000000" font-family="Arial" font-size="10">+ getDescription () std::string</text>
 <text x="55581" y="1471" fill="#000000" font-family="Arial" font-size="10">+ getPortExternal () uint16_t</text>
 <text x="55581" y="1487" fill="#000000" font-family="Arial" font-size="10">+ getPortExternalStr () std::string</text>
 <text x="55581" y="1503" fill="#000000" font-family="Arial" font-size="10">+ getPortInternal () uint16_t</text>
 <text x="55581" y="1519" fill="#000000" font-family="Arial" font-size="10">+ getPortInternalStr () std::string</text>
 <text x="55581" y="1535" fill="#000000" font-family="Arial" font-size="10">+ getType () PortType</text>
 <text x="55581" y="1551" fill="#000000" font-family="Arial" font-size="10">+ getTypeStr () std::string</text>
 <text x="55581" y="1567" fill="#000000" font-family="Arial" font-size="10">+ isValid () bool</text>
 <text x="55581" y="1583" fill="#000000" font-family="Arial" font-size="10">+ operator bool () </text>
 <text x="55581" y="1599" fill="#000000" font-family="Arial" font-size="10">+ toString () std::string</text>
 <polyline points="55873,2887 55873,2820 55873,2726 55873,2608 55873,2474 55873,2328 55873,2176 55873,2024 55873,1877 55873,1740 55873,1620" stroke="#CC0044" fill="none"/>
 <polygon points="55870,1619 55873,1609 55877,1619 55870,1619" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="55790,4941 55790,4869 55957,4869 55957,4941 55790,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="55790,4893 55957,4893" stroke="#0000ff" fill="none"/>
 <polyline points="55790,4917 55957,4917" stroke="#0000ff" fill="none"/>
 <text x="55798" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::upnp::PortMapGlobal</text>
 <text x="55871" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="55871" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="55873,4869 55873,4765 55873,4605 55873,4404 55873,4175 55873,3931 55873,3686 55873,3454 55873,3248 55873,3082 55873,2969" stroke="#CC0044" fill="none"/>
 <polygon points="55870,2969 55873,2959 55877,2969 55870,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="55975,5117 55975,4693 56442,4693 56442,5117 55975,5117" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="55975,4717 56442,4717" stroke="#0000ff" fill="none"/>
 <polyline points="55975,4853 56442,4853" stroke="#0000ff" fill="none"/>
 <text x="56132" y="4707" fill="#000000" font-family="Arial" font-size="10">ring::video::HardwareAccel</text>
 <text x="55983" y="4731" fill="#000000" font-family="Arial" font-size="10"># codecCtx_: AVCodecContext *</text>
 <text x="55983" y="4747" fill="#000000" font-family="Arial" font-size="10"># failCount_: unsigned</text>
 <text x="55983" y="4763" fill="#000000" font-family="Arial" font-size="10"># fallback_: bool</text>
 <text x="55983" y="4779" fill="#000000" font-family="Arial" font-size="10"># format_: AVPixelFormat</text>
 <text x="55983" y="4795" fill="#000000" font-family="Arial" font-size="10"># height_: int= -1</text>
 <text x="55983" y="4811" fill="#000000" font-family="Arial" font-size="10"># name_: std::string</text>
 <text x="55983" y="4827" fill="#000000" font-family="Arial" font-size="10"># profile_: int= -1</text>
 <text x="55983" y="4843" fill="#000000" font-family="Arial" font-size="10"># width_: int= -1</text>
 <text x="55983" y="4867" fill="#000000" font-family="Arial" font-size="10">+ ~HardwareAccel () Virtual</text>
 <text x="55983" y="4883" fill="#000000" font-family="Arial" font-size="10">+ allocateBuffer (frame: AVFrame *, flags: int ) int Pure Virtual</text>
 <text x="55983" y="4899" fill="#000000" font-family="Arial" font-size="10">+ check () bool Pure Virtual</text>
 <text x="55983" y="4915" fill="#000000" font-family="Arial" font-size="10">+ extractData (input: VideoFrame &amp; , output: VideoFrame &amp; ) void Pure Virtual</text>
 <text x="55983" y="4931" fill="#000000" font-family="Arial" font-size="10">+ init () bool Pure Virtual</text>
 <text x="55983" y="4947" fill="#000000" font-family="Arial" font-size="10">+ HardwareAccel (name: const std::string &amp; , format: const AVPixelFormat ) </text>
 <text x="55983" y="4963" fill="#000000" font-family="Arial" font-size="10">+ extractData (input: VideoFrame &amp; ) bool</text>
 <text x="55983" y="4979" fill="#000000" font-family="Arial" font-size="10">+ fail (forceFallback: bool ) void</text>
 <text x="55983" y="4995" fill="#000000" font-family="Arial" font-size="10">+ setCodecCtx (codecCtx: AVCodecContext *) void</text>
 <text x="55983" y="5011" fill="#000000" font-family="Arial" font-size="10">+ setHeight (height: int ) void</text>
 <text x="55983" y="5027" fill="#000000" font-family="Arial" font-size="10">+ setProfile (profile: int ) void</text>
 <text x="55983" y="5043" fill="#000000" font-family="Arial" font-size="10">+ setWidth (width: int ) void</text>
 <text x="55983" y="5059" fill="#000000" font-family="Arial" font-size="10">+ succeed () void</text>
 <text x="55983" y="5075" fill="#000000" font-family="Arial" font-size="10">+ format () AVPixelFormat</text>
 <text x="55983" y="5091" fill="#000000" font-family="Arial" font-size="10">+ hasFailed () bool</text>
 <text x="55983" y="5107" fill="#000000" font-family="Arial" font-size="10">+ name () std::string</text>
 <polygon points="56460,4941 56460,4869 56654,4869 56654,4941 56460,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="56460,4893 56654,4893" stroke="#0000ff" fill="none"/>
 <polyline points="56460,4917 56654,4917" stroke="#0000ff" fill="none"/>
 <text x="56505" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::HasInvariants</text>
 <text x="56555" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="56468" y="4931" fill="#000000" font-family="Arial" font-size="10">+ invariants () bool Pure Virtual</text>
 <polygon points="56673,4949 56673,4861 56772,4861 56772,4949 56673,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="56673,4885 56772,4885" stroke="#0000ff" fill="none"/>
 <polyline points="56673,4925 56772,4925" stroke="#0000ff" fill="none"/>
 <text x="56681" y="4875" fill="#000000" font-family="Arial" font-size="10">dev::HexPrefix</text>
 <text x="56681" y="4899" fill="#000000" font-family="Arial" font-size="10">- Add= 1</text>
 <text x="56681" y="4915" fill="#000000" font-family="Arial" font-size="10">- DontAdd</text>
 <text x="56720" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="1612,1537 1612,1273 1961,1273 1961,1537 1612,1537" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="1612,1297 1961,1297" stroke="#0000ff" fill="none"/>
 <polyline points="1612,1401 1961,1401" stroke="#0000ff" fill="none"/>
 <text x="1726" y="1287" fill="#000000" font-family="Arial" font-size="10">ring::HookPreference</text>
 <text x="1620" y="1311" fill="#000000" font-family="Arial" font-size="10">- CONFIG_LABEL: constexpr const char *const= &quot;hooks&quot;</text>
 <text x="1620" y="1327" fill="#000000" font-family="Arial" font-size="10">- numberAddPrefix_: std::string</text>
 <text x="1620" y="1343" fill="#000000" font-family="Arial" font-size="10">- numberEnabled_: bool</text>
 <text x="1620" y="1359" fill="#000000" font-family="Arial" font-size="10">- sipEnabled_: bool</text>
 <text x="1620" y="1375" fill="#000000" font-family="Arial" font-size="10">- urlCommand_: std::string</text>
 <text x="1620" y="1391" fill="#000000" font-family="Arial" font-size="10">- urlSipField_: std::string</text>
 <text x="1620" y="1415" fill="#000000" font-family="Arial" font-size="10">+ serialize (out: YAML::Emitter &amp; ) void Virtual</text>
 <text x="1620" y="1431" fill="#000000" font-family="Arial" font-size="10">+ unserialize (in: const YAML::Node &amp; ) void Virtual</text>
 <text x="1620" y="1447" fill="#000000" font-family="Arial" font-size="10">+ HookPreference () </text>
 <text x="1620" y="1463" fill="#000000" font-family="Arial" font-size="10">+ HookPreference (settings: const std::map &amp; ) </text>
 <text x="1620" y="1479" fill="#000000" font-family="Arial" font-size="10">+ runHook (msg: pjsip_msg *) void</text>
 <text x="1620" y="1495" fill="#000000" font-family="Arial" font-size="10">+ getNumberAddPrefix () std::string</text>
 <text x="1620" y="1511" fill="#000000" font-family="Arial" font-size="10">+ getUrlCommand () const std::string &amp;</text>
 <text x="1620" y="1527" fill="#000000" font-family="Arial" font-size="10">+ toMap () std::map</text>
 <polyline points="1781,1273 1777,1214 1771,1148 1762,1076 1750,998 1736,918 1718,835 1695,752 1669,669 1638,589 1602,512 1593,497 1584,482 1574,467 1563,453 1552,439 1540,426 1528,413 1516,400 1505,389 1493,378" stroke="#CC0044" fill="none"/>
 <polygon points="1490,381 1485,371 1495,375 1490,381" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="56790,4941 56790,4869 56888,4869 56888,4941 56790,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="56790,4893 56888,4893" stroke="#0000ff" fill="none"/>
 <polyline points="56790,4917 56888,4917" stroke="#0000ff" fill="none"/>
 <text x="56798" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::HwIDPair</text>
 <text x="56837" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="56837" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="56907,5005 56907,4805 57106,4805 57106,5005 56907,5005" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="56907,4829 57106,4829" stroke="#0000ff" fill="none"/>
 <polyline points="56907,4901 57106,4901" stroke="#0000ff" fill="none"/>
 <text x="56963" y="4819" fill="#000000" font-family="Arial" font-size="10">ring::upnp::IGD</text>
 <text x="56915" y="4843" fill="#000000" font-family="Arial" font-size="10">+ localIp: IpAddr</text>
 <text x="56915" y="4859" fill="#000000" font-family="Arial" font-size="10">+ publicIp: IpAddr</text>
 <text x="56915" y="4875" fill="#000000" font-family="Arial" font-size="10">+ tcpMappings: PortMapGlobal</text>
 <text x="56915" y="4891" fill="#000000" font-family="Arial" font-size="10">+ udpMappings: PortMapGlobal</text>
 <text x="56915" y="4915" fill="#000000" font-family="Arial" font-size="10">+ ~IGD () Pure Virtual</text>
 <text x="56915" y="4931" fill="#000000" font-family="Arial" font-size="10">+ IGD () </text>
 <text x="56915" y="4947" fill="#000000" font-family="Arial" font-size="10">+ IGD () </text>
 <text x="56915" y="4963" fill="#000000" font-family="Arial" font-size="10">+ IGD () </text>
 <text x="56915" y="4979" fill="#000000" font-family="Arial" font-size="10">+ operator= () IGD &amp;</text>
 <text x="56915" y="4995" fill="#000000" font-family="Arial" font-size="10">+ operator= () IGD &amp;</text>
 <polygon points="57124,4941 57124,4869 57354,4869 57354,4941 57124,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="57124,4893 57354,4893" stroke="#0000ff" fill="none"/>
 <polyline points="57124,4917 57354,4917" stroke="#0000ff" fill="none"/>
 <text x="57175" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::IceSTransDeleter</text>
 <text x="57237" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="57132" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator() (ptr: pj_ice_strans *) void</text>
 <polygon points="57372,4997 57372,4813 57720,4813 57720,4997 57372,4997" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="57372,4837 57720,4837" stroke="#0000ff" fill="none"/>
 <polyline points="57372,4861 57720,4861" stroke="#0000ff" fill="none"/>
 <text x="57503" y="4827" fill="#000000" font-family="Arial" font-size="10">ring::IceSocket</text>
 <text x="57380" y="4851" fill="#000000" font-family="Arial" font-size="10">- compId_: int= -1</text>
 <text x="57380" y="4875" fill="#000000" font-family="Arial" font-size="10">+ IceSocket (iceTransport: std::shared_ptr , compId: int ) </text>
 <text x="57380" y="4891" fill="#000000" font-family="Arial" font-size="10">+ close () void</text>
 <text x="57380" y="4907" fill="#000000" font-family="Arial" font-size="10">+ recv (buf: unsigned char *, len: size_t ) ssize_t</text>
 <text x="57380" y="4923" fill="#000000" font-family="Arial" font-size="10">+ send (buf: const unsigned char *, len: size_t ) ssize_t</text>
 <text x="57380" y="4939" fill="#000000" font-family="Arial" font-size="10">+ setOnRecv (cb: IceRecvCb ) void</text>
 <text x="57380" y="4955" fill="#000000" font-family="Arial" font-size="10">+ waitForData (timeout: unsigned int ) ssize_t</text>
 <text x="57380" y="4971" fill="#000000" font-family="Arial" font-size="10">+ getNextPacketSize () ssize_t</text>
 <text x="57380" y="4987" fill="#000000" font-family="Arial" font-size="10">- ice_transport_ () std::shared_ptr</text>
 <polygon points="57739,4965 57739,4845 58494,4845 58494,4965 57739,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="57739,4869 58494,4869" stroke="#0000ff" fill="none"/>
 <polyline points="57739,4909 58494,4909" stroke="#0000ff" fill="none"/>
 <text x="58066" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::IceTransport</text>
 <text x="57747" y="4883" fill="#000000" font-family="Arial" font-size="10">+ pwd: std::string</text>
 <text x="57747" y="4899" fill="#000000" font-family="Arial" font-size="10">+ ufrag: std::string</text>
 <text x="57747" y="4923" fill="#000000" font-family="Arial" font-size="10">+ IceTransport (name: const char *, component_count: int , master: bool , options: const IceTransportOptions &amp; ) </text>
 <text x="57747" y="4939" fill="#000000" font-family="Arial" font-size="10">+ cb_on_ice_complete (ice_st: pj_ice_strans *, op: pj_ice_strans_op , status: pj_status_t ) void</text>
 <text x="57747" y="4955" fill="#000000" font-family="Arial" font-size="10">+ cb_on_rx_data (ice_st: pj_ice_strans *, comp_id: unsigned , pkt: void *, size: pj_size_t , pj_sockaddr_t: const , unsigned) void</text>
 <polygon points="58512,4989 58512,4821 59291,4821 59291,4989 58512,4989" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="58512,4845 59291,4845" stroke="#0000ff" fill="none"/>
 <polyline points="58512,4901 59291,4901" stroke="#0000ff" fill="none"/>
 <text x="58844" y="4835" fill="#000000" font-family="Arial" font-size="10">IceTransportFactory</text>
 <text x="58520" y="4859" fill="#000000" font-family="Arial" font-size="10">- cp_: pj_caching_pool</text>
 <text x="58520" y="4875" fill="#000000" font-family="Arial" font-size="10">- ice_cfg_: pj_ice_strans_cfg</text>
 <text x="58520" y="4891" fill="#000000" font-family="Arial" font-size="10">- pool_: std::unique_ptr</text>
 <text x="58520" y="4915" fill="#000000" font-family="Arial" font-size="10">+ IceTransportFactory () </text>
 <text x="58520" y="4931" fill="#000000" font-family="Arial" font-size="10">+ createTransport (name: const char *, component_count: int , master: bool , options: const IceTransportOptions &amp; ) std::shared_ptr</text>
 <text x="58520" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getPoolFactory () pj_pool_factory *</text>
 <text x="58520" y="4963" fill="#000000" font-family="Arial" font-size="10">+ ~IceTransportFactory () </text>
 <text x="58520" y="4979" fill="#000000" font-family="Arial" font-size="10">+ getIceCfg () pj_ice_strans_cfg</text>
 <polygon points="59309,4965 59309,4845 59569,4845 59569,4965 59309,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="59309,4869 59569,4869" stroke="#0000ff" fill="none"/>
 <polyline points="59309,4909 59569,4909" stroke="#0000ff" fill="none"/>
 <text x="59367" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::IceTransportOptions</text>
 <text x="59317" y="4883" fill="#000000" font-family="Arial" font-size="10">+ stunServers: std::vector</text>
 <text x="59317" y="4899" fill="#000000" font-family="Arial" font-size="10">+ turnServers: std::vector</text>
 <text x="59317" y="4923" fill="#000000" font-family="Arial" font-size="10">+ onInitDone () IceTransportCompleteCb</text>
 <text x="59317" y="4939" fill="#000000" font-family="Arial" font-size="10">+ onNegoDone () IceTransportCompleteCb</text>
 <text x="59317" y="4955" fill="#000000" font-family="Arial" font-size="10">+ upnpEnable () bool</text>
 <polygon points="59587,4941 59587,4869 59961,4869 59961,4941 59587,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="59587,4893 59961,4893" stroke="#0000ff" fill="none"/>
 <polyline points="59587,4917 59961,4917" stroke="#0000ff" fill="none"/>
 <text x="59617" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::IncomingAccountMessage</text>
 <text x="59595" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;IncomingAccountMessage&quot;</text>
 <text x="59772" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="59980,4941 59980,4869 60275,4869 60275,4941 59980,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="59980,4893 60275,4893" stroke="#0000ff" fill="none"/>
 <polyline points="59980,4917 60275,4917" stroke="#0000ff" fill="none"/>
 <text x="60036" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::IncomingCall</text>
 <text x="59988" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;IncomingCall&quot;</text>
 <text x="60125" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="60293,4941 60293,4869 60619,4869 60619,4941 60293,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="60293,4893 60619,4893" stroke="#0000ff" fill="none"/>
 <polyline points="60293,4917 60619,4917" stroke="#0000ff" fill="none"/>
 <text x="60349" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::IncomingMessage</text>
 <text x="60301" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;IncomingMessage&quot;</text>
 <text x="60454" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="60637,4941 60637,4869 60987,4869 60987,4941 60637,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="60637,4893 60987,4893" stroke="#0000ff" fill="none"/>
 <polyline points="60637,4917 60987,4917" stroke="#0000ff" fill="none"/>
 <text x="60667" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::IncomingTrustRequest</text>
 <text x="60645" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;IncomingTrustRequest&quot;</text>
 <text x="60810" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="12632,4941 12632,4869 12960,4869 12960,4941 12632,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="12632,4893 12960,4893" stroke="#0000ff" fill="none"/>
 <polyline points="12632,4917 12960,4917" stroke="#0000ff" fill="none"/>
 <text x="12696" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::im::InstantMessageException</text>
 <text x="12794" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="12640" y="4931" fill="#000000" font-family="Arial" font-size="10">+ InstantMessageException (str: const std::string &amp; ) </text>
 <polyline points="12796,4869 12798,4807 12801,4720 12806,4610 12815,4482 12827,4340 12844,4187 12866,4028 12894,3866 12928,3704 12969,3548 12992,3479 13018,3409 13046,3340 13077,3273 13108,3209 13139,3149 13169,3093 13196,3044 13221,3002 13241,2968" stroke="#CC0044" fill="none"/>
 <polygon points="13238,2966 13246,2959 13244,2970 13238,2966" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="25382,2959 25382,2887 25634,2887 25634,2959 25382,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="25382,2911 25634,2911" stroke="#0000ff" fill="none"/>
 <polyline points="25382,2935 25634,2935" stroke="#0000ff" fill="none"/>
 <text x="25431" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::InterfaceNotSupported</text>
 <text x="25506" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="25390" y="2949" fill="#000000" font-family="Arial" font-size="10">+ InterfaceNotSupported (_f: std::string ) </text>
 <polyline points="25505,2887 25499,2805 25491,2685 25480,2536 25468,2368 25456,2189 25443,2009 25431,1836 25420,1681 25411,1552 25404,1459" stroke="#CC0044" fill="none"/>
 <polygon points="25400,1459 25403,1449 25407,1459 25400,1459" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="61006,4965 61006,4845 61713,4845 61713,4965 61006,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="61006,4869 61713,4869" stroke="#0000ff" fill="none"/>
 <polyline points="61006,4909 61713,4909" stroke="#0000ff" fill="none"/>
 <text x="61281" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::InterruptedThreadLoop</text>
 <text x="61014" y="4883" fill="#000000" font-family="Arial" font-size="10">- cv_: std::condition_variable</text>
 <text x="61014" y="4899" fill="#000000" font-family="Arial" font-size="10">- mutex_: std::mutex</text>
 <text x="61014" y="4923" fill="#000000" font-family="Arial" font-size="10">+ stop () void Virtual</text>
 <text x="61014" y="4939" fill="#000000" font-family="Arial" font-size="10">+ wait_for (rel_time: const std::chrono::duration &amp; ) void</text>
 <text x="61014" y="4955" fill="#000000" font-family="Arial" font-size="10">+ InterruptedThreadLoop (setup: const std::function &amp; , process: const std::function &amp; , cleanup: const std::function &amp; ) </text>
 <polygon points="60991,3079 60991,2767 61728,2767 61728,3079 60991,3079" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="60991,2791 61728,2791" stroke="#0000ff" fill="none"/>
 <polyline points="60991,2879 61728,2879" stroke="#0000ff" fill="none"/>
 <text x="61311" y="2781" fill="#000000" font-family="Arial" font-size="10">ring::ThreadLoop</text>
 <text x="60999" y="2805" fill="#000000" font-family="Arial" font-size="10">- cleanup_: std::function</text>
 <text x="60999" y="2821" fill="#000000" font-family="Arial" font-size="10">- process_: std::function</text>
 <text x="60999" y="2837" fill="#000000" font-family="Arial" font-size="10">- setup_: std::function</text>
 <text x="60999" y="2853" fill="#000000" font-family="Arial" font-size="10">- threadId_: std::thread::id</text>
 <text x="60999" y="2869" fill="#000000" font-family="Arial" font-size="10">- thread_: std::thread</text>
 <text x="60999" y="2893" fill="#000000" font-family="Arial" font-size="10">+ stop () void Virtual</text>
 <text x="60999" y="2909" fill="#000000" font-family="Arial" font-size="10">+ ~ThreadLoop () Virtual</text>
 <text x="60999" y="2925" fill="#000000" font-family="Arial" font-size="10">+ ThreadLoop (setup: const std::function &amp; , process: const std::function &amp; , cleanup: const std::function &amp; ) </text>
 <text x="60999" y="2941" fill="#000000" font-family="Arial" font-size="10">+ ThreadLoop (ThreadLoop) </text>
 <text x="60999" y="2957" fill="#000000" font-family="Arial" font-size="10">+ exit () void</text>
 <text x="60999" y="2973" fill="#000000" font-family="Arial" font-size="10">+ join () void</text>
 <text x="60999" y="2989" fill="#000000" font-family="Arial" font-size="10">+ start () void</text>
 <text x="60999" y="3005" fill="#000000" font-family="Arial" font-size="10">+ get_id () std::thread::id</text>
 <text x="60999" y="3021" fill="#000000" font-family="Arial" font-size="10">+ isRunning () bool</text>
 <text x="60999" y="3037" fill="#000000" font-family="Arial" font-size="10">+ isStopping () bool</text>
 <text x="60999" y="3053" fill="#000000" font-family="Arial" font-size="10">- mainloop (tid: std::thread::id &amp; , setup: const std::function , process: const std::function , cleanup: const std::function ) void</text>
 <text x="60999" y="3069" fill="#000000" font-family="Arial" font-size="10">- state_ () std::atomic</text>
 <polyline points="61359,4845 61359,4743 61359,4601 61359,4428 61359,4233 61359,4024 61359,3811 61359,3602 61359,3406 61359,3232 61359,3089" stroke="#CC0044" fill="none"/>
 <polygon points="61356,3089 61359,3079 61363,3089 61356,3089" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="61731,4941 61731,4869 61962,4869 61962,4941 61731,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="61731,4893 61962,4893" stroke="#0000ff" fill="none"/>
 <polyline points="61731,4917 61962,4917" stroke="#0000ff" fill="none"/>
 <text x="61755" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::SIPCall::InvSessionDeleter</text>
 <text x="61844" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="61739" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator() (pjsip_inv_session *) void</text>
 <polygon points="25653,2959 25653,2887 25806,2887 25806,2959 25653,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="25653,2911 25806,2911" stroke="#0000ff" fill="none"/>
 <polyline points="25653,2935 25806,2935" stroke="#0000ff" fill="none"/>
 <text x="25661" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::crypto::InvalidState</text>
 <text x="25727" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="25661" y="2949" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="25725,2887 25721,2855 25717,2814 25711,2766 25704,2713 25696,2654 25687,2592 25677,2528 25667,2463 25655,2398 25643,2334 25621,2231 25597,2127 25571,2023 25545,1921 25519,1823 25494,1731 25471,1646 25449,1572 25431,1509 25416,1459" stroke="#CC0044" fill="none"/>
 <polygon points="25413,1460 25413,1449 25419,1458 25413,1460" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="61980,4981 61980,4829 62635,4829 62635,4981 61980,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="61980,4853 62635,4853" stroke="#0000ff" fill="none"/>
 <polyline points="61980,4925 62635,4925" stroke="#0000ff" fill="none"/>
 <text x="62246" y="4843" fill="#000000" font-family="Arial" font-size="10">dev::InvariantChecker</text>
 <text x="61988" y="4867" fill="#000000" font-family="Arial" font-size="10">- m_file: char const *</text>
 <text x="61988" y="4883" fill="#000000" font-family="Arial" font-size="10">- m_function: char const *</text>
 <text x="61988" y="4899" fill="#000000" font-family="Arial" font-size="10">- m_line: int</text>
 <text x="61988" y="4915" fill="#000000" font-family="Arial" font-size="10">- m_this: HasInvariants const *</text>
 <text x="61988" y="4939" fill="#000000" font-family="Arial" font-size="10">+ checkInvariants (_this: HasInvariants const *, _fn: char const *, _file: char const *, _line: int , _pre: bool ) void</text>
 <text x="61988" y="4955" fill="#000000" font-family="Arial" font-size="10">+ InvariantChecker (_this: HasInvariants *, _fn: char const *, _file: char const *, _line: int ) </text>
 <text x="61988" y="4971" fill="#000000" font-family="Arial" font-size="10">+ ~InvariantChecker () </text>
 <polygon points="62653,5213 62653,4597 63064,4597 63064,5213 62653,5213" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="62653,4621 63064,4621" stroke="#0000ff" fill="none"/>
 <polyline points="62653,4645 63064,4645" stroke="#0000ff" fill="none"/>
 <text x="62825" y="4611" fill="#000000" font-family="Arial" font-size="10">ring::IpAddr</text>
 <text x="62661" y="4635" fill="#000000" font-family="Arial" font-size="10">- addr: pj_sockaddr</text>
 <text x="62661" y="4659" fill="#000000" font-family="Arial" font-size="10">+ isIpv6 (address: const std::string &amp; ) bool</text>
 <text x="62661" y="4675" fill="#000000" font-family="Arial" font-size="10">+ isValid (address: const std::string &amp; , family: pj_uint16_t ) bool</text>
 <text x="62661" y="4691" fill="#000000" font-family="Arial" font-size="10">+ IpAddr (family: uint16_t ) </text>
 <text x="62661" y="4707" fill="#000000" font-family="Arial" font-size="10">+ IpAddr (other: const IpAddr &amp; ) </text>
 <text x="62661" y="4723" fill="#000000" font-family="Arial" font-size="10">+ IpAddr (ip: const pj_sockaddr &amp; ) </text>
 <text x="62661" y="4739" fill="#000000" font-family="Arial" font-size="10">+ IpAddr (ip: const sockaddr *, len: socklen_t ) </text>
 <text x="62661" y="4755" fill="#000000" font-family="Arial" font-size="10">+ IpAddr (ip: const sockaddr_in &amp; ) </text>
 <text x="62661" y="4771" fill="#000000" font-family="Arial" font-size="10">+ IpAddr (ip: const sockaddr_in6 &amp; ) </text>
 <text x="62661" y="4787" fill="#000000" font-family="Arial" font-size="10">+ IpAddr (ip: const sockaddr &amp; ) </text>
 <text x="62661" y="4803" fill="#000000" font-family="Arial" font-size="10">+ IpAddr (ip: const sockaddr_storage &amp; ) </text>
 <text x="62661" y="4819" fill="#000000" font-family="Arial" font-size="10">+ IpAddr (ip: const in6_addr &amp; ) </text>
 <text x="62661" y="4835" fill="#000000" font-family="Arial" font-size="10">+ IpAddr (ip: const in_addr &amp; ) </text>
 <text x="62661" y="4851" fill="#000000" font-family="Arial" font-size="10">+ IpAddr (str: const std::string &amp; , family: pj_uint16_t ) </text>
 <text x="62661" y="4867" fill="#000000" font-family="Arial" font-size="10">+ operator pj_sockaddr &amp; () </text>
 <text x="62661" y="4883" fill="#000000" font-family="Arial" font-size="10">+ operator pj_sockaddr_in &amp; () </text>
 <text x="62661" y="4899" fill="#000000" font-family="Arial" font-size="10">+ operator pj_sockaddr_in6 &amp; () </text>
 <text x="62661" y="4915" fill="#000000" font-family="Arial" font-size="10">+ operator sockaddr &amp; () </text>
 <text x="62661" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator sockaddr_storage () </text>
 <text x="62661" y="4947" fill="#000000" font-family="Arial" font-size="10">+ pjPtr () pj_sockaddr *</text>
 <text x="62661" y="4963" fill="#000000" font-family="Arial" font-size="10">+ setPort (port: uint16_t ) void</text>
 <text x="62661" y="4979" fill="#000000" font-family="Arial" font-size="10">+ getFamily () uint16_t</text>
 <text x="62661" y="4995" fill="#000000" font-family="Arial" font-size="10">+ getLength () socklen_t</text>
 <text x="62661" y="5011" fill="#000000" font-family="Arial" font-size="10">+ getPort () uint16_t</text>
 <text x="62661" y="5027" fill="#000000" font-family="Arial" font-size="10">+ isIpv4 () bool</text>
 <text x="62661" y="5043" fill="#000000" font-family="Arial" font-size="10">+ isIpv6 () bool</text>
 <text x="62661" y="5059" fill="#000000" font-family="Arial" font-size="10">+ isLoopback () bool</text>
 <text x="62661" y="5075" fill="#000000" font-family="Arial" font-size="10">+ isPrivate () bool</text>
 <text x="62661" y="5091" fill="#000000" font-family="Arial" font-size="10">+ isUnspecified () bool</text>
 <text x="62661" y="5107" fill="#000000" font-family="Arial" font-size="10">+ operator bool () </text>
 <text x="62661" y="5123" fill="#000000" font-family="Arial" font-size="10">+ operator const pj_sockaddr &amp; () </text>
 <text x="62661" y="5139" fill="#000000" font-family="Arial" font-size="10">+ operator const pj_sockaddr_in &amp; () </text>
 <text x="62661" y="5155" fill="#000000" font-family="Arial" font-size="10">+ operator const pj_sockaddr_in6 &amp; () </text>
 <text x="62661" y="5171" fill="#000000" font-family="Arial" font-size="10">+ operator std::string () </text>
 <text x="62661" y="5187" fill="#000000" font-family="Arial" font-size="10">+ pjPtr () const pj_sockaddr *</text>
 <text x="62661" y="5203" fill="#000000" font-family="Arial" font-size="10">+ toString (include_port: bool , force_ipv6_brackets: bool ) std::string</text>
 <polygon points="7782,5245 7782,4565 8301,4565 8301,5245 7782,5245" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="7782,4589 8301,4589" stroke="#0000ff" fill="none"/>
 <polyline points="7782,4837 8301,4837" stroke="#0000ff" fill="none"/>
 <text x="7997" y="4579" fill="#000000" font-family="Arial" font-size="10">ring::JackLayer</text>
 <text x="7790" y="4603" fill="#000000" font-family="Arial" font-size="10">- captureBuffer_: AudioBuffer</text>
 <text x="7790" y="4619" fill="#000000" font-family="Arial" font-size="10">- captureClient_: jack_client_t *</text>
 <text x="7790" y="4635" fill="#000000" font-family="Arial" font-size="10">- captureFloatBuffer_: std::vector</text>
 <text x="7790" y="4651" fill="#000000" font-family="Arial" font-size="10">- data_ready_: std::condition_variable</text>
 <text x="7790" y="4667" fill="#000000" font-family="Arial" font-size="10">- hardwareBufferSize_: size_t</text>
 <text x="7790" y="4683" fill="#000000" font-family="Arial" font-size="10">- in_ports_: std::vector</text>
 <text x="7790" y="4699" fill="#000000" font-family="Arial" font-size="10">- in_ringbuffers_: std::vector</text>
 <text x="7790" y="4715" fill="#000000" font-family="Arial" font-size="10">- mainRingBuffer_: std::shared_ptr</text>
 <text x="7790" y="4731" fill="#000000" font-family="Arial" font-size="10">- out_ports_: std::vector</text>
 <text x="7790" y="4747" fill="#000000" font-family="Arial" font-size="10">- out_ringbuffers_: std::vector</text>
 <text x="7790" y="4763" fill="#000000" font-family="Arial" font-size="10">- playbackBuffer_: AudioBuffer</text>
 <text x="7790" y="4779" fill="#000000" font-family="Arial" font-size="10">- playbackClient_: jack_client_t *</text>
 <text x="7790" y="4795" fill="#000000" font-family="Arial" font-size="10">- playbackFloatBuffer_: std::vector</text>
 <text x="7790" y="4811" fill="#000000" font-family="Arial" font-size="10">- ringbuffer_thread_: std::thread</text>
 <text x="7790" y="4827" fill="#000000" font-family="Arial" font-size="10">- ringbuffer_thread_mutex_: std::mutex</text>
 <text x="7790" y="4851" fill="#000000" font-family="Arial" font-size="10">+ ~JackLayer () Virtual</text>
 <text x="7790" y="4867" fill="#000000" font-family="Arial" font-size="10">+ JackLayer () </text>
 <text x="7790" y="4883" fill="#000000" font-family="Arial" font-size="10">+ JackLayer (AudioPreference: const ) </text>
 <text x="7790" y="4899" fill="#000000" font-family="Arial" font-size="10">+ operator= () JackLayer &amp;</text>
 <text x="7790" y="4915" fill="#000000" font-family="Arial" font-size="10">- startStream () void Virtual</text>
 <text x="7790" y="4931" fill="#000000" font-family="Arial" font-size="10">- stopStream () void Virtual</text>
 <text x="7790" y="4947" fill="#000000" font-family="Arial" font-size="10">- updatePreference (pref: AudioPreference &amp; , index: int , type: DeviceType ) void Virtual</text>
 <text x="7790" y="4963" fill="#000000" font-family="Arial" font-size="10">- getAudioDeviceIndex (name: const std::string &amp; , type: DeviceType ) int Virtual</text>
 <text x="7790" y="4979" fill="#000000" font-family="Arial" font-size="10">- getAudioDeviceName (index: int , type: DeviceType ) std::string Virtual</text>
 <text x="7790" y="4995" fill="#000000" font-family="Arial" font-size="10">- getCaptureDeviceList () std::vector Virtual</text>
 <text x="7790" y="5011" fill="#000000" font-family="Arial" font-size="10">- getIndexCapture () int Virtual</text>
 <text x="7790" y="5027" fill="#000000" font-family="Arial" font-size="10">- getIndexPlayback () int Virtual</text>
 <text x="7790" y="5043" fill="#000000" font-family="Arial" font-size="10">- getIndexRingtone () int Virtual</text>
 <text x="7790" y="5059" fill="#000000" font-family="Arial" font-size="10">- getPlaybackDeviceList () std::vector Virtual</text>
 <text x="7790" y="5075" fill="#000000" font-family="Arial" font-size="10">- onShutdown (data: void *) void</text>
 <text x="7790" y="5091" fill="#000000" font-family="Arial" font-size="10">- process_capture (frames: jack_nframes_t , arg: void *) int</text>
 <text x="7790" y="5107" fill="#000000" font-family="Arial" font-size="10">- process_playback (frames: jack_nframes_t , arg: void *) int</text>
 <text x="7790" y="5123" fill="#000000" font-family="Arial" font-size="10">- capture () void</text>
 <text x="7790" y="5139" fill="#000000" font-family="Arial" font-size="10">- fillWithToneOrRingtone (buffer: AudioBuffer &amp; ) void</text>
 <text x="7790" y="5155" fill="#000000" font-family="Arial" font-size="10">- fillWithUrgent (buffer: AudioBuffer &amp; , samplesToGet: size_t ) void</text>
 <text x="7790" y="5171" fill="#000000" font-family="Arial" font-size="10">- fillWithVoice (buffer: AudioBuffer &amp; , samplesAvail: size_t ) void</text>
 <text x="7790" y="5187" fill="#000000" font-family="Arial" font-size="10">- playback () void</text>
 <text x="7790" y="5203" fill="#000000" font-family="Arial" font-size="10">- read (buffer: AudioBuffer &amp; ) void</text>
 <text x="7790" y="5219" fill="#000000" font-family="Arial" font-size="10">- ringbuffer_worker () void</text>
 <text x="7790" y="5235" fill="#000000" font-family="Arial" font-size="10">- write (buffer: AudioBuffer &amp; , floatBuffer: std::vector &amp; ) void</text>
 <polyline points="8087,4565 8101,4465 8115,4357 8131,4243 8147,4124 8163,4002 8180,3879 8196,3757 8212,3637 8228,3520 8243,3409" stroke="#CC0044" fill="none"/>
 <polygon points="8240,3409 8245,3399 8247,3410 8240,3409" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="63082,4949 63082,4861 63312,4861 63312,4949 63082,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="63082,4885 63312,4885" stroke="#0000ff" fill="none"/>
 <polyline points="63082,4925 63312,4925" stroke="#0000ff" fill="none"/>
 <text x="63090" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::sip_utils::KeyExchangeProtocol</text>
 <text x="63090" y="4899" fill="#000000" font-family="Arial" font-size="10">- NONE</text>
 <text x="63090" y="4915" fill="#000000" font-family="Arial" font-size="10">- SDES</text>
 <text x="63195" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="63331,5037 63331,4773 63856,4773 63856,5037 63331,5037" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="63331,4797 63856,4797" stroke="#0000ff" fill="none"/>
 <polyline points="63331,4853 63856,4853" stroke="#0000ff" fill="none"/>
 <text x="63557" y="4787" fill="#000000" font-family="Arial" font-size="10">dev::KeyPair</text>
 <text x="63339" y="4811" fill="#000000" font-family="Arial" font-size="10">- m_address: Address</text>
 <text x="63339" y="4827" fill="#000000" font-family="Arial" font-size="10">- m_public: Public</text>
 <text x="63339" y="4843" fill="#000000" font-family="Arial" font-size="10">- m_secret: Secret</text>
 <text x="63339" y="4867" fill="#000000" font-family="Arial" font-size="10">+ create () KeyPair</text>
 <text x="63339" y="4883" fill="#000000" font-family="Arial" font-size="10">+ fromEncryptedSeed (_seed: bytesConstRef , _password: std::string const &amp; ) KeyPair</text>
 <text x="63339" y="4899" fill="#000000" font-family="Arial" font-size="10">+ KeyPair () </text>
 <text x="63339" y="4915" fill="#000000" font-family="Arial" font-size="10">+ KeyPair (_k: Secret const &amp; ) </text>
 <text x="63339" y="4931" fill="#000000" font-family="Arial" font-size="10">+ address () Address const &amp;</text>
 <text x="63339" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator!= (_c: KeyPair const &amp; ) bool</text>
 <text x="63339" y="4963" fill="#000000" font-family="Arial" font-size="10">+ operator== (_c: KeyPair const &amp; ) bool</text>
 <text x="63339" y="4979" fill="#000000" font-family="Arial" font-size="10">+ pub () Public const &amp;</text>
 <text x="63339" y="4995" fill="#000000" font-family="Arial" font-size="10">+ sec () Secret const &amp;</text>
 <text x="63339" y="5011" fill="#000000" font-family="Arial" font-size="10">+ secret () Secret const &amp;</text>
 <text x="63339" y="5027" fill="#000000" font-family="Arial" font-size="10">- populateFromSecret (_sec: Secret const &amp; ) void</text>
 <polygon points="63874,4957 63874,4853 64407,4853 64407,4957 63874,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="63874,4877 64407,4877" stroke="#0000ff" fill="none"/>
 <polyline points="63874,4901 64407,4901" stroke="#0000ff" fill="none"/>
 <text x="64046" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::RingAccount::KnownDevice</text>
 <text x="63882" y="4891" fill="#000000" font-family="Arial" font-size="10">+ certificate: std::shared_ptr</text>
 <text x="63882" y="4915" fill="#000000" font-family="Arial" font-size="10">+ KnownDevice (cert: const std::shared_ptr &amp; , n: const std::string &amp; , sync: time_point ) </text>
 <text x="63882" y="4931" fill="#000000" font-family="Arial" font-size="10">+ last_sync () time_point</text>
 <text x="63882" y="4947" fill="#000000" font-family="Arial" font-size="10">+ name () std::string</text>
 <polygon points="64425,4941 64425,4869 64781,4869 64781,4941 64425,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="64425,4893 64781,4893" stroke="#0000ff" fill="none"/>
 <polyline points="64425,4917 64781,4917" stroke="#0000ff" fill="none"/>
 <text x="64455" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::KnownDevicesChanged</text>
 <text x="64433" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;KnownDevicesChanged&quot;</text>
 <text x="64601" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="64800,6261 64800,3549 65565,3549 65565,6261 64800,6261" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="64800,3573 65565,3573" stroke="#0000ff" fill="none"/>
 <polyline points="64800,3917 65565,3917" stroke="#0000ff" fill="none"/>
 <text x="65143" y="3563" fill="#000000" font-family="Arial" font-size="10">ring::Manager</text>
 <text x="64808" y="3587" fill="#000000" font-family="Arial" font-size="10">+ callFactory</text>
 <text x="64808" y="3603" fill="#000000" font-family="Arial" font-size="10">+ dhtLogLevel</text>
 <text x="64808" y="3619" fill="#000000" font-family="Arial" font-size="10">+ initialized: std::atomic_bool= {...}</text>
 <text x="64808" y="3635" fill="#000000" font-family="Arial" font-size="10">+ account_order: auto= loadAccountOrder()</text>
 <text x="64808" y="3651" fill="#000000" font-family="Arial" font-size="10">+ audioPreference: AudioPreference</text>
 <text x="64808" y="3667" fill="#000000" font-family="Arial" font-size="10">+ hasTriedToRegister_: bool</text>
 <text x="64808" y="3683" fill="#000000" font-family="Arial" font-size="10">+ hookPreference: HookPreference</text>
 <text x="64808" y="3699" fill="#000000" font-family="Arial" font-size="10">+ preferences: Preferences</text>
 <text x="64808" y="3715" fill="#000000" font-family="Arial" font-size="10">+ shortcutPreferences: ShortcutPreferences</text>
 <text x="64808" y="3731" fill="#000000" font-family="Arial" font-size="10">+ voipPreferences: VoipPreference</text>
 <text x="64808" y="3747" fill="#000000" font-family="Arial" font-size="10">- audioLayerMutex_: std::mutex</text>
 <text x="64808" y="3763" fill="#000000" font-family="Arial" font-size="10">- currentCallMutex_: std::mutex</text>
 <text x="64808" y="3779" fill="#000000" font-family="Arial" font-size="10">- currentCall_: std::string</text>
 <text x="64808" y="3795" fill="#000000" font-family="Arial" font-size="10">- dtmfBuf_: AudioBuffer</text>
 <text x="64808" y="3811" fill="#000000" font-family="Arial" font-size="10">- dtmfKey_: std::unique_ptr</text>
 <text x="64808" y="3827" fill="#000000" font-family="Arial" font-size="10">- path_: std::string</text>
 <text x="64808" y="3843" fill="#000000" font-family="Arial" font-size="10">- pluginManager_: std::unique_ptr</text>
 <text x="64808" y="3859" fill="#000000" font-family="Arial" font-size="10">- ringbufferpool_: std::unique_ptr</text>
 <text x="64808" y="3875" fill="#000000" font-family="Arial" font-size="10">- toneCtrl_: ToneControl</text>
 <text x="64808" y="3891" fill="#000000" font-family="Arial" font-size="10">- waitingCallsMutex_: std::mutex</text>
 <text x="64808" y="3907" fill="#000000" font-family="Arial" font-size="10">- waitingCalls_: CallIDSet</text>
 <text x="64808" y="3931" fill="#000000" font-family="Arial" font-size="10">+ createSinkClient () </text>
 <text x="64808" y="3947" fill="#000000" font-family="Arial" font-size="10">+ getIceTransportFactory () </text>
 <text x="64808" y="3963" fill="#000000" font-family="Arial" font-size="10">+ getSinkClient () </text>
 <text x="64808" y="3979" fill="#000000" font-family="Arial" font-size="10">+ getVideoManager () </text>
 <text x="64808" y="3995" fill="#000000" font-family="Arial" font-size="10">+ pollEvents () </text>
 <text x="64808" y="4011" fill="#000000" font-family="Arial" font-size="10">+ registerAccounts () </text>
 <text x="64808" y="4027" fill="#000000" font-family="Arial" font-size="10">+ registerEventHandler () </text>
 <text x="64808" y="4043" fill="#000000" font-family="Arial" font-size="10">+ unregisterEventHandler () </text>
 <text x="64808" y="4059" fill="#000000" font-family="Arial" font-size="10">+ instance () Manager &amp;</text>
 <text x="64808" y="4075" fill="#000000" font-family="Arial" font-size="10">+ Manager () </text>
 <text x="64808" y="4091" fill="#000000" font-family="Arial" font-size="10">+ addAccount (details: const std::map &amp; , accountId: const std::string &amp; ) std::string</text>
 <text x="64808" y="4107" fill="#000000" font-family="Arial" font-size="10">+ addAudio (call: Call &amp; ) void</text>
 <text x="64808" y="4123" fill="#000000" font-family="Arial" font-size="10">+ addMainParticipant (conference_id: const std::string &amp; ) bool</text>
 <text x="64808" y="4139" fill="#000000" font-family="Arial" font-size="10">+ addParticipant (callId: const std::string &amp; , conferenceId: const std::string &amp; ) bool</text>
 <text x="64808" y="4155" fill="#000000" font-family="Arial" font-size="10">+ addTask (std: const ) void</text>
 <text x="64808" y="4171" fill="#000000" font-family="Arial" font-size="10">+ answerCall (call_id: const std::string &amp; ) bool</text>
 <text x="64808" y="4187" fill="#000000" font-family="Arial" font-size="10">+ attendedTransfer (transferID: const std::string &amp; , targetID: const std::string &amp; ) bool</text>
 <text x="64808" y="4203" fill="#000000" font-family="Arial" font-size="10">+ audioFormatUsed (format: AudioFormat ) AudioFormat</text>
 <text x="64808" y="4219" fill="#000000" font-family="Arial" font-size="10">+ callBusy (call: Call &amp; ) void</text>
 <text x="64808" y="4235" fill="#000000" font-family="Arial" font-size="10">+ callFailure (call: Call &amp; ) void</text>
 <text x="64808" y="4251" fill="#000000" font-family="Arial" font-size="10">+ checkAudio () void</text>
 <text x="64808" y="4267" fill="#000000" font-family="Arial" font-size="10">+ congestion () void</text>
 <text x="64808" y="4283" fill="#000000" font-family="Arial" font-size="10">+ createConfFromParticipantList (participantList: const std::vector &amp; ) void</text>
 <text x="64808" y="4299" fill="#000000" font-family="Arial" font-size="10">+ createConference (id1: const std::string &amp; , id2: const std::string &amp; ) std::shared_ptr</text>
 <text x="64808" y="4315" fill="#000000" font-family="Arial" font-size="10">+ detachParticipant (call_id: const std::string &amp; ) bool</text>
 <text x="64808" y="4331" fill="#000000" font-family="Arial" font-size="10">+ finish () void</text>
 <text x="64808" y="4347" fill="#000000" font-family="Arial" font-size="10">+ getAudioDriver () std::shared_ptr</text>
 <text x="64808" y="4363" fill="#000000" font-family="Arial" font-size="10">+ getAudioInputDeviceIndex (name: const std::string &amp; ) int</text>
 <text x="64808" y="4379" fill="#000000" font-family="Arial" font-size="10">+ getAudioInputDeviceList () std::vector</text>
 <text x="64808" y="4395" fill="#000000" font-family="Arial" font-size="10">+ getAudioOutputDeviceIndex (name: const std::string &amp; ) int</text>
 <text x="64808" y="4411" fill="#000000" font-family="Arial" font-size="10">+ getAudioOutputDeviceList () std::vector</text>
 <text x="64808" y="4427" fill="#000000" font-family="Arial" font-size="10">+ getCallDetails (callID: const std::string &amp; ) std::map</text>
 <text x="64808" y="4443" fill="#000000" font-family="Arial" font-size="10">+ getConferenceFromCallID (call_id: const std::string &amp; ) std::shared_ptr</text>
 <text x="64808" y="4459" fill="#000000" font-family="Arial" font-size="10">+ getConferenceId (callID: const std::string &amp; ) std::string</text>
 <text x="64808" y="4475" fill="#000000" font-family="Arial" font-size="10">+ getCurrentAudioDevicesIndex () std::vector</text>
 <text x="64808" y="4491" fill="#000000" font-family="Arial" font-size="10">+ getMessageStatus (id: uint64_t ) int</text>
 <text x="64808" y="4507" fill="#000000" font-family="Arial" font-size="10">+ getNewAccountId () std::string</text>
 <text x="64808" y="4523" fill="#000000" font-family="Arial" font-size="10">+ getNewCallID () std::string</text>
 <text x="64808" y="4539" fill="#000000" font-family="Arial" font-size="10">+ getRingBufferPool () RingBufferPool &amp;</text>
 <text x="64808" y="4555" fill="#000000" font-family="Arial" font-size="10">+ getTelephoneFile () AudioLoop *</text>
 <text x="64808" y="4571" fill="#000000" font-family="Arial" font-size="10">+ getTelephoneTone () AudioLoop *</text>
 <text x="64808" y="4587" fill="#000000" font-family="Arial" font-size="10">+ hangupCall (callId: const std::string &amp; ) bool</text>
 <text x="64808" y="4603" fill="#000000" font-family="Arial" font-size="10">+ hangupConference (id: const std::string &amp; ) bool</text>
 <text x="64808" y="4619" fill="#000000" font-family="Arial" font-size="10">+ hardwareAudioFormatChanged (format: AudioFormat ) AudioFormat</text>
 <text x="64808" y="4635" fill="#000000" font-family="Arial" font-size="10">+ holdConference (id: const std::string &amp; ) bool</text>
 <text x="64808" y="4651" fill="#000000" font-family="Arial" font-size="10">+ incomingCall (call: Call &amp; , accountId: const std::string &amp; ) void</text>
 <text x="64808" y="4667" fill="#000000" font-family="Arial" font-size="10">+ incomingCallsWaiting () bool</text>
 <text x="64808" y="4683" fill="#000000" font-family="Arial" font-size="10">+ incomingMessage (callID: const std::string &amp; , from: const std::string &amp; , messages: const std::map &amp; ) void</text>
 <text x="64808" y="4699" fill="#000000" font-family="Arial" font-size="10">+ init (config_file: const std::string &amp; ) void</text>
 <text x="64808" y="4715" fill="#000000" font-family="Arial" font-size="10">+ initAudioDriver () void</text>
 <text x="64808" y="4731" fill="#000000" font-family="Arial" font-size="10">+ isConferenceParticipant (call_id: const std::string &amp; ) bool</text>
 <text x="64808" y="4747" fill="#000000" font-family="Arial" font-size="10">+ isRecording (id: const std::string &amp; ) bool</text>
 <text x="64808" y="4763" fill="#000000" font-family="Arial" font-size="10">+ isRingtoneEnabled (id: const std::string &amp; ) int</text>
 <text x="64808" y="4779" fill="#000000" font-family="Arial" font-size="10">+ isStartHidden () int</text>
 <text x="64808" y="4795" fill="#000000" font-family="Arial" font-size="10">+ joinConference (conf_id1: const std::string &amp; , conf_id2: const std::string &amp; ) bool</text>
 <text x="64808" y="4811" fill="#000000" font-family="Arial" font-size="10">+ joinParticipant (callId1: const std::string &amp; , callId2: const std::string &amp; ) bool</text>
 <text x="64808" y="4827" fill="#000000" font-family="Arial" font-size="10">+ muteMediaCall (callId: const std::string &amp; , mediaType: const std::string &amp; , is_muted: bool ) bool</text>
 <text x="64808" y="4843" fill="#000000" font-family="Arial" font-size="10">+ offHoldCall (callId: const std::string &amp; ) bool</text>
 <text x="64808" y="4859" fill="#000000" font-family="Arial" font-size="10">+ onHoldCall (callId: const std::string &amp; ) bool</text>
 <text x="64808" y="4875" fill="#000000" font-family="Arial" font-size="10">+ outgoingCall (preferred_account_id: const std::string &amp; , to: const std::string &amp; , conf_id: const std::string &amp; ) std::string</text>
 <text x="64808" y="4891" fill="#000000" font-family="Arial" font-size="10">+ peerAnsweredCall (call: Call &amp; ) void</text>
 <text x="64808" y="4907" fill="#000000" font-family="Arial" font-size="10">+ peerHungupCall (call: Call &amp; ) void</text>
 <text x="64808" y="4923" fill="#000000" font-family="Arial" font-size="10">+ peerRingingCall (call: Call &amp; ) void</text>
 <text x="64808" y="4939" fill="#000000" font-family="Arial" font-size="10">+ playDtmf (code: char ) void</text>
 <text x="64808" y="4955" fill="#000000" font-family="Arial" font-size="10">+ playRingtone (accountID: const std::string &amp; ) void</text>
 <text x="64808" y="4971" fill="#000000" font-family="Arial" font-size="10">+ playTone () void</text>
 <text x="64808" y="4987" fill="#000000" font-family="Arial" font-size="10">+ playToneWithMessage () void</text>
 <text x="64808" y="5003" fill="#000000" font-family="Arial" font-size="10">+ pollEvents () void</text>
 <text x="64808" y="5019" fill="#000000" font-family="Arial" font-size="10">+ recordingPlaybackSeek (value: const double ) void</text>
 <text x="64808" y="5035" fill="#000000" font-family="Arial" font-size="10">+ refuseCall (id: const std::string &amp; ) bool</text>
 <text x="64808" y="5051" fill="#000000" font-family="Arial" font-size="10">+ registerEventHandler (handlerId: uintptr_t , handler: EventHandler ) void</text>
 <text x="64808" y="5067" fill="#000000" font-family="Arial" font-size="10">+ removeAccount (accountID: const std::string &amp; , flush: bool ) void</text>
 <text x="64808" y="5083" fill="#000000" font-family="Arial" font-size="10">+ removeAudio (call: Call &amp; ) void</text>
 <text x="64808" y="5099" fill="#000000" font-family="Arial" font-size="10">+ removeConference (conference_id: const std::string &amp; ) void</text>
 <text x="64808" y="5115" fill="#000000" font-family="Arial" font-size="10">+ removeParticipant (call_id: const std::string &amp; ) void</text>
 <text x="64808" y="5131" fill="#000000" font-family="Arial" font-size="10">+ ringback () void</text>
 <text x="64808" y="5147" fill="#000000" font-family="Arial" font-size="10">+ ringtoneEnabled (id: const std::string &amp; ) void</text>
 <text x="64808" y="5163" fill="#000000" font-family="Arial" font-size="10">+ saveConfig () void</text>
 <text x="64808" y="5179" fill="#000000" font-family="Arial" font-size="10">+ scheduleTask (std: const , when: std::chrono::steady_clock::time_point ) std::shared_ptr</text>
 <text x="64808" y="5195" fill="#000000" font-family="Arial" font-size="10">+ scheduleTask (task: const std::shared_ptr &amp; , when: std::chrono::steady_clock::time_point ) void</text>
 <text x="64808" y="5211" fill="#000000" font-family="Arial" font-size="10">+ sendCallTextMessage (callID: const std::string &amp; , messages: const std::map &amp; , from: const std::string &amp; , isMixed: bool ) void</text>
 <text x="64808" y="5227" fill="#000000" font-family="Arial" font-size="10">+ sendRegister (accountId: const std::string &amp; , enable: bool ) void</text>
 <text x="64808" y="5243" fill="#000000" font-family="Arial" font-size="10">+ sendTextMessage (accountID: const std::string &amp; , to: const std::string &amp; , payloads: const std::map &amp; ) uint64_t</text>
 <text x="64808" y="5259" fill="#000000" font-family="Arial" font-size="10">+ setAGCState (enabled: bool ) void</text>
 <text x="64808" y="5275" fill="#000000" font-family="Arial" font-size="10">+ setAccountActive (accountID: const std::string &amp; , active: bool ) void</text>
 <text x="64808" y="5291" fill="#000000" font-family="Arial" font-size="10">+ setAccountDetails (accountID: const std::string &amp; , details: const std::map &amp; ) void</text>
 <text x="64808" y="5307" fill="#000000" font-family="Arial" font-size="10">+ setAccountsOrder (order: const std::string &amp; ) void</text>
 <text x="64808" y="5323" fill="#000000" font-family="Arial" font-size="10">+ setAudioDevice (index: int , streamType: DeviceType ) void</text>
 <text x="64808" y="5339" fill="#000000" font-family="Arial" font-size="10">+ setAudioManager (api: const std::string &amp; ) bool</text>
 <text x="64808" y="5355" fill="#000000" font-family="Arial" font-size="10">+ setAudioPlugin (audioPlugin: const std::string &amp; ) void</text>
 <text x="64808" y="5371" fill="#000000" font-family="Arial" font-size="10">+ setAutoAnswer (enable: bool ) void</text>
 <text x="64808" y="5387" fill="#000000" font-family="Arial" font-size="10">+ setHistoryLimit (days: int ) void</text>
 <text x="64808" y="5403" fill="#000000" font-family="Arial" font-size="10">+ setIsAlwaysRecording (isAlwaysRec: bool ) void</text>
 <text x="64808" y="5419" fill="#000000" font-family="Arial" font-size="10">+ setNoiseSuppressState (state: bool ) void</text>
 <text x="64808" y="5435" fill="#000000" font-family="Arial" font-size="10">+ startAudioDriverStream () void</text>
 <text x="64808" y="5451" fill="#000000" font-family="Arial" font-size="10">+ startHidden () void</text>
 <text x="64808" y="5467" fill="#000000" font-family="Arial" font-size="10">+ startRecordedFilePlayback (std: const ) bool</text>
 <text x="64808" y="5483" fill="#000000" font-family="Arial" font-size="10">+ startVoiceMessageNotification (accountId: const std::string &amp; , nb_msg: int ) void</text>
 <text x="64808" y="5499" fill="#000000" font-family="Arial" font-size="10">+ stopRecordedFilePlayback (std: const ) void</text>
 <text x="64808" y="5515" fill="#000000" font-family="Arial" font-size="10">+ stopTone () void</text>
 <text x="64808" y="5531" fill="#000000" font-family="Arial" font-size="10">+ switchInput (callid: const std::string &amp; , res: const std::string &amp; ) bool</text>
 <text x="64808" y="5547" fill="#000000" font-family="Arial" font-size="10">+ testAccountICEInitialization (accountID: const std::string &amp; ) std::map</text>
 <text x="64808" y="5563" fill="#000000" font-family="Arial" font-size="10">+ toggleRecordingCall (id: const std::string &amp; ) bool</text>
 <text x="64808" y="5579" fill="#000000" font-family="Arial" font-size="10">+ transferCall (callId: const std::string &amp; , to: const std::string &amp; ) bool</text>
 <text x="64808" y="5595" fill="#000000" font-family="Arial" font-size="10">+ transferFailed () void</text>
 <text x="64808" y="5611" fill="#000000" font-family="Arial" font-size="10">+ transferSucceeded () void</text>
 <text x="64808" y="5627" fill="#000000" font-family="Arial" font-size="10">+ unHoldConference (id: const std::string &amp; ) bool</text>
 <text x="64808" y="5643" fill="#000000" font-family="Arial" font-size="10">+ unregisterEventHandler (handlerId: uintptr_t ) void</text>
 <text x="64808" y="5659" fill="#000000" font-family="Arial" font-size="10">+ ~Manager () </text>
 <text x="64808" y="5675" fill="#000000" font-family="Arial" font-size="10">+ getAccount (accountID: const std::string &amp; ) std::shared_ptr</text>
 <text x="64808" y="5691" fill="#000000" font-family="Arial" font-size="10">+ getAccountDetails (accountID: const std::string &amp; ) std::map</text>
 <text x="64808" y="5707" fill="#000000" font-family="Arial" font-size="10">+ getAccountList () std::vector</text>
 <text x="64808" y="5723" fill="#000000" font-family="Arial" font-size="10">+ getAudioManager () std::string</text>
 <text x="64808" y="5739" fill="#000000" font-family="Arial" font-size="10">+ getCallFromCallID (callID: const std::string &amp; ) std::shared_ptr</text>
 <text x="64808" y="5755" fill="#000000" font-family="Arial" font-size="10">+ getCallList () std::vector</text>
 <text x="64808" y="5771" fill="#000000" font-family="Arial" font-size="10">+ getConferenceDetails (callID: const std::string &amp; ) std::map</text>
 <text x="64808" y="5787" fill="#000000" font-family="Arial" font-size="10">+ getConferenceList () std::vector</text>
 <text x="64808" y="5803" fill="#000000" font-family="Arial" font-size="10">+ getCurrentAudioOutputPlugin () std::string</text>
 <text x="64808" y="5819" fill="#000000" font-family="Arial" font-size="10">+ getCurrentCall () std::shared_ptr</text>
 <text x="64808" y="5835" fill="#000000" font-family="Arial" font-size="10">+ getCurrentCallId () const std::string</text>
 <text x="64808" y="5851" fill="#000000" font-family="Arial" font-size="10">+ getDisplayNames (confID: const std::string &amp; ) std::vector</text>
 <text x="64808" y="5867" fill="#000000" font-family="Arial" font-size="10">+ getHistoryLimit () int</text>
 <text x="64808" y="5883" fill="#000000" font-family="Arial" font-size="10">+ getIsAlwaysRecording () bool</text>
 <text x="64808" y="5899" fill="#000000" font-family="Arial" font-size="10">+ getNoiseSuppressState () bool</text>
 <text x="64808" y="5915" fill="#000000" font-family="Arial" font-size="10">+ getParticipantList (confID: const std::string &amp; ) std::vector</text>
 <text x="64808" y="5931" fill="#000000" font-family="Arial" font-size="10">+ getVolatileAccountDetails (accountID: const std::string &amp; ) std::map</text>
 <text x="64808" y="5947" fill="#000000" font-family="Arial" font-size="10">+ hasCurrentCall () bool</text>
 <text x="64808" y="5963" fill="#000000" font-family="Arial" font-size="10">+ isAGCEnabled () bool</text>
 <text x="64808" y="5979" fill="#000000" font-family="Arial" font-size="10">+ isConference (id: const std::string &amp; ) bool</text>
 <text x="64808" y="5995" fill="#000000" font-family="Arial" font-size="10">+ isCurrentCall (call: const Call &amp; ) bool</text>
 <text x="64808" y="6011" fill="#000000" font-family="Arial" font-size="10">+ loadAccountOrder () std::vector</text>
 <text x="64808" y="6027" fill="#000000" font-family="Arial" font-size="10">- addWaitingCall (id: const std::string &amp; ) void</text>
 <text x="64808" y="6043" fill="#000000" font-family="Arial" font-size="10">- audiodriver_ () std::shared_ptr</text>
 <text x="64808" y="6059" fill="#000000" font-family="Arial" font-size="10">- autoAnswer_ () std::atomic_bool</text>
 <text x="64808" y="6075" fill="#000000" font-family="Arial" font-size="10">- getCurrentDeviceIndex (type: DeviceType ) int</text>
 <text x="64808" y="6091" fill="#000000" font-family="Arial" font-size="10">- loadAccountMap (node: const YAML::Node &amp; ) int</text>
 <text x="64808" y="6107" fill="#000000" font-family="Arial" font-size="10">- parseConfiguration () bool</text>
 <text x="64808" y="6123" fill="#000000" font-family="Arial" font-size="10">- playATone (toneId: Tone::TONEID ) void</text>
 <text x="64808" y="6139" fill="#000000" font-family="Arial" font-size="10">- processRemainingParticipants (conf: Conference &amp; ) void</text>
 <text x="64808" y="6155" fill="#000000" font-family="Arial" font-size="10">- removeAccounts () void</text>
 <text x="64808" y="6171" fill="#000000" font-family="Arial" font-size="10">- removeWaitingCall (id: const std::string &amp; ) void</text>
 <text x="64808" y="6187" fill="#000000" font-family="Arial" font-size="10">- switchCall (id: const std::string &amp; ) void</text>
 <text x="64808" y="6203" fill="#000000" font-family="Arial" font-size="10">- switchCall (call: const std::shared_ptr &amp; ) void</text>
 <text x="64808" y="6219" fill="#000000" font-family="Arial" font-size="10">- unsetCurrentCall () void</text>
 <text x="64808" y="6235" fill="#000000" font-family="Arial" font-size="10">- updateAudioFile (file: const std::string &amp; , sampleRate: int ) void</text>
 <text x="64808" y="6251" fill="#000000" font-family="Arial" font-size="10">- retrieveConfigPath () std::string</text>
 <polygon points="31690,4941 31690,4869 31943,4869 31943,4941 31690,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="31690,4893 31943,4893" stroke="#0000ff" fill="none"/>
 <polyline points="31690,4917 31943,4917" stroke="#0000ff" fill="none"/>
 <text x="31770" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::MatchError</text>
 <text x="31814" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="31698" y="4931" fill="#000000" font-family="Arial" font-size="10">+ MatchError (error: const std::string &amp; ) </text>
 <polyline points="31814,4869 31807,4765 31795,4605 31781,4404 31765,4175 31748,3931 31731,3686 31715,3454 31700,3248 31689,3082 31681,2969" stroke="#CC0044" fill="none"/>
 <polygon points="31678,2969 31680,2959 31685,2969 31678,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="65583,4957 65583,4853 65694,4853 65694,4957 65583,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="65583,4877 65694,4877" stroke="#0000ff" fill="none"/>
 <polyline points="65583,4933 65694,4933" stroke="#0000ff" fill="none"/>
 <text x="65591" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::MatchRank</text>
 <text x="65591" y="4891" fill="#000000" font-family="Arial" font-size="10">- FULL</text>
 <text x="65591" y="4907" fill="#000000" font-family="Arial" font-size="10">- NONE</text>
 <text x="65591" y="4923" fill="#000000" font-family="Arial" font-size="10">- PARTIAL</text>
 <text x="65636" y="4947" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="65712,4957 65712,4853 65932,4853 65932,4957 65712,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="65712,4877 65932,4877" stroke="#0000ff" fill="none"/>
 <polyline points="65712,4901 65932,4901" stroke="#0000ff" fill="none"/>
 <text x="65782" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::Matrix0D</text>
 <text x="65820" y="4891" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="65720" y="4915" fill="#000000" font-family="Arial" font-size="10">+ Matrix0D () </text>
 <text x="65720" y="4931" fill="#000000" font-family="Arial" font-size="10">+ begin () Matrix0D::EnumClassIter</text>
 <text x="65720" y="4947" fill="#000000" font-family="Arial" font-size="10">+ end () Matrix0D::EnumClassIter</text>
 <polygon points="65950,4997 65950,4813 66232,4813 66232,4997 65950,4997" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="65950,4837 66232,4837" stroke="#0000ff" fill="none"/>
 <polyline points="65950,4877 66232,4877" stroke="#0000ff" fill="none"/>
 <text x="66051" y="4827" fill="#000000" font-family="Arial" font-size="10">ring::Matrix1D</text>
 <text x="65958" y="4851" fill="#000000" font-family="Arial" font-size="10">- reverseMapping_: std::map</text>
 <text x="65958" y="4867" fill="#000000" font-family="Arial" font-size="10">- data_: const std::vector</text>
 <text x="65958" y="4891" fill="#000000" font-family="Arial" font-size="10">+ setReverseMapping (names: Matrix1D ) void</text>
 <text x="65958" y="4907" fill="#000000" font-family="Arial" font-size="10">+ Matrix1D (std::initializer_list) </text>
 <text x="65958" y="4923" fill="#000000" font-family="Arial" font-size="10">+ begin () Matrix1D::EnumClassIter</text>
 <text x="65958" y="4939" fill="#000000" font-family="Arial" font-size="10">+ end () Matrix1D::EnumClassIter</text>
 <text x="65958" y="4955" fill="#000000" font-family="Arial" font-size="10">+ operator[] (v: Row ) Value</text>
 <text x="65958" y="4971" fill="#000000" font-family="Arial" font-size="10">+ fromValue (value: const Value &amp; ) Row</text>
 <text x="65958" y="4987" fill="#000000" font-family="Arial" font-size="10">+ operator[] (v: Row ) const Value</text>
 <polygon points="66250,5213 66250,4597 66922,4597 66922,5213 66250,5213" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="66250,4621 66922,4621" stroke="#0000ff" fill="none"/>
 <polyline points="66250,4805 66922,4805" stroke="#0000ff" fill="none"/>
 <text x="66530" y="4611" fill="#000000" font-family="Arial" font-size="10">ring::MediaDecoder</text>
 <text x="66258" y="4635" fill="#000000" font-family="Arial" font-size="10"># options_: AVDictionary *= nullptr</text>
 <text x="66258" y="4651" fill="#000000" font-family="Arial" font-size="10">- avStream_: AVStream *= nullptr</text>
 <text x="66258" y="4667" fill="#000000" font-family="Arial" font-size="10">- decBuff_: AudioBuffer</text>
 <text x="66258" y="4683" fill="#000000" font-family="Arial" font-size="10">- decoderCtx_: AVCodecContext *= nullptr</text>
 <text x="66258" y="4699" fill="#000000" font-family="Arial" font-size="10">- emulateRate_: bool</text>
 <text x="66258" y="4715" fill="#000000" font-family="Arial" font-size="10">- inputCtx_: AVFormatContext *= nullptr</text>
 <text x="66258" y="4731" fill="#000000" font-family="Arial" font-size="10">- inputDecoder_: AVCodec *= nullptr</text>
 <text x="66258" y="4747" fill="#000000" font-family="Arial" font-size="10">- resampler_: std::unique_ptr</text>
 <text x="66258" y="4763" fill="#000000" font-family="Arial" font-size="10">- resamplingBuff_: AudioBuffer</text>
 <text x="66258" y="4779" fill="#000000" font-family="Arial" font-size="10">- startTime_: int64_t</text>
 <text x="66258" y="4795" fill="#000000" font-family="Arial" font-size="10">- streamIndex_: int= -1</text>
 <text x="66258" y="4819" fill="#000000" font-family="Arial" font-size="10">+ MediaDecoder () </text>
 <text x="66258" y="4835" fill="#000000" font-family="Arial" font-size="10">+ MediaDecoder () </text>
 <text x="66258" y="4851" fill="#000000" font-family="Arial" font-size="10">+ decode (result: VideoFrame &amp; ) MediaDecoder::Status</text>
 <text x="66258" y="4867" fill="#000000" font-family="Arial" font-size="10">+ decode (decodedFrame: const AudioFrame &amp; ) MediaDecoder::Status</text>
 <text x="66258" y="4883" fill="#000000" font-family="Arial" font-size="10">+ emulateRate () void</text>
 <text x="66258" y="4899" fill="#000000" font-family="Arial" font-size="10">+ flush (result: VideoFrame &amp; ) MediaDecoder::Status</text>
 <text x="66258" y="4915" fill="#000000" font-family="Arial" font-size="10">+ openInput (params: const DeviceParams &amp; ) int</text>
 <text x="66258" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator= () MediaDecoder &amp;</text>
 <text x="66258" y="4947" fill="#000000" font-family="Arial" font-size="10">+ setIOContext (ioctx: MediaIOHandle *) void</text>
 <text x="66258" y="4963" fill="#000000" font-family="Arial" font-size="10">+ setInterruptCallback (cb: int (*) (void *) , opaque: void *) void</text>
 <text x="66258" y="4979" fill="#000000" font-family="Arial" font-size="10">+ setOptions (options: const std::map &amp; ) void</text>
 <text x="66258" y="4995" fill="#000000" font-family="Arial" font-size="10">+ setupFromAudioData (format: const AudioFormat ) int</text>
 <text x="66258" y="5011" fill="#000000" font-family="Arial" font-size="10">+ setupFromVideoData () int</text>
 <text x="66258" y="5027" fill="#000000" font-family="Arial" font-size="10">+ writeToRingBuffer (decodedFrame: const AudioFrame &amp; , rb: RingBuffer &amp; , outFormat: const AudioFormat ) void</text>
 <text x="66258" y="5043" fill="#000000" font-family="Arial" font-size="10">+ ~MediaDecoder () </text>
 <text x="66258" y="5059" fill="#000000" font-family="Arial" font-size="10">+ getDecoderName () std::string</text>
 <text x="66258" y="5075" fill="#000000" font-family="Arial" font-size="10">+ getFps () rational</text>
 <text x="66258" y="5091" fill="#000000" font-family="Arial" font-size="10">+ getHeight () int</text>
 <text x="66258" y="5107" fill="#000000" font-family="Arial" font-size="10">+ getPixelFormat () int</text>
 <text x="66258" y="5123" fill="#000000" font-family="Arial" font-size="10">+ getWidth () int</text>
 <text x="66258" y="5139" fill="#000000" font-family="Arial" font-size="10">- correctPixFmt (input_pix_fmt: int ) int</text>
 <text x="66258" y="5155" fill="#000000" font-family="Arial" font-size="10">- extract (map: const std::map &amp; , key: const std::string &amp; ) void</text>
 <text x="66258" y="5171" fill="#000000" font-family="Arial" font-size="10">- jitterBufferMaxDelay_ () const unsigned</text>
 <text x="66258" y="5187" fill="#000000" font-family="Arial" font-size="10">- jitterBufferMaxSize_ () const unsigned</text>
 <text x="66258" y="5203" fill="#000000" font-family="Arial" font-size="10">- getTimeBase () rational</text>
 <polygon points="66940,5029 66940,4781 67120,4781 67120,5029 66940,5029" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="66940,4805 67120,4805" stroke="#0000ff" fill="none"/>
 <polyline points="66940,4829 67120,4829" stroke="#0000ff" fill="none"/>
 <text x="66980" y="4795" fill="#000000" font-family="Arial" font-size="10">MediaDescription</text>
 <text x="67028" y="4819" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="66948" y="4843" fill="#000000" font-family="Arial" font-size="10">+ addr () IpAddr</text>
 <text x="66948" y="4859" fill="#000000" font-family="Arial" font-size="10">+ bitrate () unsigned</text>
 <text x="66948" y="4875" fill="#000000" font-family="Arial" font-size="10">+ codec () std::shared_ptr</text>
 <text x="66948" y="4891" fill="#000000" font-family="Arial" font-size="10">+ crypto () CryptoAttribute</text>
 <text x="66948" y="4907" fill="#000000" font-family="Arial" font-size="10">+ enabled () bool</text>
 <text x="66948" y="4923" fill="#000000" font-family="Arial" font-size="10">+ frame_size () unsigned</text>
 <text x="66948" y="4939" fill="#000000" font-family="Arial" font-size="10">+ holding () bool</text>
 <text x="66948" y="4955" fill="#000000" font-family="Arial" font-size="10">+ parameters () std::string</text>
 <text x="66948" y="4971" fill="#000000" font-family="Arial" font-size="10">+ payload_type () unsigned</text>
 <text x="66948" y="4987" fill="#000000" font-family="Arial" font-size="10">+ receiving_sdp () std::string</text>
 <text x="66948" y="5003" fill="#000000" font-family="Arial" font-size="10">+ rtp_clockrate () unsigned</text>
 <text x="66948" y="5019" fill="#000000" font-family="Arial" font-size="10">+ type () MediaType</text>
 <polygon points="67138,5237 67138,4573 67642,4573 67642,5237 67138,5237" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="67138,4597 67642,4597" stroke="#0000ff" fill="none"/>
 <polyline points="67138,4829 67642,4829" stroke="#0000ff" fill="none"/>
 <text x="67334" y="4587" fill="#000000" font-family="Arial" font-size="10">ring::MediaEncoder</text>
 <text x="67146" y="4611" fill="#000000" font-family="Arial" font-size="10"># codec_: std::shared_ptr</text>
 <text x="67146" y="4627" fill="#000000" font-family="Arial" font-size="10"># device_: DeviceParams</text>
 <text x="67146" y="4643" fill="#000000" font-family="Arial" font-size="10"># options_: AVDictionary *= nullptr</text>
 <text x="67146" y="4659" fill="#000000" font-family="Arial" font-size="10">- encoderCtx_: AVCodecContext *= nullptr</text>
 <text x="67146" y="4675" fill="#000000" font-family="Arial" font-size="10">- is_muted: bool</text>
 <text x="67146" y="4691" fill="#000000" font-family="Arial" font-size="10">- outputCtx_: AVFormatContext *= nullptr</text>
 <text x="67146" y="4707" fill="#000000" font-family="Arial" font-size="10">- outputEncoder_: AVCodec *= nullptr</text>
 <text x="67146" y="4723" fill="#000000" font-family="Arial" font-size="10">- scaledFrameBufferSize_: int</text>
 <text x="67146" y="4739" fill="#000000" font-family="Arial" font-size="10">- scaledFrameBuffer_: std::vector</text>
 <text x="67146" y="4755" fill="#000000" font-family="Arial" font-size="10">- scaledFrame_: VideoFrame</text>
 <text x="67146" y="4771" fill="#000000" font-family="Arial" font-size="10">- scaler_: video::VideoScaler</text>
 <text x="67146" y="4787" fill="#000000" font-family="Arial" font-size="10">- sent_samples: unsigned</text>
 <text x="67146" y="4803" fill="#000000" font-family="Arial" font-size="10">- streamIndex_: int= -1</text>
 <text x="67146" y="4819" fill="#000000" font-family="Arial" font-size="10">- stream_: AVStream *= nullptr</text>
 <text x="67146" y="4843" fill="#000000" font-family="Arial" font-size="10">+ MediaEncoder () </text>
 <text x="67146" y="4859" fill="#000000" font-family="Arial" font-size="10">+ MediaEncoder () </text>
 <text x="67146" y="4875" fill="#000000" font-family="Arial" font-size="10">+ encode (input: VideoFrame &amp; , is_keyframe: bool , frame_number: int64_t ) int</text>
 <text x="67146" y="4891" fill="#000000" font-family="Arial" font-size="10">+ encode_audio (buffer: const AudioBuffer &amp; ) int</text>
 <text x="67146" y="4907" fill="#000000" font-family="Arial" font-size="10">+ flush () int</text>
 <text x="67146" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getLastSeqValue () uint16_t</text>
 <text x="67146" y="4939" fill="#000000" font-family="Arial" font-size="10">+ openOutput (filename: const char *, args: const ring::MediaDescription &amp; ) void</text>
 <text x="67146" y="4955" fill="#000000" font-family="Arial" font-size="10">+ operator= () MediaEncoder &amp;</text>
 <text x="67146" y="4971" fill="#000000" font-family="Arial" font-size="10">+ print_sdp () std::string</text>
 <text x="67146" y="4987" fill="#000000" font-family="Arial" font-size="10">+ setDeviceOptions (args: const DeviceParams &amp; ) void</text>
 <text x="67146" y="5003" fill="#000000" font-family="Arial" font-size="10">+ setIOContext (ioctx: const std::unique_ptr &amp; ) void</text>
 <text x="67146" y="5019" fill="#000000" font-family="Arial" font-size="10">+ setInitSeqVal (seqVal: uint16_t ) void</text>
 <text x="67146" y="5035" fill="#000000" font-family="Arial" font-size="10">+ setInterruptCallback (cb: int (*) (void *) , opaque: void *) void</text>
 <text x="67146" y="5051" fill="#000000" font-family="Arial" font-size="10">+ setMuted (isMuted: bool ) void</text>
 <text x="67146" y="5067" fill="#000000" font-family="Arial" font-size="10">+ startIO () void</text>
 <text x="67146" y="5083" fill="#000000" font-family="Arial" font-size="10">+ ~MediaEncoder () </text>
 <text x="67146" y="5099" fill="#000000" font-family="Arial" font-size="10">+ getEncoderName () std::string</text>
 <text x="67146" y="5115" fill="#000000" font-family="Arial" font-size="10">+ getHeight () int</text>
 <text x="67146" y="5131" fill="#000000" font-family="Arial" font-size="10">+ getWidth () int</text>
 <text x="67146" y="5147" fill="#000000" font-family="Arial" font-size="10">+ useCodec (codec: const ring::AccountCodecInfo *) bool</text>
 <text x="67146" y="5163" fill="#000000" font-family="Arial" font-size="10">- extractProfileLevelID (parameters: const std::string &amp; , ctx: AVCodecContext *) void</text>
 <text x="67146" y="5179" fill="#000000" font-family="Arial" font-size="10">- forcePresetX264 () void</text>
 <text x="67146" y="5195" fill="#000000" font-family="Arial" font-size="10">- prepareEncoderContext (is_video: bool ) void</text>
 <text x="67146" y="5211" fill="#000000" font-family="Arial" font-size="10">- setOptions (args: const MediaDescription &amp; ) void</text>
 <text x="67146" y="5227" fill="#000000" font-family="Arial" font-size="10">- setScaleDest (data: void *, width: int , height: int , pix_fmt: int ) void</text>
 <polygon points="12978,4941 12978,4869 13266,4869 13266,4941 12978,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="12978,4893 13266,4893" stroke="#0000ff" fill="none"/>
 <polyline points="12978,4917 13266,4917" stroke="#0000ff" fill="none"/>
 <text x="13037" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::MediaEncoderException</text>
 <text x="13120" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="12986" y="4931" fill="#000000" font-family="Arial" font-size="10">+ MediaEncoderException (msg: const char *) </text>
 <polyline points="13125,4869 13133,4765 13144,4605 13159,4404 13176,4175 13194,3931 13212,3686 13229,3454 13244,3248 13257,3082 13265,2969" stroke="#CC0044" fill="none"/>
 <polygon points="13261,2969 13265,2959 13268,2969 13261,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="67661,4989 67661,4821 68590,4821 68590,4989 67661,4989" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="67661,4845 68590,4845" stroke="#0000ff" fill="none"/>
 <polyline points="67661,4869 68590,4869" stroke="#0000ff" fill="none"/>
 <text x="68067" y="4835" fill="#000000" font-family="Arial" font-size="10">ring::MediaIOHandle</text>
 <text x="67669" y="4859" fill="#000000" font-family="Arial" font-size="10">- ctx_: AVIOContext *</text>
 <text x="67669" y="4883" fill="#000000" font-family="Arial" font-size="10">+ readCallback () </text>
 <text x="67669" y="4899" fill="#000000" font-family="Arial" font-size="10">+ MediaIOHandle (buffer_size: std::size_t , writeable: bool , read_cb: io_readcallback , write_cb: io_writecallback , seek_cb: io_seekcallback , opaque: void *) </text>
 <text x="67669" y="4915" fill="#000000" font-family="Arial" font-size="10">+ MediaIOHandle () </text>
 <text x="67669" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getContext () AVIOContext *</text>
 <text x="67669" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator= () MediaIOHandle &amp;</text>
 <text x="67669" y="4963" fill="#000000" font-family="Arial" font-size="10">+ ~MediaIOHandle () </text>
 <text x="67669" y="4979" fill="#000000" font-family="Arial" font-size="10">- buf_ () std::vector</text>
 <polygon points="68608,4941 68608,4869 68982,4869 68982,4941 68608,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="68608,4893 68982,4893" stroke="#0000ff" fill="none"/>
 <polyline points="68608,4917 68982,4917" stroke="#0000ff" fill="none"/>
 <text x="68638" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::MediaParametersChanged</text>
 <text x="68616" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;MediaParametersChanged&quot;</text>
 <text x="68793" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="69001,4965 69001,4845 69222,4845 69222,4965 69001,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="69001,4869 69222,4869" stroke="#0000ff" fill="none"/>
 <polyline points="69001,4925 69222,4925" stroke="#0000ff" fill="none"/>
 <text x="69009" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::im::MessageEngine::Message</text>
 <text x="69009" y="4883" fill="#000000" font-family="Arial" font-size="10">+ last_op: clock::time_point</text>
 <text x="69009" y="4899" fill="#000000" font-family="Arial" font-size="10">+ payloads: std::map</text>
 <text x="69009" y="4915" fill="#000000" font-family="Arial" font-size="10">+ to: std::string</text>
 <text x="69009" y="4939" fill="#000000" font-family="Arial" font-size="10">+ retried () unsigned</text>
 <text x="69009" y="4955" fill="#000000" font-family="Arial" font-size="10">+ status () MessageStatus</text>
 <polygon points="69240,5053 69240,4757 69754,4757 69754,5053 69240,5053" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="69240,4781 69754,4781" stroke="#0000ff" fill="none"/>
 <polyline points="69240,4869 69754,4869" stroke="#0000ff" fill="none"/>
 <text x="69425" y="4771" fill="#000000" font-family="Arial" font-size="10">ring::im::MessageEngine</text>
 <text x="69248" y="4795" fill="#000000" font-family="Arial" font-size="10">- MAX_RETRIES: const constexpr unsigned= 3</text>
 <text x="69248" y="4811" fill="#000000" font-family="Arial" font-size="10">- RETRY_PERIOD: const std::chrono::minutes= std::chrono::minutes(1)</text>
 <text x="69248" y="4827" fill="#000000" font-family="Arial" font-size="10">- account_: SIPAccountBase &amp;</text>
 <text x="69248" y="4843" fill="#000000" font-family="Arial" font-size="10">- messages_: std::map</text>
 <text x="69248" y="4859" fill="#000000" font-family="Arial" font-size="10">- savePath_: const std::string</text>
 <text x="69248" y="4883" fill="#000000" font-family="Arial" font-size="10">+ MessageEngine (acc: SIPAccountBase &amp; , path: const std::string &amp; ) </text>
 <text x="69248" y="4899" fill="#000000" font-family="Arial" font-size="10">+ load () void</text>
 <text x="69248" y="4915" fill="#000000" font-family="Arial" font-size="10">+ onMessageSent (t: MessageToken , success: bool ) void</text>
 <text x="69248" y="4931" fill="#000000" font-family="Arial" font-size="10">+ sendMessage (to: const std::string &amp; , payloads: const std::map &amp; ) MessageToken</text>
 <text x="69248" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getStatus (t: MessageToken ) MessageStatus</text>
 <text x="69248" y="4963" fill="#000000" font-family="Arial" font-size="10">+ isSent (t: MessageToken ) bool</text>
 <text x="69248" y="4979" fill="#000000" font-family="Arial" font-size="10">+ save () void</text>
 <text x="69248" y="4995" fill="#000000" font-family="Arial" font-size="10">- messagesMutex_ () mutable std::mutex</text>
 <text x="69248" y="5011" fill="#000000" font-family="Arial" font-size="10">- reschedule () void</text>
 <text x="69248" y="5027" fill="#000000" font-family="Arial" font-size="10">- retrySend () void</text>
 <text x="69248" y="5043" fill="#000000" font-family="Arial" font-size="10">- nextEvent () clock::time_point</text>
 <polygon points="69772,4941 69772,4869 70076,4869 70076,4941 69772,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="69772,4893 70076,4893" stroke="#0000ff" fill="none"/>
 <polyline points="69772,4917 70076,4917" stroke="#0000ff" fill="none"/>
 <text x="69821" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::DebugSignal::MessageSend</text>
 <text x="69780" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;MessageSend&quot;</text>
 <text x="69922" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="70094,4973 70094,4837 70300,4837 70300,4973 70094,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="70094,4861 70300,4861" stroke="#0000ff" fill="none"/>
 <polyline points="70094,4949 70300,4949" stroke="#0000ff" fill="none"/>
 <text x="70102" y="4851" fill="#000000" font-family="Arial" font-size="10">DRing::Account::MessageStates</text>
 <text x="70102" y="4875" fill="#000000" font-family="Arial" font-size="10">- FAILURE</text>
 <text x="70102" y="4891" fill="#000000" font-family="Arial" font-size="10">- READ</text>
 <text x="70102" y="4907" fill="#000000" font-family="Arial" font-size="10">- SENDING</text>
 <text x="70102" y="4923" fill="#000000" font-family="Arial" font-size="10">- SENT</text>
 <text x="70102" y="4939" fill="#000000" font-family="Arial" font-size="10">- UNKNOWN</text>
 <text x="70195" y="4963" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="70318,4981 70318,4829 70476,4829 70476,4981 70318,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="70318,4853 70476,4853" stroke="#0000ff" fill="none"/>
 <polyline points="70318,4957 70476,4957" stroke="#0000ff" fill="none"/>
 <text x="70326" y="4843" fill="#000000" font-family="Arial" font-size="10">ring::im::MessageStatus</text>
 <text x="70326" y="4867" fill="#000000" font-family="Arial" font-size="10">- FAILURE</text>
 <text x="70326" y="4883" fill="#000000" font-family="Arial" font-size="10">- IDLE</text>
 <text x="70326" y="4899" fill="#000000" font-family="Arial" font-size="10">- READ</text>
 <text x="70326" y="4915" fill="#000000" font-family="Arial" font-size="10">- SENDING</text>
 <text x="70326" y="4931" fill="#000000" font-family="Arial" font-size="10">- SENT</text>
 <text x="70326" y="4947" fill="#000000" font-family="Arial" font-size="10">- UNKNOWN</text>
 <text x="70395" y="4971" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="70495,4949 70495,4861 70778,4861 70778,4949 70495,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="70495,4885 70778,4885" stroke="#0000ff" fill="none"/>
 <polyline points="70495,4909 70778,4909" stroke="#0000ff" fill="none"/>
 <text x="70527" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::PaDeviceInfos::NameComparator</text>
 <text x="70503" y="4899" fill="#000000" font-family="Arial" font-size="10">- baseline: const std::string &amp;</text>
 <text x="70503" y="4923" fill="#000000" font-family="Arial" font-size="10">+ operator() (arg: const PaDeviceInfos &amp; ) bool</text>
 <text x="70503" y="4939" fill="#000000" font-family="Arial" font-size="10">+ NameComparator (ref: const std::string &amp; ) </text>
 <polygon points="70796,5069 70796,4741 71556,4741 71556,5069 70796,5069" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="70796,4765 71556,4765" stroke="#0000ff" fill="none"/>
 <polyline points="70796,4837 71556,4837" stroke="#0000ff" fill="none"/>
 <text x="71119" y="4755" fill="#000000" font-family="Arial" font-size="10">ring::NameDirectory</text>
 <text x="70804" y="4779" fill="#000000" font-family="Arial" font-size="10">- DEFAULT_SERVER_HOST: constexpr const char *const= &quot;ns.ring.cx&quot;</text>
 <text x="70804" y="4795" fill="#000000" font-family="Arial" font-size="10">- addrCache_: std::map</text>
 <text x="70804" y="4811" fill="#000000" font-family="Arial" font-size="10">- cachePath_: const std::string</text>
 <text x="70804" y="4827" fill="#000000" font-family="Arial" font-size="10">- nameCache_: std::map</text>
 <text x="70804" y="4851" fill="#000000" font-family="Arial" font-size="10">+ instance (server: const std::string &amp; ) NameDirectory &amp;</text>
 <text x="70804" y="4867" fill="#000000" font-family="Arial" font-size="10">+ instance () NameDirectory &amp;</text>
 <text x="70804" y="4883" fill="#000000" font-family="Arial" font-size="10">+ lookupUri (uri: const std::string &amp; , default_server: const std::string &amp; , cb: LookupCallback ) void</text>
 <text x="70804" y="4899" fill="#000000" font-family="Arial" font-size="10">+ NameDirectory () </text>
 <text x="70804" y="4915" fill="#000000" font-family="Arial" font-size="10">+ NameDirectory (s: const std::string &amp; ) </text>
 <text x="70804" y="4931" fill="#000000" font-family="Arial" font-size="10">+ load () void</text>
 <text x="70804" y="4947" fill="#000000" font-family="Arial" font-size="10">+ lookupAddress (addr: const std::string &amp; , cb: LookupCallback ) void</text>
 <text x="70804" y="4963" fill="#000000" font-family="Arial" font-size="10">+ lookupName (name: const std::string &amp; , cb: LookupCallback ) void</text>
 <text x="70804" y="4979" fill="#000000" font-family="Arial" font-size="10">+ registerName (addr: const std::string &amp; , name: const std::string &amp; , owner: const std::string &amp; , cb: RegistrationCallback ) void</text>
 <text x="70804" y="4995" fill="#000000" font-family="Arial" font-size="10">+ getServer () const std::string &amp;</text>
 <text x="70804" y="5011" fill="#000000" font-family="Arial" font-size="10">- loadCache () void</text>
 <text x="70804" y="5027" fill="#000000" font-family="Arial" font-size="10">- saveCache () void</text>
 <text x="70804" y="5043" fill="#000000" font-family="Arial" font-size="10">- serverHost_ () const std::string</text>
 <text x="70804" y="5059" fill="#000000" font-family="Arial" font-size="10">- validateName (name: const std::string &amp; ) bool</text>
 <polygon points="71575,4941 71575,4869 71936,4869 71936,4941 71575,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="71575,4893 71936,4893" stroke="#0000ff" fill="none"/>
 <polyline points="71575,4917 71936,4917" stroke="#0000ff" fill="none"/>
 <text x="71604" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::NameRegistrationEnded</text>
 <text x="71583" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;NameRegistrationEnded&quot;</text>
 <text x="71753" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="71954,4941 71954,4869 72301,4869 72301,4941 71954,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="71954,4893 72301,4893" stroke="#0000ff" fill="none"/>
 <polyline points="71954,4917 72301,4917" stroke="#0000ff" fill="none"/>
 <text x="71993" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::PresenceSignal::NewBuddyNotification</text>
 <text x="71962" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;NewBuddyNotification&quot;</text>
 <text x="72125" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="72319,4941 72319,4869 72632,4869 72632,4941 72319,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="72319,4893 72632,4893" stroke="#0000ff" fill="none"/>
 <polyline points="72319,4917 72632,4917" stroke="#0000ff" fill="none"/>
 <text x="72375" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::NewCallCreated</text>
 <text x="72327" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;NewCallCreated&quot;</text>
 <text x="72473" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="72650,4941 72650,4869 73052,4869 73052,4941 72650,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="72650,4893 73052,4893" stroke="#0000ff" fill="none"/>
 <polyline points="72650,4917 73052,4917" stroke="#0000ff" fill="none"/>
 <text x="72690" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::PresenceSignal::NewServerSubscriptionRequest</text>
 <text x="72658" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;NewServerSubscriptionRequest&quot;</text>
 <text x="72849" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="25824,2959 25824,2887 25965,2887 25965,2959 25824,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="25824,2911 25965,2911" stroke="#0000ff" fill="none"/>
 <polyline points="25824,2935 25965,2935" stroke="#0000ff" fill="none"/>
 <text x="25841" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::NoNetworking</text>
 <text x="25892" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="25832" y="2949" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="25893,2887 25891,2854 25889,2813 25885,2765 25880,2711 25874,2652 25866,2590 25856,2526 25844,2461 25830,2397 25814,2334 25781,2228 25743,2122 25702,2017 25658,1914 25613,1817 25570,1726 25528,1642 25490,1569 25457,1507 25430,1458" stroke="#CC0044" fill="none"/>
 <polygon points="25427,1460 25425,1449 25433,1456 25427,1460" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="25983,2959 25983,2887 26124,2887 26124,2959 25983,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="25983,2911 26124,2911" stroke="#0000ff" fill="none"/>
 <polyline points="25983,2935 26124,2935" stroke="#0000ff" fill="none"/>
 <text x="25996" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::NoUPnPDevice</text>
 <text x="26051" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="25991" y="2949" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="26053,2887 26053,2854 26052,2813 26049,2764 26046,2709 26040,2650 26032,2588 26022,2524 26009,2459 25993,2396 25973,2334 25929,2224 25878,2115 25821,2009 25761,1906 25700,1809 25639,1719 25581,1637 25527,1565 25481,1504 25443,1457" stroke="#CC0044" fill="none"/>
 <polygon points="25440,1459 25436,1449 25445,1455 25440,1459" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="73071,4965 73071,4845 73208,4845 73208,4965 73071,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="73071,4869 73208,4869" stroke="#0000ff" fill="none"/>
 <polyline points="73071,4909 73208,4909" stroke="#0000ff" fill="none"/>
 <text x="73085" y="4859" fill="#000000" font-family="Arial" font-size="10">dev::crypto::Nonce</text>
 <text x="73079" y="4883" fill="#000000" font-family="Arial" font-size="10">- m_value: Secret</text>
 <text x="73079" y="4899" fill="#000000" font-family="Arial" font-size="10">- x_value: std::mutex</text>
 <text x="73079" y="4923" fill="#000000" font-family="Arial" font-size="10">+ get () Secret</text>
 <text x="73079" y="4939" fill="#000000" font-family="Arial" font-size="10">+ Nonce () </text>
 <text x="73079" y="4955" fill="#000000" font-family="Arial" font-size="10">- next () Secret</text>
 <polygon points="73226,5053 73226,4757 73570,4757 73570,5053 73226,5053" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="73226,4781 73570,4781" stroke="#0000ff" fill="none"/>
 <polyline points="73226,4837 73570,4837" stroke="#0000ff" fill="none"/>
 <text x="73363" y="4771" fill="#000000" font-family="Arial" font-size="10">dev::Notified</text>
 <text x="73234" y="4795" fill="#000000" font-family="Arial" font-size="10">- m_cv: mutable std::condition_variable</text>
 <text x="73234" y="4811" fill="#000000" font-family="Arial" font-size="10">- m_mutex: mutable Mutex</text>
 <text x="73234" y="4827" fill="#000000" font-family="Arial" font-size="10">- m_value: N</text>
 <text x="73234" y="4851" fill="#000000" font-family="Arial" font-size="10">+ Notified () </text>
 <text x="73234" y="4867" fill="#000000" font-family="Arial" font-size="10">+ Notified (_v: N const &amp; ) </text>
 <text x="73234" y="4883" fill="#000000" font-family="Arial" font-size="10">+ Notified () </text>
 <text x="73234" y="4899" fill="#000000" font-family="Arial" font-size="10">+ operator= (_v: N const &amp; ) Notified &amp;</text>
 <text x="73234" y="4915" fill="#000000" font-family="Arial" font-size="10">+ wait (_f: F const &amp; ) void</text>
 <text x="73234" y="4931" fill="#000000" font-family="Arial" font-size="10">+ wait (_d: std::chrono::duration ) void</text>
 <text x="73234" y="4947" fill="#000000" font-family="Arial" font-size="10">+ wait (_d: std::chrono::duration , _v: N const &amp; ) void</text>
 <text x="73234" y="4963" fill="#000000" font-family="Arial" font-size="10">+ wait (_d: std::chrono::duration , _f: F const &amp; ) void</text>
 <text x="73234" y="4979" fill="#000000" font-family="Arial" font-size="10">+ waitNot (_d: std::chrono::duration , _v: N const &amp; ) void</text>
 <text x="73234" y="4995" fill="#000000" font-family="Arial" font-size="10">+ operator dev::Notified::N () </text>
 <text x="73234" y="5011" fill="#000000" font-family="Arial" font-size="10">+ wait () void</text>
 <text x="73234" y="5027" fill="#000000" font-family="Arial" font-size="10">+ wait (_v: N const &amp; ) void</text>
 <text x="73234" y="5043" fill="#000000" font-family="Arial" font-size="10">+ waitNot (_v: N const &amp; ) void</text>
 <polygon points="15435,419 15435,219 15617,219 15617,419 15435,419" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="15435,243 15617,243" stroke="#0000ff" fill="none"/>
 <polyline points="15435,283 15617,283" stroke="#0000ff" fill="none"/>
 <text x="15461" y="233" fill="#000000" font-family="Arial" font-size="10">ring::video::Observable</text>
 <text x="15443" y="257" fill="#000000" font-family="Arial" font-size="10">- mutex_: std::mutex</text>
 <text x="15443" y="273" fill="#000000" font-family="Arial" font-size="10">- observers_: std::set</text>
 <text x="15443" y="297" fill="#000000" font-family="Arial" font-size="10">+ ~Observable () Virtual</text>
 <text x="15443" y="313" fill="#000000" font-family="Arial" font-size="10">+ Observable () </text>
 <text x="15443" y="329" fill="#000000" font-family="Arial" font-size="10">+ Observable () </text>
 <text x="15443" y="345" fill="#000000" font-family="Arial" font-size="10">+ attach (o: Observer *) bool</text>
 <text x="15443" y="361" fill="#000000" font-family="Arial" font-size="10">+ detach (o: Observer *) bool</text>
 <text x="15443" y="377" fill="#000000" font-family="Arial" font-size="10">+ getObserversCount () int</text>
 <text x="15443" y="393" fill="#000000" font-family="Arial" font-size="10">+ notify (data: T ) void</text>
 <text x="15443" y="409" fill="#000000" font-family="Arial" font-size="10">+ operator= () Observable &amp;</text>
 <polygon points="15415,1441 15415,1369 15637,1369 15637,1441 15415,1441" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="15415,1393 15637,1393" stroke="#0000ff" fill="none"/>
 <polyline points="15415,1417 15637,1417" stroke="#0000ff" fill="none"/>
 <text x="15423" y="1383" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoFrameActiveWriter</text>
 <text x="15524" y="1407" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="15524" y="1431" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="15526,1369 15526,1314 15526,1239 15526,1147 15526,1044 15526,934 15526,821 15526,710 15526,605 15526,509 15526,429" stroke="#CC0044" fill="none"/>
 <polygon points="15523,429 15526,419 15530,429 15523,429" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="15635,475 15635,163 16185,163 16185,475 15635,475" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="15635,187 16185,187" stroke="#0000ff" fill="none"/>
 <polyline points="15635,211 16185,211" stroke="#0000ff" fill="none"/>
 <text x="15861" y="177" fill="#000000" font-family="Arial" font-size="10">ring::VideoFrame</text>
 <text x="15908" y="201" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="15643" y="225" fill="#000000" font-family="Arial" font-size="10">+ reset () void Virtual</text>
 <text x="15643" y="241" fill="#000000" font-family="Arial" font-size="10">+ ~VideoFrame () Virtual</text>
 <text x="15643" y="257" fill="#000000" font-family="Arial" font-size="10">+ VideoFrame () </text>
 <text x="15643" y="273" fill="#000000" font-family="Arial" font-size="10">+ noise () void</text>
 <text x="15643" y="289" fill="#000000" font-family="Arial" font-size="10">+ operator= (src: const VideoFrame &amp; ) VideoFrame &amp;</text>
 <text x="15643" y="305" fill="#000000" font-family="Arial" font-size="10">+ reserve (format: int , width: int , height: int ) void</text>
 <text x="15643" y="321" fill="#000000" font-family="Arial" font-size="10">+ setFromMemory (data: uint8_t *, format: int , width: int , height: int ) void</text>
 <text x="15643" y="337" fill="#000000" font-family="Arial" font-size="10">+ setFromMemory (data: uint8_t *, format: int , width: int , height: int , cb: std::function ) void</text>
 <text x="15643" y="353" fill="#000000" font-family="Arial" font-size="10">+ format () int</text>
 <text x="15643" y="369" fill="#000000" font-family="Arial" font-size="10">+ height () int</text>
 <text x="15643" y="385" fill="#000000" font-family="Arial" font-size="10">+ size () std::size_t</text>
 <text x="15643" y="401" fill="#000000" font-family="Arial" font-size="10">+ width () int</text>
 <text x="15643" y="417" fill="#000000" font-family="Arial" font-size="10">- allocated_ () bool</text>
 <text x="15643" y="433" fill="#000000" font-family="Arial" font-size="10">- ptr_ () uint8_t *</text>
 <text x="15643" y="449" fill="#000000" font-family="Arial" font-size="10">- releaseBufferCb_ () std::function</text>
 <text x="15643" y="465" fill="#000000" font-family="Arial" font-size="10">- setGeometry (format: int , width: int , height: int ) void</text>
 <polyline points="15538,1369 15556,1318 15580,1250 15610,1167 15643,1074 15679,974 15716,869 15753,765 15789,663 15822,569 15852,485" stroke="#CC0044" fill="none"/>
 <polygon points="15848,483 15855,475 15855,486 15848,483" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="15357,3031 15357,2815 15611,2815 15611,3031 15357,3031" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="15357,2839 15611,2839" stroke="#0000ff" fill="none"/>
 <polyline points="15357,2879 15611,2879" stroke="#0000ff" fill="none"/>
 <text x="15406" y="2829" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoGenerator</text>
 <text x="15365" y="2853" fill="#000000" font-family="Arial" font-size="10">- lastFrame_: std::shared_ptr= nullptr</text>
 <text x="15365" y="2869" fill="#000000" font-family="Arial" font-size="10">- writableFrame_: std::shared_ptr= nullptr</text>
 <text x="15365" y="2893" fill="#000000" font-family="Arial" font-size="10">+ getHeight () int Pure Virtual</text>
 <text x="15365" y="2909" fill="#000000" font-family="Arial" font-size="10">+ getPixelFormat () int Pure Virtual</text>
 <text x="15365" y="2925" fill="#000000" font-family="Arial" font-size="10">+ getWidth () int Pure Virtual</text>
 <text x="15365" y="2941" fill="#000000" font-family="Arial" font-size="10">+ VideoGenerator () </text>
 <text x="15365" y="2957" fill="#000000" font-family="Arial" font-size="10">+ obtainLastFrame () std::shared_ptr</text>
 <text x="15365" y="2973" fill="#000000" font-family="Arial" font-size="10"># flushFrames () void</text>
 <text x="15365" y="2989" fill="#000000" font-family="Arial" font-size="10"># getNewFrame () VideoFrame &amp;</text>
 <text x="15365" y="3005" fill="#000000" font-family="Arial" font-size="10"># publishFrame () void</text>
 <text x="15365" y="3021" fill="#000000" font-family="Arial" font-size="10">- mutex_ () std::mutex</text>
 <polyline points="15487,2815 15490,2709 15493,2577 15498,2426 15502,2264 15507,2097 15511,1933 15516,1780 15520,1643 15523,1531 15525,1451" stroke="#CC0044" fill="none"/>
 <polygon points="15521,1451 15525,1441 15528,1451 15521,1451" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="14782,5181 14782,4629 15164,4629 15164,5181 14782,5181" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="14782,4653 15164,4653" stroke="#0000ff" fill="none"/>
 <polyline points="14782,4805 15164,4805" stroke="#0000ff" fill="none"/>
 <text x="14910" y="4643" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoInput</text>
 <text x="14790" y="4667" fill="#000000" font-family="Arial" font-size="10">- currentResource_: std::string</text>
 <text x="14790" y="4683" fill="#000000" font-family="Arial" font-size="10">- decOpts_: DeviceParams</text>
 <text x="14790" y="4699" fill="#000000" font-family="Arial" font-size="10">- decoder_: std::unique_ptr</text>
 <text x="14790" y="4715" fill="#000000" font-family="Arial" font-size="10">- emulateRate_: bool</text>
 <text x="14790" y="4731" fill="#000000" font-family="Arial" font-size="10">- foundDecOpts_: std::promise</text>
 <text x="14790" y="4747" fill="#000000" font-family="Arial" font-size="10">- futureDecOpts_: std::shared_future</text>
 <text x="14790" y="4763" fill="#000000" font-family="Arial" font-size="10">- loop_: ThreadLoop</text>
 <text x="14790" y="4779" fill="#000000" font-family="Arial" font-size="10">- sink_: std::shared_ptr</text>
 <text x="14790" y="4795" fill="#000000" font-family="Arial" font-size="10">- switchPending_: std::atomic= {...}</text>
 <text x="14790" y="4819" fill="#000000" font-family="Arial" font-size="10">+ ~VideoInput () Virtual</text>
 <text x="14790" y="4835" fill="#000000" font-family="Arial" font-size="10">+ getHeight () int Virtual</text>
 <text x="14790" y="4851" fill="#000000" font-family="Arial" font-size="10">+ getPixelFormat () int Virtual</text>
 <text x="14790" y="4867" fill="#000000" font-family="Arial" font-size="10">+ getWidth () int Virtual</text>
 <text x="14790" y="4883" fill="#000000" font-family="Arial" font-size="10">+ VideoInput () </text>
 <text x="14790" y="4899" fill="#000000" font-family="Arial" font-size="10">+ VideoInput () </text>
 <text x="14790" y="4915" fill="#000000" font-family="Arial" font-size="10">+ operator= () VideoInput &amp;</text>
 <text x="14790" y="4931" fill="#000000" font-family="Arial" font-size="10">+ switchInput (resource: const std::string &amp; ) std::shared_future</text>
 <text x="14790" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getParams () DeviceParams</text>
 <text x="14790" y="4963" fill="#000000" font-family="Arial" font-size="10">- captureFrame () bool</text>
 <text x="14790" y="4979" fill="#000000" font-family="Arial" font-size="10">- cleanup () void</text>
 <text x="14790" y="4995" fill="#000000" font-family="Arial" font-size="10">- clearOptions () void</text>
 <text x="14790" y="5011" fill="#000000" font-family="Arial" font-size="10">- createDecoder () void</text>
 <text x="14790" y="5027" fill="#000000" font-family="Arial" font-size="10">- decOptsFound_ () std::atomic_bool</text>
 <text x="14790" y="5043" fill="#000000" font-family="Arial" font-size="10">- deleteDecoder () void</text>
 <text x="14790" y="5059" fill="#000000" font-family="Arial" font-size="10">- foundDecOpts (params: const DeviceParams &amp; ) void</text>
 <text x="14790" y="5075" fill="#000000" font-family="Arial" font-size="10">- initCamera (device: const std::string &amp; ) bool</text>
 <text x="14790" y="5091" fill="#000000" font-family="Arial" font-size="10">- initFile (path: std::string ) bool</text>
 <text x="14790" y="5107" fill="#000000" font-family="Arial" font-size="10">- initGdiGrab (params: std::string ) bool</text>
 <text x="14790" y="5123" fill="#000000" font-family="Arial" font-size="10">- initX11 (display: std::string ) bool</text>
 <text x="14790" y="5139" fill="#000000" font-family="Arial" font-size="10">- process () void</text>
 <text x="14790" y="5155" fill="#000000" font-family="Arial" font-size="10">- setup () bool</text>
 <text x="14790" y="5171" fill="#000000" font-family="Arial" font-size="10">- isCapturing () bool</text>
 <polyline points="14988,4629 14995,4541 15004,4445 15016,4342 15029,4233 15046,4121 15065,4006 15087,3889 15112,3774 15141,3659 15173,3548 15192,3492 15214,3435 15237,3379 15262,3324 15288,3270 15314,3218 15340,3168 15365,3122 15389,3079 15412,3040" stroke="#CC0044" fill="none"/>
 <polygon points="15409,3038 15417,3031 15415,3042 15409,3038" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="15762,5117 15762,4693 16262,4693 16262,5117 15762,5117" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="15762,4717 16262,4717" stroke="#0000ff" fill="none"/>
 <polyline points="15762,4869 16262,4869" stroke="#0000ff" fill="none"/>
 <text x="15947" y="4707" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoMixer</text>
 <text x="15770" y="4731" fill="#000000" font-family="Arial" font-size="10">- height_: int</text>
 <text x="15770" y="4747" fill="#000000" font-family="Arial" font-size="10">- id_: const std::string</text>
 <text x="15770" y="4763" fill="#000000" font-family="Arial" font-size="10">- lastProcess_: std::chrono::time_point</text>
 <text x="15770" y="4779" fill="#000000" font-family="Arial" font-size="10">- loop_: ThreadLoop</text>
 <text x="15770" y="4795" fill="#000000" font-family="Arial" font-size="10">- rwMutex_: rw_mutex</text>
 <text x="15770" y="4811" fill="#000000" font-family="Arial" font-size="10">- scaler_: VideoScaler</text>
 <text x="15770" y="4827" fill="#000000" font-family="Arial" font-size="10">- sink_: std::shared_ptr</text>
 <text x="15770" y="4843" fill="#000000" font-family="Arial" font-size="10">- videoLocal_: std::shared_ptr</text>
 <text x="15770" y="4859" fill="#000000" font-family="Arial" font-size="10">- width_: int</text>
 <text x="15770" y="4883" fill="#000000" font-family="Arial" font-size="10">+ ~VideoMixer () Virtual</text>
 <text x="15770" y="4899" fill="#000000" font-family="Arial" font-size="10">+ getHeight () int Virtual</text>
 <text x="15770" y="4915" fill="#000000" font-family="Arial" font-size="10">+ getPixelFormat () int Virtual</text>
 <text x="15770" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getWidth () int Virtual</text>
 <text x="15770" y="4947" fill="#000000" font-family="Arial" font-size="10">+ VideoMixer (id: const std::string &amp; ) </text>
 <text x="15770" y="4963" fill="#000000" font-family="Arial" font-size="10">+ VideoMixer () </text>
 <text x="15770" y="4979" fill="#000000" font-family="Arial" font-size="10">+ attached (Observable) void</text>
 <text x="15770" y="4995" fill="#000000" font-family="Arial" font-size="10">+ detached (Observable) void</text>
 <text x="15770" y="5011" fill="#000000" font-family="Arial" font-size="10">+ operator= () VideoMixer &amp;</text>
 <text x="15770" y="5027" fill="#000000" font-family="Arial" font-size="10">+ setDimensions (width: int , height: int ) void</text>
 <text x="15770" y="5043" fill="#000000" font-family="Arial" font-size="10">+ update (Observable, v: const std::shared_ptr &amp; ) void</text>
 <text x="15770" y="5059" fill="#000000" font-family="Arial" font-size="10">- process () void</text>
 <text x="15770" y="5075" fill="#000000" font-family="Arial" font-size="10">- render_frame (output: VideoFrame &amp; , input: const VideoFrame &amp; , index: int ) void</text>
 <text x="15770" y="5091" fill="#000000" font-family="Arial" font-size="10">- start_sink () void</text>
 <text x="15770" y="5107" fill="#000000" font-family="Arial" font-size="10">- stop_sink () void</text>
 <polyline points="15986,4693 15974,4606 15960,4508 15943,4401 15924,4287 15902,4168 15877,4044 15850,3919 15821,3793 15788,3669 15753,3548 15735,3493 15716,3437 15694,3381 15672,3326 15650,3272 15627,3219 15605,3169 15583,3122 15562,3079 15543,3040" stroke="#CC0044" fill="none"/>
 <polygon points="15540,3042 15539,3031 15546,3039 15540,3042" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="16120,2959 16120,2887 16358,2887 16358,2959 16120,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="16120,2911 16358,2911" stroke="#0000ff" fill="none"/>
 <polyline points="16120,2935 16358,2935" stroke="#0000ff" fill="none"/>
 <text x="16128" y="2901" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoFramePassiveReader</text>
 <text x="16237" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="16237" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="16036,4693 16053,4541 16074,4362 16097,4164 16121,3956 16145,3747 16168,3544 16190,3357 16208,3193 16224,3061 16234,2969" stroke="#CC0044" fill="none"/>
 <polygon points="16230,2969 16235,2959 16237,2969 16230,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="15182,5189 15182,4621 15744,4621 15744,5189 15182,5189" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="15182,4645 15744,4645" stroke="#0000ff" fill="none"/>
 <polyline points="15182,4861 15744,4861" stroke="#0000ff" fill="none"/>
 <text x="15372" y="4635" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoReceiveThread</text>
 <text x="15190" y="4659" fill="#000000" font-family="Arial" font-size="10">- args_: DeviceParams</text>
 <text x="15190" y="4675" fill="#000000" font-family="Arial" font-size="10">- demuxContext_: std::unique_ptr</text>
 <text x="15190" y="4691" fill="#000000" font-family="Arial" font-size="10">- dstHeight_: int</text>
 <text x="15190" y="4707" fill="#000000" font-family="Arial" font-size="10">- dstWidth_: int</text>
 <text x="15190" y="4723" fill="#000000" font-family="Arial" font-size="10">- id_: const std::string</text>
 <text x="15190" y="4739" fill="#000000" font-family="Arial" font-size="10">- isReset_: bool</text>
 <text x="15190" y="4755" fill="#000000" font-family="Arial" font-size="10">- loop_: ThreadLoop</text>
 <text x="15190" y="4771" fill="#000000" font-family="Arial" font-size="10">- requestKeyFrameCallback_: void (*) (const std::string &amp;)</text>
 <text x="15190" y="4787" fill="#000000" font-family="Arial" font-size="10">- restartDecoder_: std::atomic_bool</text>
 <text x="15190" y="4803" fill="#000000" font-family="Arial" font-size="10">- sdpContext_: MediaIOHandle</text>
 <text x="15190" y="4819" fill="#000000" font-family="Arial" font-size="10">- sink_: std::shared_ptr</text>
 <text x="15190" y="4835" fill="#000000" font-family="Arial" font-size="10">- stream_: std::istringstream</text>
 <text x="15190" y="4851" fill="#000000" font-family="Arial" font-size="10">- videoDecoder_: std::unique_ptr</text>
 <text x="15190" y="4875" fill="#000000" font-family="Arial" font-size="10">+ ~VideoReceiveThread () Virtual</text>
 <text x="15190" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getHeight () int Virtual</text>
 <text x="15190" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getPixelFormat () int Virtual</text>
 <text x="15190" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getWidth () int Virtual</text>
 <text x="15190" y="4939" fill="#000000" font-family="Arial" font-size="10">+ VideoReceiveThread (id: const std::string &amp; , sdp: const std::string &amp; , isReset: const bool ) </text>
 <text x="15190" y="4955" fill="#000000" font-family="Arial" font-size="10">+ VideoReceiveThread () </text>
 <text x="15190" y="4971" fill="#000000" font-family="Arial" font-size="10">+ addIOContext (socketPair: SocketPair &amp; ) void</text>
 <text x="15190" y="4987" fill="#000000" font-family="Arial" font-size="10">+ enterConference () void</text>
 <text x="15190" y="5003" fill="#000000" font-family="Arial" font-size="10">+ exitConference () void</text>
 <text x="15190" y="5019" fill="#000000" font-family="Arial" font-size="10">+ operator= () VideoReceiveThread &amp;</text>
 <text x="15190" y="5035" fill="#000000" font-family="Arial" font-size="10">+ setRequestKeyFrameCallback (cb: void (*) (const std::string &amp;) ) void</text>
 <text x="15190" y="5051" fill="#000000" font-family="Arial" font-size="10">+ startLoop () void</text>
 <text x="15190" y="5067" fill="#000000" font-family="Arial" font-size="10">+ restartDecoder () bool</text>
 <text x="15190" y="5083" fill="#000000" font-family="Arial" font-size="10">- interruptCb (data: void *) int</text>
 <text x="15190" y="5099" fill="#000000" font-family="Arial" font-size="10">- readFunction (opaque: void *, buf: uint8_t *, buf_size: int ) int</text>
 <text x="15190" y="5115" fill="#000000" font-family="Arial" font-size="10">- cleanup () void</text>
 <text x="15190" y="5131" fill="#000000" font-family="Arial" font-size="10">- decodeFrame () bool</text>
 <text x="15190" y="5147" fill="#000000" font-family="Arial" font-size="10">- openDecoder () void</text>
 <text x="15190" y="5163" fill="#000000" font-family="Arial" font-size="10">- process () void</text>
 <text x="15190" y="5179" fill="#000000" font-family="Arial" font-size="10">- setup () bool</text>
 <polyline points="15466,4621 15468,4478 15469,4317 15471,4143 15473,3963 15475,3781 15477,3603 15479,3434 15481,3281 15482,3148 15483,3041" stroke="#CC0044" fill="none"/>
 <polygon points="15479,3041 15483,3031 15486,3041 15479,3041" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="15903,1481 15903,1329 16211,1329 16211,1481 15903,1481" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="15903,1353 16211,1353" stroke="#0000ff" fill="none"/>
 <polyline points="15903,1377 16211,1377" stroke="#0000ff" fill="none"/>
 <text x="15999" y="1343" fill="#000000" font-family="Arial" font-size="10">ring::video::Observer</text>
 <text x="16055" y="1367" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="15911" y="1391" fill="#000000" font-family="Arial" font-size="10">+ attached () </text>
 <text x="15911" y="1407" fill="#000000" font-family="Arial" font-size="10">+ detached () </text>
 <text x="15911" y="1423" fill="#000000" font-family="Arial" font-size="10">+ attached (Observable *) void Virtual</text>
 <text x="15911" y="1439" fill="#000000" font-family="Arial" font-size="10">+ detached (Observable *) void Virtual</text>
 <text x="15911" y="1455" fill="#000000" font-family="Arial" font-size="10">+ ~Observer () Virtual</text>
 <text x="15911" y="1471" fill="#000000" font-family="Arial" font-size="10">+ update (Observable *, T: const ) void Pure Virtual</text>
 <polyline points="16235,2887 16226,2809 16212,2696 16195,2555 16176,2395 16156,2225 16135,2051 16114,1883 16096,1728 16080,1595 16067,1492" stroke="#CC0044" fill="none"/>
 <polygon points="16064,1492 16066,1481 16071,1491 16064,1492" stroke="#CC0044" fill="#CC0044"/>
 <polyline points="16250,2887 16280,2788 16320,2634 16365,2433 16408,2197 16441,1932 16457,1649 16450,1356 16413,1063 16339,779 16220,512 16218,508 16215,504 16213,500 16210,496 16207,492 16204,488 16201,484 16198,480 16195,476 16192,472" stroke="#CC0044" fill="none"/>
 <polygon points="16189,474 16185,465 16194,470 16189,474" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="16281,5045 16281,4765 16652,4765 16652,5045 16281,5045" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="16281,4789 16652,4789" stroke="#0000ff" fill="none"/>
 <polyline points="16281,4893 16652,4893" stroke="#0000ff" fill="none"/>
 <text x="16404" y="4779" fill="#000000" font-family="Arial" font-size="10">ring::video::SinkClient</text>
 <text x="16289" y="4803" fill="#000000" font-family="Arial" font-size="10">- frameCount_: unsigned</text>
 <text x="16289" y="4819" fill="#000000" font-family="Arial" font-size="10">- id_: const std::string</text>
 <text x="16289" y="4835" fill="#000000" font-family="Arial" font-size="10">- lastFrameDebug_: std::chrono::time_point</text>
 <text x="16289" y="4851" fill="#000000" font-family="Arial" font-size="10">- mixer_: const bool</text>
 <text x="16289" y="4867" fill="#000000" font-family="Arial" font-size="10">- scaler_: std::unique_ptr</text>
 <text x="16289" y="4883" fill="#000000" font-family="Arial" font-size="10">- target_: DRing::SinkTarget</text>
 <text x="16289" y="4907" fill="#000000" font-family="Arial" font-size="10">+ SinkClient (id: const std::string &amp; , mixer: bool ) </text>
 <text x="16289" y="4923" fill="#000000" font-family="Arial" font-size="10">+ registerTarget (target: const DRing::SinkTarget &amp; ) void</text>
 <text x="16289" y="4939" fill="#000000" font-family="Arial" font-size="10">+ setFrameSize (width: int , height: int ) void</text>
 <text x="16289" y="4955" fill="#000000" font-family="Arial" font-size="10">+ start () bool</text>
 <text x="16289" y="4971" fill="#000000" font-family="Arial" font-size="10">+ stop () bool</text>
 <text x="16289" y="4987" fill="#000000" font-family="Arial" font-size="10">+ update (Observable, frame_p: const std::shared_ptr &amp; ) void</text>
 <text x="16289" y="5003" fill="#000000" font-family="Arial" font-size="10">+ getId () const std::string &amp;</text>
 <text x="16289" y="5019" fill="#000000" font-family="Arial" font-size="10">+ openedName () std::string</text>
 <text x="16289" y="5035" fill="#000000" font-family="Arial" font-size="10">- started_ () bool</text>
 <polyline points="16450,4765 16434,4624 16414,4447 16391,4246 16366,4029 16340,3807 16315,3590 16292,3388 16272,3211 16255,3067 16244,2969" stroke="#CC0044" fill="none"/>
 <polygon points="16241,2969 16243,2959 16248,2969 16241,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="16670,5061 16670,4749 17597,4749 17597,5061 16670,5061" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="16670,4773 17597,4773" stroke="#0000ff" fill="none"/>
 <polyline points="16670,4829 17597,4829" stroke="#0000ff" fill="none"/>
 <text x="17063" y="4763" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoSender</text>
 <text x="16678" y="4787" fill="#000000" font-family="Arial" font-size="10">- frameNumber_: int64_t</text>
 <text x="16678" y="4803" fill="#000000" font-family="Arial" font-size="10">- muxContext_: std::unique_ptr= nullptr</text>
 <text x="16678" y="4819" fill="#000000" font-family="Arial" font-size="10">- videoEncoder_: std::unique_ptr= nullptr</text>
 <text x="16678" y="4843" fill="#000000" font-family="Arial" font-size="10">+ ~VideoSender () Virtual</text>
 <text x="16678" y="4859" fill="#000000" font-family="Arial" font-size="10">+ VideoSender (dest: const std::string &amp; , dev: const DeviceParams &amp; , args: const MediaDescription &amp; , socketPair: SocketPair &amp; , seqVal: const uint16_t ) </text>
 <text x="16678" y="4875" fill="#000000" font-family="Arial" font-size="10">+ VideoSender () </text>
 <text x="16678" y="4891" fill="#000000" font-family="Arial" font-size="10">+ forceKeyFrame () void</text>
 <text x="16678" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getLastSeqValue () uint16_t</text>
 <text x="16678" y="4923" fill="#000000" font-family="Arial" font-size="10">+ operator= () VideoSender &amp;</text>
 <text x="16678" y="4939" fill="#000000" font-family="Arial" font-size="10">+ setMuted (isMuted: bool ) void</text>
 <text x="16678" y="4955" fill="#000000" font-family="Arial" font-size="10">+ update (Observable, frame_p: const std::shared_ptr &amp; ) void</text>
 <text x="16678" y="4971" fill="#000000" font-family="Arial" font-size="10">+ useCodec (codec: const ring::AccountVideoCodecInfo *) bool</text>
 <text x="16678" y="4987" fill="#000000" font-family="Arial" font-size="10">- KEYFRAMES_AT_START () constexpr int</text>
 <text x="16678" y="5003" fill="#000000" font-family="Arial" font-size="10">- KEY_FRAME_PERIOD () constexpr unsigned</text>
 <text x="16678" y="5019" fill="#000000" font-family="Arial" font-size="10">- encodeAndSendVideo (input_frame: VideoFrame &amp; ) void</text>
 <text x="16678" y="5035" fill="#000000" font-family="Arial" font-size="10">- forceKeyFrame_ () std::atomic</text>
 <text x="16678" y="5051" fill="#000000" font-family="Arial" font-size="10">- keyFrameFreq_ () int</text>
 <polyline points="17093,4749 17070,4664 17041,4565 17008,4454 16971,4334 16929,4207 16882,4076 16832,3942 16778,3807 16721,3676 16660,3548 16623,3478 16582,3407 16540,3338 16496,3271 16452,3207 16410,3146 16370,3091 16333,3043 16301,3001 16274,2967" stroke="#CC0044" fill="none"/>
 <polygon points="16271,2969 16268,2959 16277,2965 16271,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="73589,4941 73589,4869 73818,4869 73818,4941 73589,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="73589,4893 73818,4893" stroke="#0000ff" fill="none"/>
 <polyline points="73589,4917 73818,4917" stroke="#0000ff" fill="none"/>
 <text x="73597" y="4883" fill="#000000" font-family="Arial" font-size="10">DBusInstance::OnNoMoreClientFunc</text>
 <text x="73701" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="73701" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="8319,5341 8319,4469 8838,4469 8838,5341 8319,5341" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="8319,4493 8838,4493" stroke="#0000ff" fill="none"/>
 <polyline points="8319,4645 8838,4645" stroke="#0000ff" fill="none"/>
 <text x="8524" y="4483" fill="#000000" font-family="Arial" font-size="10">ring::OpenSLLayer</text>
 <text x="8327" y="4507" fill="#000000" font-family="Arial" font-size="10">- audioInputDescriptor_: SLAudioInputDescriptor</text>
 <text x="8327" y="4523" fill="#000000" font-family="Arial" font-size="10">- bufs_: std::vector</text>
 <text x="8327" y="4539" fill="#000000" font-family="Arial" font-size="10">- mainRingBuffer_: std::shared_ptr</text>
 <text x="8327" y="4555" fill="#000000" font-family="Arial" font-size="10">- playCv: std::condition_variable</text>
 <text x="8327" y="4571" fill="#000000" font-family="Arial" font-size="10">- playMtx: std::mutex</text>
 <text x="8327" y="4587" fill="#000000" font-family="Arial" font-size="10">- playThread: std::thread</text>
 <text x="8327" y="4603" fill="#000000" font-family="Arial" font-size="10">- recCv: std::condition_variable</text>
 <text x="8327" y="4619" fill="#000000" font-family="Arial" font-size="10">- recMtx: std::mutex</text>
 <text x="8327" y="4635" fill="#000000" font-family="Arial" font-size="10">- recThread: std::thread</text>
 <text x="8327" y="4659" fill="#000000" font-family="Arial" font-size="10">+ startStream () void Virtual</text>
 <text x="8327" y="4675" fill="#000000" font-family="Arial" font-size="10">+ stopStream () void Virtual</text>
 <text x="8327" y="4691" fill="#000000" font-family="Arial" font-size="10">+ ~OpenSLLayer () Virtual</text>
 <text x="8327" y="4707" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceIndex (std: const , DeviceType) int Virtual</text>
 <text x="8327" y="4723" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceName (int, DeviceType) std::string Virtual</text>
 <text x="8327" y="4739" fill="#000000" font-family="Arial" font-size="10">+ getCaptureDeviceList () std::vector Virtual</text>
 <text x="8327" y="4755" fill="#000000" font-family="Arial" font-size="10">+ getPlaybackDeviceList () std::vector Virtual</text>
 <text x="8327" y="4771" fill="#000000" font-family="Arial" font-size="10">+ OpenSLLayer (pref: const AudioPreference &amp; ) </text>
 <text x="8327" y="4787" fill="#000000" font-family="Arial" font-size="10">+ OpenSLLayer () </text>
 <text x="8327" y="4803" fill="#000000" font-family="Arial" font-size="10">+ engineServicePlay (waiting: bool ) void</text>
 <text x="8327" y="4819" fill="#000000" font-family="Arial" font-size="10">+ engineServiceRec (waiting: bool ) void</text>
 <text x="8327" y="4835" fill="#000000" font-family="Arial" font-size="10">+ engineServiceRing (waiting: bool ) void</text>
 <text x="8327" y="4851" fill="#000000" font-family="Arial" font-size="10">+ init () void</text>
 <text x="8327" y="4867" fill="#000000" font-family="Arial" font-size="10">+ initAudioCapture () void</text>
 <text x="8327" y="4883" fill="#000000" font-family="Arial" font-size="10">+ initAudioEngine () void</text>
 <text x="8327" y="4899" fill="#000000" font-family="Arial" font-size="10">+ initAudioPlayback () void</text>
 <text x="8327" y="4915" fill="#000000" font-family="Arial" font-size="10">+ operator= () OpenSLLayer &amp;</text>
 <text x="8327" y="4931" fill="#000000" font-family="Arial" font-size="10">+ shutdownAudioEngine () void</text>
 <text x="8327" y="4947" fill="#000000" font-family="Arial" font-size="10">+ startAudioCapture () void</text>
 <text x="8327" y="4963" fill="#000000" font-family="Arial" font-size="10">+ startAudioPlayback () void</text>
 <text x="8327" y="4979" fill="#000000" font-family="Arial" font-size="10">+ stopAudioCapture () void</text>
 <text x="8327" y="4995" fill="#000000" font-family="Arial" font-size="10">+ stopAudioPlayback () void</text>
 <text x="8327" y="5011" fill="#000000" font-family="Arial" font-size="10">- updatePreference (pref: AudioPreference &amp; , index: int , type: DeviceType ) void Virtual</text>
 <text x="8327" y="5027" fill="#000000" font-family="Arial" font-size="10">- getIndexCapture () int Virtual</text>
 <text x="8327" y="5043" fill="#000000" font-family="Arial" font-size="10">- getIndexPlayback () int Virtual</text>
 <text x="8327" y="5059" fill="#000000" font-family="Arial" font-size="10">- getIndexRingtone () int Virtual</text>
 <text x="8327" y="5075" fill="#000000" font-family="Arial" font-size="10">- AudioIODeviceCapabilitiesItf () SLAudioIODeviceCapabilitiesItf</text>
 <text x="8327" y="5091" fill="#000000" font-family="Arial" font-size="10">- audioCaptureFillBuffer (buffer: AudioBuffer &amp; ) void</text>
 <text x="8327" y="5107" fill="#000000" font-family="Arial" font-size="10">- dbgEngineGetBufCount () uint32_t</text>
 <text x="8327" y="5123" fill="#000000" font-family="Arial" font-size="10">- dumpAvailableEngineInterfaces () void</text>
 <text x="8327" y="5139" fill="#000000" font-family="Arial" font-size="10">- engineInterface_ () SLEngineItf</text>
 <text x="8327" y="5155" fill="#000000" font-family="Arial" font-size="10">- engineObject_ () SLObjectItf</text>
 <text x="8327" y="5171" fill="#000000" font-family="Arial" font-size="10">- freePlayBufQueue_ () AudioQueue</text>
 <text x="8327" y="5187" fill="#000000" font-family="Arial" font-size="10">- freeRecBufQueue_ () AudioQueue</text>
 <text x="8327" y="5203" fill="#000000" font-family="Arial" font-size="10">- freeRingBufQueue_ () AudioQueue</text>
 <text x="8327" y="5219" fill="#000000" font-family="Arial" font-size="10">- hardwareBuffSize_ () size_t</text>
 <text x="8327" y="5235" fill="#000000" font-family="Arial" font-size="10">- hardwareFormat_ () AudioFormat</text>
 <text x="8327" y="5251" fill="#000000" font-family="Arial" font-size="10">- playBufQueue_ () AudioQueue</text>
 <text x="8327" y="5267" fill="#000000" font-family="Arial" font-size="10">- player_ () std::unique_ptr</text>
 <text x="8327" y="5283" fill="#000000" font-family="Arial" font-size="10">- recBufQueue_ () AudioQueue</text>
 <text x="8327" y="5299" fill="#000000" font-family="Arial" font-size="10">- recorder_ () std::unique_ptr</text>
 <text x="8327" y="5315" fill="#000000" font-family="Arial" font-size="10">- ringBufQueue_ () AudioQueue</text>
 <text x="8327" y="5331" fill="#000000" font-family="Arial" font-size="10">- ringtone_ () std::unique_ptr</text>
 <polyline points="8519,4469 8506,4372 8492,4270 8477,4163 8462,4054 8447,3943 8432,3832 8417,3722 8403,3614 8389,3509 8375,3409" stroke="#CC0044" fill="none"/>
 <polygon points="8371,3410 8374,3399 8378,3409 8371,3410" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="26142,2959 26142,2887 26283,2887 26283,2959 26142,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="26142,2911 26283,2911" stroke="#0000ff" fill="none"/>
 <polyline points="26142,2935 26283,2935" stroke="#0000ff" fill="none"/>
 <text x="26175" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::Overflow</text>
 <text x="26210" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="26150" y="2949" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="26214,2887 26214,2854 26214,2812 26213,2763 26210,2708 26205,2649 26197,2586 26187,2522 26173,2458 26155,2395 26132,2334 26077,2219 26012,2107 25941,1998 25864,1895 25786,1799 25708,1710 25634,1630 25566,1560 25506,1502 25457,1456" stroke="#CC0044" fill="none"/>
 <polygon points="25454,1459 25449,1449 25459,1453 25454,1459" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="24053,4941 24053,4869 24194,4869 24194,4941 24053,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="24053,4893 24194,4893" stroke="#0000ff" fill="none"/>
 <polyline points="24053,4917 24194,4917" stroke="#0000ff" fill="none"/>
 <text x="24072" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::OversizeRLP</text>
 <text x="24121" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="24061" y="4931" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="24122,4869 24118,4765 24111,4605 24103,4404 24094,4175 24084,3931 24074,3686 24065,3454 24056,3248 24050,3082 24045,2969" stroke="#CC0044" fill="none"/>
 <polygon points="24041,2969 24044,2959 24048,2969 24041,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="73836,4965 73836,4845 74078,4845 74078,4965 73836,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="73836,4869 74078,4869" stroke="#0000ff" fill="none"/>
 <polyline points="73836,4893 74078,4893" stroke="#0000ff" fill="none"/>
 <text x="73875" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::sip_utils::PJDialogLock</text>
 <text x="73844" y="4883" fill="#000000" font-family="Arial" font-size="10">- dialog_: pjsip_dialog *</text>
 <text x="73844" y="4907" fill="#000000" font-family="Arial" font-size="10">+ PJDialogLock () </text>
 <text x="73844" y="4923" fill="#000000" font-family="Arial" font-size="10">+ PJDialogLock () </text>
 <text x="73844" y="4939" fill="#000000" font-family="Arial" font-size="10">+ ~PJDialogLock () </text>
 <text x="73844" y="4955" fill="#000000" font-family="Arial" font-size="10">+ PJDialogLock (dialog: pjsip_dialog *) </text>
 <polygon points="74096,5005 74096,4805 74408,4805 74408,5005 74096,5005" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="74096,4829 74408,4829" stroke="#0000ff" fill="none"/>
 <polyline points="74096,4853 74408,4853" stroke="#0000ff" fill="none"/>
 <text x="74197" y="4819" fill="#000000" font-family="Arial" font-size="10">ring::PaDeviceInfos</text>
 <text x="74250" y="4843" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="74104" y="4867" fill="#000000" font-family="Arial" font-size="10">+ PaDeviceInfos () </text>
 <text x="74104" y="4883" fill="#000000" font-family="Arial" font-size="10">+ PaDeviceInfos (source: const pa_source_info &amp; ) </text>
 <text x="74104" y="4899" fill="#000000" font-family="Arial" font-size="10">+ PaDeviceInfos (source: const pa_sink_info &amp; ) </text>
 <text x="74104" y="4915" fill="#000000" font-family="Arial" font-size="10">+ channel_map () pa_channel_map</text>
 <text x="74104" y="4931" fill="#000000" font-family="Arial" font-size="10">+ description () std::string</text>
 <text x="74104" y="4947" fill="#000000" font-family="Arial" font-size="10">+ index () uint32_t</text>
 <text x="74104" y="4963" fill="#000000" font-family="Arial" font-size="10">+ monitor_of () uint32_t</text>
 <text x="74104" y="4979" fill="#000000" font-family="Arial" font-size="10">+ name () std::string</text>
 <text x="74104" y="4995" fill="#000000" font-family="Arial" font-size="10">+ sample_spec () pa_sample_spec</text>
 <polygon points="74426,4949 74426,4861 74664,4861 74664,4949 74426,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="74426,4885 74664,4885" stroke="#0000ff" fill="none"/>
 <polyline points="74426,4925 74664,4925" stroke="#0000ff" fill="none"/>
 <text x="74510" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::Packet</text>
 <text x="74434" y="4899" fill="#000000" font-family="Arial" font-size="10">+ data: std::unique_ptr</text>
 <text x="74434" y="4915" fill="#000000" font-family="Arial" font-size="10">+ datalen: size_t</text>
 <text x="74434" y="4939" fill="#000000" font-family="Arial" font-size="10">+ Packet (pkt: void *, size: pj_size_t ) </text>
 <polygon points="74683,4941 74683,4869 75022,4869 75022,4941 74683,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="74683,4893 75022,4893" stroke="#0000ff" fill="none"/>
 <polyline points="74683,4917 75022,4917" stroke="#0000ff" fill="none"/>
 <text x="74733" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::VideoSignal::ParametersChanged</text>
 <text x="74691" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;ParametersChanged&quot;</text>
 <text x="74850" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="75040,4941 75040,4869 75291,4869 75291,4941 75040,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="75040,4893 75291,4893" stroke="#0000ff" fill="none"/>
 <polyline points="75040,4917 75291,4917" stroke="#0000ff" fill="none"/>
 <text x="75120" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::ParseError</text>
 <text x="75163" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="75048" y="4931" fill="#000000" font-family="Arial" font-size="10">+ ParseError (error: const std::string &amp; ) </text>
 <polygon points="75109,2959 75109,2887 75221,2887 75221,2959 75109,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="75109,2911 75221,2911" stroke="#0000ff" fill="none"/>
 <polyline points="75109,2935 75221,2935" stroke="#0000ff" fill="none"/>
 <text x="75117" y="2901" fill="#000000" font-family="Arial" font-size="10">invalid_argument</text>
 <text x="75163" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="75163" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="75165,4869 75165,4765 75165,4605 75165,4404 75165,4175 75165,3931 75165,3686 75165,3454 75165,3248 75165,3082 75165,2969" stroke="#CC0044" fill="none"/>
 <polygon points="75162,2969 75165,2959 75169,2969 75162,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="75309,4941 75309,4869 75436,4869 75436,4941 75309,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="75309,4893 75436,4893" stroke="#0000ff" fill="none"/>
 <polyline points="75309,4917 75436,4917" stroke="#0000ff" fill="none"/>
 <text x="75317" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::ParticipantSet</text>
 <text x="75370" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="75370" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="75454,5061 75454,4749 75826,4749 75826,5061 75454,5061" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="75454,4773 75826,4773" stroke="#0000ff" fill="none"/>
 <polyline points="75454,4893 75826,4893" stroke="#0000ff" fill="none"/>
 <text x="75605" y="4763" fill="#000000" font-family="Arial" font-size="10">ring::Pattern</text>
 <text x="75462" y="4787" fill="#000000" font-family="Arial" font-size="10">- count_: int</text>
 <text x="75462" y="4803" fill="#000000" font-family="Arial" font-size="10">- matchGlobally_: bool</text>
 <text x="75462" y="4819" fill="#000000" font-family="Arial" font-size="10">- offset_: int [2]</text>
 <text x="75462" y="4835" fill="#000000" font-family="Arial" font-size="10">- ovector_: std::vector</text>
 <text x="75462" y="4851" fill="#000000" font-family="Arial" font-size="10">- pattern_: std::string</text>
 <text x="75462" y="4867" fill="#000000" font-family="Arial" font-size="10">- re_: pcre *</text>
 <text x="75462" y="4883" fill="#000000" font-family="Arial" font-size="10">- subject_: std::string</text>
 <text x="75462" y="4907" fill="#000000" font-family="Arial" font-size="10">+ Pattern (pattern: const std::string &amp; , matchGlobally: bool ) </text>
 <text x="75462" y="4923" fill="#000000" font-family="Arial" font-size="10">+ Pattern () </text>
 <text x="75462" y="4939" fill="#000000" font-family="Arial" font-size="10">+ group (groupName: const char *) std::string</text>
 <text x="75462" y="4955" fill="#000000" font-family="Arial" font-size="10">+ matches () bool</text>
 <text x="75462" y="4971" fill="#000000" font-family="Arial" font-size="10">+ operator= () Pattern &amp;</text>
 <text x="75462" y="4987" fill="#000000" font-family="Arial" font-size="10">+ split () std::vector</text>
 <text x="75462" y="5003" fill="#000000" font-family="Arial" font-size="10">+ updateSubject (subject: const std::string &amp; ) void</text>
 <text x="75462" y="5019" fill="#000000" font-family="Arial" font-size="10">+ ~Pattern () </text>
 <text x="75462" y="5035" fill="#000000" font-family="Arial" font-size="10">- end () size_t</text>
 <text x="75462" y="5051" fill="#000000" font-family="Arial" font-size="10">- start () size_t</text>
 <polygon points="75844,4941 75844,4869 76118,4869 76118,4941 75844,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="75844,4893 76118,4893" stroke="#0000ff" fill="none"/>
 <polyline points="75844,4917 76118,4917" stroke="#0000ff" fill="none"/>
 <text x="75900" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::PeerHold</text>
 <text x="75852" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;PeerHold&quot;</text>
 <text x="75979" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="76136,4989 76136,4821 76416,4821 76416,4989 76136,4989" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="76136,4845 76416,4845" stroke="#0000ff" fill="none"/>
 <polyline points="76136,4965 76416,4965" stroke="#0000ff" fill="none"/>
 <text x="76186" y="4835" fill="#000000" font-family="Arial" font-size="10">ring::RingAccount::PendingCall</text>
 <text x="76144" y="4859" fill="#000000" font-family="Arial" font-size="10">+ call: std::weak_ptr</text>
 <text x="76144" y="4875" fill="#000000" font-family="Arial" font-size="10">+ call_key: dht::InfoHash</text>
 <text x="76144" y="4891" fill="#000000" font-family="Arial" font-size="10">+ from: dht::InfoHash</text>
 <text x="76144" y="4907" fill="#000000" font-family="Arial" font-size="10">+ from_cert: std::shared_ptr</text>
 <text x="76144" y="4923" fill="#000000" font-family="Arial" font-size="10">+ ice_sp: std::shared_ptr</text>
 <text x="76144" y="4939" fill="#000000" font-family="Arial" font-size="10">+ listen_key: std::future</text>
 <text x="76144" y="4955" fill="#000000" font-family="Arial" font-size="10">+ start: std::chrono::steady_clock::time_point</text>
 <text x="76274" y="4979" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="76435,4941 76435,4869 76570,4869 76570,4941 76435,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="76435,4893 76570,4893" stroke="#0000ff" fill="none"/>
 <polyline points="76435,4917 76570,4917" stroke="#0000ff" fill="none"/>
 <text x="76443" y="4883" fill="#000000" font-family="Arial" font-size="10">PendingConfirmation</text>
 <text x="76500" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="76443" y="4931" fill="#000000" font-family="Arial" font-size="10">+ replied () bool</text>
 <polygon points="76588,4949 76588,4861 76889,4861 76889,4949 76588,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="76588,4885 76889,4885" stroke="#0000ff" fill="none"/>
 <polyline points="76588,4925 76889,4925" stroke="#0000ff" fill="none"/>
 <text x="76633" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::RingAccount::PendingMessage</text>
 <text x="76596" y="4899" fill="#000000" font-family="Arial" font-size="10">+ received: std::chrono::steady_clock::time_point</text>
 <text x="76596" y="4915" fill="#000000" font-family="Arial" font-size="10">+ to: dht::InfoHash</text>
 <text x="76736" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="76907,4957 76907,4853 77062,4853 77062,4957 76907,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="76907,4877 77062,4877" stroke="#0000ff" fill="none"/>
 <polyline points="76907,4933 77062,4933" stroke="#0000ff" fill="none"/>
 <text x="76948" y="4867" fill="#000000" font-family="Arial" font-size="10">PendingMsg</text>
 <text x="76915" y="4891" fill="#000000" font-family="Arial" font-size="10">+ payloads: std::map</text>
 <text x="76915" y="4907" fill="#000000" font-family="Arial" font-size="10">+ to: std::string</text>
 <text x="76915" y="4923" fill="#000000" font-family="Arial" font-size="10">+ token: MessageToken</text>
 <text x="76982" y="4947" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="77080,4957 77080,4853 77318,4853 77318,4957 77080,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="77080,4877 77318,4877" stroke="#0000ff" fill="none"/>
 <polyline points="77080,4933 77318,4933" stroke="#0000ff" fill="none"/>
 <text x="77088" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::tls::TrustStore::PermissionStatus</text>
 <text x="77088" y="4891" fill="#000000" font-family="Arial" font-size="10">- ALLOWED</text>
 <text x="77088" y="4907" fill="#000000" font-family="Arial" font-size="10">- BANNED</text>
 <text x="77088" y="4923" fill="#000000" font-family="Arial" font-size="10">- UNDEFINED</text>
 <text x="77197" y="4947" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="77337,5117 77337,4693 77924,4693 77924,5117 77337,5117" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="77337,4717 77924,4717" stroke="#0000ff" fill="none"/>
 <polyline points="77337,4757 77924,4757" stroke="#0000ff" fill="none"/>
 <text x="77573" y="4707" fill="#000000" font-family="Arial" font-size="10">ring::PluginManager</text>
 <text x="77345" y="4731" fill="#000000" font-family="Arial" font-size="10">- ObjectFactory</text>
 <text x="77345" y="4747" fill="#000000" font-family="Arial" font-size="10">- pluginApi_: RING_PluginAPI= {...}</text>
 <text x="77345" y="4771" fill="#000000" font-family="Arial" font-size="10">+ PluginManager () </text>
 <text x="77345" y="4787" fill="#000000" font-family="Arial" font-size="10">+ PluginManager () </text>
 <text x="77345" y="4803" fill="#000000" font-family="Arial" font-size="10">+ createObject (type: const std::string &amp; ) std::unique_ptr</text>
 <text x="77345" y="4819" fill="#000000" font-family="Arial" font-size="10">+ load (path: const std::string &amp; ) bool</text>
 <text x="77345" y="4835" fill="#000000" font-family="Arial" font-size="10">+ operator= () PluginManager &amp;</text>
 <text x="77345" y="4851" fill="#000000" font-family="Arial" font-size="10">+ registerObjectFactory (type: const char *, factoryData: const RING_PluginObjectFactory &amp; ) bool</text>
 <text x="77345" y="4867" fill="#000000" font-family="Arial" font-size="10">+ registerPlugin (initFunc: RING_PluginInitFunc ) bool</text>
 <text x="77345" y="4883" fill="#000000" font-family="Arial" font-size="10">+ registerService (name: const std::string &amp; , ServiceFunction) bool</text>
 <text x="77345" y="4899" fill="#000000" font-family="Arial" font-size="10">+ unRegisterService (name: const std::string &amp; ) void</text>
 <text x="77345" y="4915" fill="#000000" font-family="Arial" font-size="10">+ ~PluginManager () </text>
 <text x="77345" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getPluginAPI () const RING_PluginAPI &amp;</text>
 <text x="77345" y="4947" fill="#000000" font-family="Arial" font-size="10">- invokeService_ (api: const RING_PluginAPI *, name: const char *, data: void *) int32_t</text>
 <text x="77345" y="4963" fill="#000000" font-family="Arial" font-size="10">- registerObjectFactory_ (api: const RING_PluginAPI *, type: const char *, data: void *) int32_t</text>
 <text x="77345" y="4979" fill="#000000" font-family="Arial" font-size="10">- dynPluginMap_ () PluginMap</text>
 <text x="77345" y="4995" fill="#000000" font-family="Arial" font-size="10">- exactMatchMap_ () ObjectFactoryMap</text>
 <text x="77345" y="5011" fill="#000000" font-family="Arial" font-size="10">- exitFuncVec_ () ExitFuncVec</text>
 <text x="77345" y="5027" fill="#000000" font-family="Arial" font-size="10">- invokeService (name: const std::string &amp; , data: void *) int32_t</text>
 <text x="77345" y="5043" fill="#000000" font-family="Arial" font-size="10">- mutex_ () std::mutex</text>
 <text x="77345" y="5059" fill="#000000" font-family="Arial" font-size="10">- services_ () std::map</text>
 <text x="77345" y="5075" fill="#000000" font-family="Arial" font-size="10">- tempExactMatchMap_ () ObjectFactoryMap</text>
 <text x="77345" y="5091" fill="#000000" font-family="Arial" font-size="10">- tempWildCardVec_ () ObjectFactoryVec</text>
 <text x="77345" y="5107" fill="#000000" font-family="Arial" font-size="10">- wildCardVec_ () ObjectFactoryVec</text>
 <polygon points="8856,5045 8856,4765 9379,4765 9379,5045 8856,5045" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="8856,4789 9379,4789" stroke="#0000ff" fill="none"/>
 <polyline points="8856,4813 9379,4813" stroke="#0000ff" fill="none"/>
 <text x="9058" y="4779" fill="#000000" font-family="Arial" font-size="10">ring::PortAudioLayer</text>
 <text x="8864" y="4803" fill="#000000" font-family="Arial" font-size="10">- pimpl_: std::unique_ptr</text>
 <text x="8864" y="4827" fill="#000000" font-family="Arial" font-size="10">+ startStream () void Virtual</text>
 <text x="8864" y="4843" fill="#000000" font-family="Arial" font-size="10">+ stopStream () void Virtual</text>
 <text x="8864" y="4859" fill="#000000" font-family="Arial" font-size="10">+ updatePreference (pref: AudioPreference &amp; , index: int , type: DeviceType ) void Virtual</text>
 <text x="8864" y="4875" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceIndex (name: const std::string &amp; , type: DeviceType ) int Virtual</text>
 <text x="8864" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceName (index: int , type: DeviceType ) std::string Virtual</text>
 <text x="8864" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getCaptureDeviceList () std::vector Virtual</text>
 <text x="8864" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getIndexCapture () int Virtual</text>
 <text x="8864" y="4939" fill="#000000" font-family="Arial" font-size="10">+ getIndexPlayback () int Virtual</text>
 <text x="8864" y="4955" fill="#000000" font-family="Arial" font-size="10">+ getIndexRingtone () int Virtual</text>
 <text x="8864" y="4971" fill="#000000" font-family="Arial" font-size="10">+ getPlaybackDeviceList () std::vector Virtual</text>
 <text x="8864" y="4987" fill="#000000" font-family="Arial" font-size="10">+ ~PortAudioLayer () Pure Virtual</text>
 <text x="8864" y="5003" fill="#000000" font-family="Arial" font-size="10">+ PortAudioLayer (pref: const AudioPreference &amp; ) </text>
 <text x="8864" y="5019" fill="#000000" font-family="Arial" font-size="10">+ PortAudioLayer () </text>
 <text x="8864" y="5035" fill="#000000" font-family="Arial" font-size="10">+ operator= () PortAudioLayer &amp;</text>
 <polyline points="9112,4765 9107,4680 9099,4580 9087,4468 9071,4346 9050,4216 9023,4081 8990,3945 8950,3808 8902,3675 8846,3548 8826,3509 8805,3471 8781,3434 8757,3397 8731,3360 8705,3325 8677,3290 8649,3257 8621,3224 8593,3193" stroke="#CC0044" fill="none"/>
 <polygon points="8591,3195 8586,3185 8596,3190 8591,3195" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="77942,5029 77942,4781 79303,4781 79303,5029 77942,5029" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="77942,4805 79303,4805" stroke="#0000ff" fill="none"/>
 <polyline points="77942,4893 79303,4893" stroke="#0000ff" fill="none"/>
 <text x="78503" y="4795" fill="#000000" font-family="Arial" font-size="10">ring::PortAudioLayer::PortAudioLayerImpl</text>
 <text x="77950" y="4819" fill="#000000" font-family="Arial" font-size="10">+ indexIn_: PaDeviceIndex</text>
 <text x="77950" y="4835" fill="#000000" font-family="Arial" font-size="10">+ indexOut_: PaDeviceIndex</text>
 <text x="77950" y="4851" fill="#000000" font-family="Arial" font-size="10">+ indexRing_: PaDeviceIndex</text>
 <text x="77950" y="4867" fill="#000000" font-family="Arial" font-size="10">+ mainRingBuffer_: std::shared_ptr</text>
 <text x="77950" y="4883" fill="#000000" font-family="Arial" font-size="10">+ playbackBuff_: AudioBuffer</text>
 <text x="77950" y="4907" fill="#000000" font-family="Arial" font-size="10">+ PortAudioLayerImpl (PortAudioLayer &amp;, AudioPreference: const ) </text>
 <text x="77950" y="4923" fill="#000000" font-family="Arial" font-size="10">+ init (PortAudioLayer &amp;) void</text>
 <text x="77950" y="4939" fill="#000000" font-family="Arial" font-size="10">+ initStream (PortAudioLayer &amp;) void</text>
 <text x="77950" y="4955" fill="#000000" font-family="Arial" font-size="10">+ paInputCallback (parent: PortAudioLayer &amp; , inputBuffer: const AudioSample *, outputBuffer: AudioSample *, framesPerBuffer: unsigned long , timeInfo: const PaStreamCallbackTimeInfo *, statusFlags: PaStreamCallbackFlags ) int</text>
 <text x="77950" y="4971" fill="#000000" font-family="Arial" font-size="10">+ paOutputCallback (parent: PortAudioLayer &amp; , inputBuffer: const AudioSample *, outputBuffer: AudioSample *, framesPerBuffer: unsigned long , timeInfo: const PaStreamCallbackTimeInfo *, statusFlags: PaStreamCallbackFlags ) int</text>
 <text x="77950" y="4987" fill="#000000" font-family="Arial" font-size="10">+ ~PortAudioLayerImpl () </text>
 <text x="77950" y="5003" fill="#000000" font-family="Arial" font-size="10">+ getDeviceByType (bool) std::vector</text>
 <text x="77950" y="5019" fill="#000000" font-family="Arial" font-size="10">+ terminate () void</text>
 <polygon points="56145,2959 56145,2887 56306,2887 56306,2959 56145,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="56145,2911 56306,2911" stroke="#0000ff" fill="none"/>
 <polyline points="56145,2935 56306,2935" stroke="#0000ff" fill="none"/>
 <text x="56153" y="2901" fill="#000000" font-family="Arial" font-size="10">ring::upnp::PortMapLocal</text>
 <text x="56223" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="56223" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="56217,2887 56202,2820 56180,2726 56152,2608 56121,2474 56087,2328 56052,2176 56017,2023 55982,1876 55951,1739 55923,1619" stroke="#CC0044" fill="none"/>
 <polygon points="55919,1620 55920,1609 55926,1618 55919,1620" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="56192,1441 56192,1369 56259,1369 56259,1441 56192,1441" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="56192,1393 56259,1393" stroke="#0000ff" fill="none"/>
 <polyline points="56192,1417 56259,1417" stroke="#0000ff" fill="none"/>
 <text x="56200" y="1383" fill="#000000" font-family="Arial" font-size="10">std::map</text>
 <text x="56223" y="1407" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="56223" y="1431" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="56225,2887 56225,2804 56225,2682 56225,2531 56225,2360 56225,2178 56225,1996 56225,1823 56225,1668 56225,1541 56225,1451" stroke="#CC0044" fill="none"/>
 <polygon points="56222,1451 56225,1441 56229,1451 56222,1451" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="56277,1441 56277,1369 56339,1369 56339,1441 56277,1441" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="56277,1393 56339,1393" stroke="#0000ff" fill="none"/>
 <polyline points="56277,1417 56339,1417" stroke="#0000ff" fill="none"/>
 <text x="56285" y="1383" fill="#000000" font-family="Arial" font-size="10">uint16_t</text>
 <text x="56306" y="1407" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="56306" y="1431" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="56228,2887 56230,2853 56233,2811 56237,2760 56241,2703 56245,2641 56250,2575 56254,2506 56259,2436 56263,2366 56267,2298 56272,2199 56277,2098 56282,1997 56287,1898 56291,1803 56295,1713 56299,1631 56302,1559 56304,1498 56306,1451" stroke="#CC0044" fill="none"/>
 <polygon points="56303,1451 56307,1441 56310,1451 56303,1451" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="79321,4949 79321,4861 79453,4861 79453,4949 79321,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="79321,4885 79453,4885" stroke="#0000ff" fill="none"/>
 <polyline points="79321,4925 79453,4925" stroke="#0000ff" fill="none"/>
 <text x="79329" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::upnp::PortType</text>
 <text x="79329" y="4899" fill="#000000" font-family="Arial" font-size="10">- TCP</text>
 <text x="79329" y="4915" fill="#000000" font-family="Arial" font-size="10">- UDP</text>
 <text x="79385" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="1979,1689 1979,1121 2417,1121 2417,1689 1979,1689" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="1979,1145 2417,1145" stroke="#0000ff" fill="none"/>
 <polyline points="1979,1329 2417,1329" stroke="#0000ff" fill="none"/>
 <text x="2149" y="1135" fill="#000000" font-family="Arial" font-size="10">ring::Preferences</text>
 <text x="1987" y="1159" fill="#000000" font-family="Arial" font-size="10">+ DFT_ZONE: const char *const= &quot;North America&quot;</text>
 <text x="1987" y="1175" fill="#000000" font-family="Arial" font-size="10">+ REGISTRATION_EXPIRE_KEY: const char *const= &quot;registrationexpire&quot;</text>
 <text x="1987" y="1191" fill="#000000" font-family="Arial" font-size="10">- CONFIG_LABEL: constexpr const char *const= &quot;preferences&quot;</text>
 <text x="1987" y="1207" fill="#000000" font-family="Arial" font-size="10">- accountOrder_: std::string</text>
 <text x="1987" y="1223" fill="#000000" font-family="Arial" font-size="10">- historyLimit_: int</text>
 <text x="1987" y="1239" fill="#000000" font-family="Arial" font-size="10">- historyMaxCalls_: int</text>
 <text x="1987" y="1255" fill="#000000" font-family="Arial" font-size="10">- md5Hash_: bool</text>
 <text x="1987" y="1271" fill="#000000" font-family="Arial" font-size="10">- portNum_: int</text>
 <text x="1987" y="1287" fill="#000000" font-family="Arial" font-size="10">- registrationExpire_: int</text>
 <text x="1987" y="1303" fill="#000000" font-family="Arial" font-size="10">- searchBarDisplay_: bool</text>
 <text x="1987" y="1319" fill="#000000" font-family="Arial" font-size="10">- zoneToneChoice_: std::string</text>
 <text x="1987" y="1343" fill="#000000" font-family="Arial" font-size="10">+ serialize (out: YAML::Emitter &amp; ) void Virtual</text>
 <text x="1987" y="1359" fill="#000000" font-family="Arial" font-size="10">+ unserialize (in: const YAML::Node &amp; ) void Virtual</text>
 <text x="1987" y="1375" fill="#000000" font-family="Arial" font-size="10">+ Preferences () </text>
 <text x="1987" y="1391" fill="#000000" font-family="Arial" font-size="10">+ addAccount (newAccountID: const std::string &amp; ) void</text>
 <text x="1987" y="1407" fill="#000000" font-family="Arial" font-size="10">+ removeAccount (oldAccountID: const std::string &amp; ) void</text>
 <text x="1987" y="1423" fill="#000000" font-family="Arial" font-size="10">+ setAccountOrder (ord: const std::string &amp; ) void</text>
 <text x="1987" y="1439" fill="#000000" font-family="Arial" font-size="10">+ setHistoryLimit (lim: int ) void</text>
 <text x="1987" y="1455" fill="#000000" font-family="Arial" font-size="10">+ setHistoryMaxCalls (max: int ) void</text>
 <text x="1987" y="1471" fill="#000000" font-family="Arial" font-size="10">+ setMd5Hash (md5: bool ) void</text>
 <text x="1987" y="1487" fill="#000000" font-family="Arial" font-size="10">+ setPortNum (port: int ) void</text>
 <text x="1987" y="1503" fill="#000000" font-family="Arial" font-size="10">+ setRegistrationExpire (exp: int ) void</text>
 <text x="1987" y="1519" fill="#000000" font-family="Arial" font-size="10">+ setSearchBarDisplay (search: bool ) void</text>
 <text x="1987" y="1535" fill="#000000" font-family="Arial" font-size="10">+ setZoneToneChoice (str: const std::string &amp; ) void</text>
 <text x="1987" y="1551" fill="#000000" font-family="Arial" font-size="10">+ verifyAccountOrder (accountIDs: const std::vector &amp; ) void</text>
 <text x="1987" y="1567" fill="#000000" font-family="Arial" font-size="10">+ getAccountOrder () std::string</text>
 <text x="1987" y="1583" fill="#000000" font-family="Arial" font-size="10">+ getHistoryLimit () int</text>
 <text x="1987" y="1599" fill="#000000" font-family="Arial" font-size="10">+ getHistoryMaxCalls () int</text>
 <text x="1987" y="1615" fill="#000000" font-family="Arial" font-size="10">+ getMd5Hash () bool</text>
 <text x="1987" y="1631" fill="#000000" font-family="Arial" font-size="10">+ getPortNum () int</text>
 <text x="1987" y="1647" fill="#000000" font-family="Arial" font-size="10">+ getRegistrationExpire () int</text>
 <text x="1987" y="1663" fill="#000000" font-family="Arial" font-size="10">+ getSearchBarDisplay () bool</text>
 <text x="1987" y="1679" fill="#000000" font-family="Arial" font-size="10">+ getZoneToneChoice () std::string</text>
 <polyline points="2193,1121 2186,1061 2177,999 2165,935 2149,870 2131,806 2108,742 2080,680 2048,620 2011,564 1969,512 1940,484 1908,458 1874,435 1838,415 1801,398 1763,382 1724,369 1686,358 1648,349 1612,341" stroke="#CC0044" fill="none"/>
 <polygon points="1611,345 1602,339 1612,338 1611,345" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="79471,5277 79471,4533 80445,4533 80445,5277 79471,5277" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="79471,4557 80445,4557" stroke="#0000ff" fill="none"/>
 <polyline points="79471,4853 80445,4853" stroke="#0000ff" fill="none"/>
 <text x="79902" y="4547" fill="#000000" font-family="Arial" font-size="10">ring::PresSubClient</text>
 <text x="79479" y="4571" fill="#000000" font-family="Arial" font-size="10">- modId_: int</text>
 <text x="79479" y="4587" fill="#000000" font-family="Arial" font-size="10">- contact_: pj_str_t</text>
 <text x="79479" y="4603" fill="#000000" font-family="Arial" font-size="10">- cp_: pj_caching_pool</text>
 <text x="79479" y="4619" fill="#000000" font-family="Arial" font-size="10">- display_: pj_str_t</text>
 <text x="79479" y="4635" fill="#000000" font-family="Arial" font-size="10">- dlg_: pjsip_dialog *</text>
 <text x="79479" y="4651" fill="#000000" font-family="Arial" font-size="10">- lock_count_: int</text>
 <text x="79479" y="4667" fill="#000000" font-family="Arial" font-size="10">- lock_flag_: int</text>
 <text x="79479" y="4683" fill="#000000" font-family="Arial" font-size="10">- monitored_: pj_bool_t</text>
 <text x="79479" y="4699" fill="#000000" font-family="Arial" font-size="10">- name_: pj_str_t</text>
 <text x="79479" y="4715" fill="#000000" font-family="Arial" font-size="10">- pool_: pj_pool_t *</text>
 <text x="79479" y="4731" fill="#000000" font-family="Arial" font-size="10">- pres_: SIPPresence *</text>
 <text x="79479" y="4747" fill="#000000" font-family="Arial" font-size="10">- status_: pjsip_pres_status</text>
 <text x="79479" y="4763" fill="#000000" font-family="Arial" font-size="10">- sub_: pjsip_evsub *</text>
 <text x="79479" y="4779" fill="#000000" font-family="Arial" font-size="10">- term_code_: unsigned</text>
 <text x="79479" y="4795" fill="#000000" font-family="Arial" font-size="10">- term_reason_: pj_str_t</text>
 <text x="79479" y="4811" fill="#000000" font-family="Arial" font-size="10">- timer_: pj_timer_entry</text>
 <text x="79479" y="4827" fill="#000000" font-family="Arial" font-size="10">- uri_: pj_str_t</text>
 <text x="79479" y="4843" fill="#000000" font-family="Arial" font-size="10">- user_data_: void *</text>
 <text x="79479" y="4867" fill="#000000" font-family="Arial" font-size="10">+ PresSubClient (uri: const std::string &amp; , pres: SIPPresence *) </text>
 <text x="79479" y="4883" fill="#000000" font-family="Arial" font-size="10">+ PresSubClient () </text>
 <text x="79479" y="4899" fill="#000000" font-family="Arial" font-size="10">+ decLock () void</text>
 <text x="79479" y="4915" fill="#000000" font-family="Arial" font-size="10">+ enable (flag: bool ) void</text>
 <text x="79479" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getLineStatus () std::string</text>
 <text x="79479" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getPresence () SIPPresence *</text>
 <text x="79479" y="4963" fill="#000000" font-family="Arial" font-size="10">+ getURI () std::string</text>
 <text x="79479" y="4979" fill="#000000" font-family="Arial" font-size="10">+ incLock () void</text>
 <text x="79479" y="4995" fill="#000000" font-family="Arial" font-size="10">+ isPresent () bool</text>
 <text x="79479" y="5011" fill="#000000" font-family="Arial" font-size="10">+ isSubscribed () bool</text>
 <text x="79479" y="5027" fill="#000000" font-family="Arial" font-size="10">+ lock () bool</text>
 <text x="79479" y="5043" fill="#000000" font-family="Arial" font-size="10">+ match (b: PresSubClient *) bool</text>
 <text x="79479" y="5059" fill="#000000" font-family="Arial" font-size="10">+ operator= () PresSubClient &amp;</text>
 <text x="79479" y="5075" fill="#000000" font-family="Arial" font-size="10">+ subscribe () bool</text>
 <text x="79479" y="5091" fill="#000000" font-family="Arial" font-size="10">+ unlock () void</text>
 <text x="79479" y="5107" fill="#000000" font-family="Arial" font-size="10">+ unsubscribe () bool</text>
 <text x="79479" y="5123" fill="#000000" font-family="Arial" font-size="10">+ ~PresSubClient () </text>
 <text x="79479" y="5139" fill="#000000" font-family="Arial" font-size="10">- pres_client_evsub_on_rx_notify (sub: pjsip_evsub *, rdata: pjsip_rx_data *, p_st_code: int *, pj_str_t **p_st_text, res_hdr: pjsip_hdr *, pjsip_msg_body **p_body) void</text>
 <text x="79479" y="5155" fill="#000000" font-family="Arial" font-size="10">- pres_client_evsub_on_state (sub: pjsip_evsub *, event: pjsip_event *) void</text>
 <text x="79479" y="5171" fill="#000000" font-family="Arial" font-size="10">- pres_client_evsub_on_tsx_state (sub: pjsip_evsub *, tsx: pjsip_transaction *, event: pjsip_event *) void</text>
 <text x="79479" y="5187" fill="#000000" font-family="Arial" font-size="10">- pres_client_timer_cb (pj_timer_heap_t *, entry: pj_timer_entry *) void</text>
 <text x="79479" y="5203" fill="#000000" font-family="Arial" font-size="10">- getTermCode () unsigned</text>
 <text x="79479" y="5219" fill="#000000" font-family="Arial" font-size="10">- isTermReason (reason: const std::string &amp; ) bool</text>
 <text x="79479" y="5235" fill="#000000" font-family="Arial" font-size="10">- reportPresence () void</text>
 <text x="79479" y="5251" fill="#000000" font-family="Arial" font-size="10">- rescheduleTimer (reschedule: bool , msec: unsigned ) void</text>
 <text x="79479" y="5267" fill="#000000" font-family="Arial" font-size="10">- updateSubscription () pj_status_t</text>
 <polygon points="80464,5077 80464,4733 81063,4733 81063,5077 80464,5077" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="80464,4757 81063,4757" stroke="#0000ff" fill="none"/>
 <polyline points="80464,4877 81063,4877" stroke="#0000ff" fill="none"/>
 <text x="80706" y="4747" fill="#000000" font-family="Arial" font-size="10">ring::PresSubServer</text>
 <text x="80472" y="4771" fill="#000000" font-family="Arial" font-size="10">+ mod_presence_server: pjsip_module= {...}</text>
 <text x="80472" y="4787" fill="#000000" font-family="Arial" font-size="10">- approved_: bool</text>
 <text x="80472" y="4803" fill="#000000" font-family="Arial" font-size="10">- dlg_: pjsip_dialog *</text>
 <text x="80472" y="4819" fill="#000000" font-family="Arial" font-size="10">- expires_: int</text>
 <text x="80472" y="4835" fill="#000000" font-family="Arial" font-size="10">- pres_: SIPPresence *</text>
 <text x="80472" y="4851" fill="#000000" font-family="Arial" font-size="10">- remote_: const char *</text>
 <text x="80472" y="4867" fill="#000000" font-family="Arial" font-size="10">- sub_: pjsip_evsub *</text>
 <text x="80472" y="4891" fill="#000000" font-family="Arial" font-size="10">+ PresSubServer (pres: SIPPresence *, evsub: pjsip_evsub *, remote: const char *, d: pjsip_dialog *) </text>
 <text x="80472" y="4907" fill="#000000" font-family="Arial" font-size="10">+ PresSubServer () </text>
 <text x="80472" y="4923" fill="#000000" font-family="Arial" font-size="10">+ approve (flag: bool ) void</text>
 <text x="80472" y="4939" fill="#000000" font-family="Arial" font-size="10">+ notify () void</text>
 <text x="80472" y="4955" fill="#000000" font-family="Arial" font-size="10">+ operator= () PresSubServer &amp;</text>
 <text x="80472" y="4971" fill="#000000" font-family="Arial" font-size="10">+ pres_evsub_on_srv_state (__attribute__: (*) () , __attribute__: (*) () ) void</text>
 <text x="80472" y="4987" fill="#000000" font-family="Arial" font-size="10">+ setExpires (ms: int ) void</text>
 <text x="80472" y="5003" fill="#000000" font-family="Arial" font-size="10">+ ~PresSubServer () </text>
 <text x="80472" y="5019" fill="#000000" font-family="Arial" font-size="10">+ getExpires () int</text>
 <text x="80472" y="5035" fill="#000000" font-family="Arial" font-size="10">+ matches (s: const char *) bool</text>
 <text x="80472" y="5051" fill="#000000" font-family="Arial" font-size="10">- pres_evsub_on_srv_state (sub: pjsip_evsub *, event: pjsip_event *) void</text>
 <text x="80472" y="5067" fill="#000000" font-family="Arial" font-size="10">- pres_on_rx_subscribe_request (rdata: pjsip_rx_data *) pj_bool_t</text>
 <polygon points="81081,4941 81081,4869 81231,4869 81231,4941 81081,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="81081,4893 81231,4893" stroke="#0000ff" fill="none"/>
 <polyline points="81081,4917 81231,4917" stroke="#0000ff" fill="none"/>
 <text x="81089" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::PresenceSignal</text>
 <text x="81154" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="81154" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="81249,5029 81249,4781 81513,4781 81513,5029 81249,5029" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="81249,4805 81513,4805" stroke="#0000ff" fill="none"/>
 <polyline points="81249,4829 81513,4829" stroke="#0000ff" fill="none"/>
 <text x="81307" y="4795" fill="#000000" font-family="Arial" font-size="10">ProducerConsumerQueue</text>
 <text x="81257" y="4819" fill="#000000" font-family="Arial" font-size="10">- buffer_: std::vector</text>
 <text x="81257" y="4843" fill="#000000" font-family="Arial" font-size="10">+ front (reader: const F &amp; ) bool</text>
 <text x="81257" y="4859" fill="#000000" font-family="Arial" font-size="10">+ push (writer: const F &amp; ) bool</text>
 <text x="81257" y="4875" fill="#000000" font-family="Arial" font-size="10">+ clear () void</text>
 <text x="81257" y="4891" fill="#000000" font-family="Arial" font-size="10">+ commitWriteablePtr (ptr: T *) bool</text>
 <text x="81257" y="4907" fill="#000000" font-family="Arial" font-size="10">+ front (out_item: T *) bool</text>
 <text x="81257" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getWriteablePtr () T *</text>
 <text x="81257" y="4939" fill="#000000" font-family="Arial" font-size="10">+ pop () void</text>
 <text x="81257" y="4955" fill="#000000" font-family="Arial" font-size="10">+ push (item: const T &amp; ) bool</text>
 <text x="81257" y="4971" fill="#000000" font-family="Arial" font-size="10">+ size () uint32_t</text>
 <text x="81257" y="4987" fill="#000000" font-family="Arial" font-size="10">- alignas () </text>
 <text x="81257" y="5003" fill="#000000" font-family="Arial" font-size="10">- alignas () </text>
 <text x="81257" y="5019" fill="#000000" font-family="Arial" font-size="10">+ ProducerConsumerQueue (size: size_t ) </text>
 <polygon points="9397,5429 9397,4381 10076,4381 10076,5429 9397,5429" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="9397,4405 10076,4405" stroke="#0000ff" fill="none"/>
 <polyline points="9397,4605 10076,4605" stroke="#0000ff" fill="none"/>
 <text x="9689" y="4395" fill="#000000" font-family="Arial" font-size="10">ring::PulseLayer</text>
 <text x="9405" y="4419" fill="#000000" font-family="Arial" font-size="10">- mainRingBuffer_: std::shared_ptr</text>
 <text x="9405" y="4435" fill="#000000" font-family="Arial" font-size="10">- mainloop_: std::unique_ptr</text>
 <text x="9405" y="4451" fill="#000000" font-family="Arial" font-size="10">- micBuffer_: AudioBuffer</text>
 <text x="9405" y="4467" fill="#000000" font-family="Arial" font-size="10">- micResampleBuffer_: AudioBuffer</text>
 <text x="9405" y="4483" fill="#000000" font-family="Arial" font-size="10">- playbackBuffer_: AudioBuffer</text>
 <text x="9405" y="4499" fill="#000000" font-family="Arial" font-size="10">- playbackResampleBuffer_: AudioBuffer</text>
 <text x="9405" y="4515" fill="#000000" font-family="Arial" font-size="10">- playback_: std::unique_ptr</text>
 <text x="9405" y="4531" fill="#000000" font-family="Arial" font-size="10">- preference_: AudioPreference &amp;</text>
 <text x="9405" y="4547" fill="#000000" font-family="Arial" font-size="10">- record_: std::unique_ptr</text>
 <text x="9405" y="4563" fill="#000000" font-family="Arial" font-size="10">- ringtoneBuffer_: AudioBuffer</text>
 <text x="9405" y="4579" fill="#000000" font-family="Arial" font-size="10">- ringtoneResampleBuffer_: AudioBuffer</text>
 <text x="9405" y="4595" fill="#000000" font-family="Arial" font-size="10">- ringtone_: std::unique_ptr</text>
 <text x="9405" y="4619" fill="#000000" font-family="Arial" font-size="10">+ startStream () void Virtual</text>
 <text x="9405" y="4635" fill="#000000" font-family="Arial" font-size="10">+ stopStream () void Virtual</text>
 <text x="9405" y="4651" fill="#000000" font-family="Arial" font-size="10">+ ~PulseLayer () Virtual</text>
 <text x="9405" y="4667" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceIndex (descr: const std::string &amp; , type: DeviceType ) int Virtual</text>
 <text x="9405" y="4683" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceName (index: int , type: DeviceType ) std::string Virtual</text>
 <text x="9405" y="4699" fill="#000000" font-family="Arial" font-size="10">+ getCaptureDeviceList () std::vector Virtual</text>
 <text x="9405" y="4715" fill="#000000" font-family="Arial" font-size="10">+ getPlaybackDeviceList () std::vector Virtual</text>
 <text x="9405" y="4731" fill="#000000" font-family="Arial" font-size="10">+ PulseLayer (pref: AudioPreference &amp; ) </text>
 <text x="9405" y="4747" fill="#000000" font-family="Arial" font-size="10">+ PulseLayer () </text>
 <text x="9405" y="4763" fill="#000000" font-family="Arial" font-size="10">+ inSinkList (deviceName: const std::string &amp; ) bool</text>
 <text x="9405" y="4779" fill="#000000" font-family="Arial" font-size="10">+ inSourceList (deviceName: const std::string &amp; ) bool</text>
 <text x="9405" y="4795" fill="#000000" font-family="Arial" font-size="10">+ operator= () PulseLayer &amp;</text>
 <text x="9405" y="4811" fill="#000000" font-family="Arial" font-size="10">+ readFromMic () void</text>
 <text x="9405" y="4827" fill="#000000" font-family="Arial" font-size="10">+ ringtoneToSpeaker () void</text>
 <text x="9405" y="4843" fill="#000000" font-family="Arial" font-size="10">+ updateServerInfo () void</text>
 <text x="9405" y="4859" fill="#000000" font-family="Arial" font-size="10">+ updateSinkList () void</text>
 <text x="9405" y="4875" fill="#000000" font-family="Arial" font-size="10">+ updateSourceList () void</text>
 <text x="9405" y="4891" fill="#000000" font-family="Arial" font-size="10">+ writeToSpeaker () void</text>
 <text x="9405" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getAudioDeviceIndexByName (name: const std::string &amp; , type: DeviceType ) int</text>
 <text x="9405" y="4923" fill="#000000" font-family="Arial" font-size="10">- updatePreference (pref: AudioPreference &amp; , index: int , type: DeviceType ) void Virtual</text>
 <text x="9405" y="4939" fill="#000000" font-family="Arial" font-size="10">- getIndexCapture () int Virtual</text>
 <text x="9405" y="4955" fill="#000000" font-family="Arial" font-size="10">- getIndexPlayback () int Virtual</text>
 <text x="9405" y="4971" fill="#000000" font-family="Arial" font-size="10">- getIndexRingtone () int Virtual</text>
 <text x="9405" y="4987" fill="#000000" font-family="Arial" font-size="10">- context_changed_callback (c: pa_context *, t: pa_subscription_event_type_t , idx: uint32_t , userdata: void *) void</text>
 <text x="9405" y="5003" fill="#000000" font-family="Arial" font-size="10">- context_state_callback (c: pa_context *, user_data: void *) void</text>
 <text x="9405" y="5019" fill="#000000" font-family="Arial" font-size="10">- server_info_callback (pa_context *, i: const pa_server_info *, userdata: void *) void</text>
 <text x="9405" y="5035" fill="#000000" font-family="Arial" font-size="10">- sink_input_info_callback (c: pa_context *, i: const pa_sink_info *, eol: int , userdata: void *) void</text>
 <text x="9405" y="5051" fill="#000000" font-family="Arial" font-size="10">- source_input_info_callback (c: pa_context *, i: const pa_source_info *, eol: int , userdata: void *) void</text>
 <text x="9405" y="5067" fill="#000000" font-family="Arial" font-size="10">- contextChanged (pa_context *, pa_subscription_event_type_t, idx: uint32_t ) void</text>
 <text x="9405" y="5083" fill="#000000" font-family="Arial" font-size="10">- contextStateChanged (c: pa_context *) void</text>
 <text x="9405" y="5099" fill="#000000" font-family="Arial" font-size="10">- context_ () pa_context *</text>
 <text x="9405" y="5115" fill="#000000" font-family="Arial" font-size="10">- createStreams (c: pa_context *) void</text>
 <text x="9405" y="5131" fill="#000000" font-family="Arial" font-size="10">- defaultAudioFormat_ () AudioFormat</text>
 <text x="9405" y="5147" fill="#000000" font-family="Arial" font-size="10">- defaultSink_ () std::string</text>
 <text x="9405" y="5163" fill="#000000" font-family="Arial" font-size="10">- defaultSource_ () std::string</text>
 <text x="9405" y="5179" fill="#000000" font-family="Arial" font-size="10">- disconnectAudioStream () void</text>
 <text x="9405" y="5195" fill="#000000" font-family="Arial" font-size="10">- enumeratingSinks_ () bool</text>
 <text x="9405" y="5211" fill="#000000" font-family="Arial" font-size="10">- enumeratingSources_ () bool</text>
 <text x="9405" y="5227" fill="#000000" font-family="Arial" font-size="10">- gettingServerInfo_ () bool</text>
 <text x="9405" y="5243" fill="#000000" font-family="Arial" font-size="10">- readyCv_ () std::condition_variable</text>
 <text x="9405" y="5259" fill="#000000" font-family="Arial" font-size="10">- readyMtx_ () std::mutex</text>
 <text x="9405" y="5275" fill="#000000" font-family="Arial" font-size="10">- sinkList_ () std::vector</text>
 <text x="9405" y="5291" fill="#000000" font-family="Arial" font-size="10">- sourceList_ () std::vector</text>
 <text x="9405" y="5307" fill="#000000" font-family="Arial" font-size="10">- streamStarter_ () std::thread</text>
 <text x="9405" y="5323" fill="#000000" font-family="Arial" font-size="10">- subscribeOp_ () pa_operation *</text>
 <text x="9405" y="5339" fill="#000000" font-family="Arial" font-size="10">- waitForDeviceList () void</text>
 <text x="9405" y="5355" fill="#000000" font-family="Arial" font-size="10">- waitingDeviceList_ () bool</text>
 <text x="9405" y="5371" fill="#000000" font-family="Arial" font-size="10">- getDeviceInfos (list: const std::vector &amp; , name: const std::string &amp; ) const PaDeviceInfos *</text>
 <text x="9405" y="5387" fill="#000000" font-family="Arial" font-size="10">- getPreferredCaptureDevice () std::string</text>
 <text x="9405" y="5403" fill="#000000" font-family="Arial" font-size="10">- getPreferredPlaybackDevice () std::string</text>
 <text x="9405" y="5419" fill="#000000" font-family="Arial" font-size="10">- getPreferredRingtoneDevice () std::string</text>
 <polyline points="9698,4381 9684,4298 9667,4213 9647,4127 9623,4040 9595,3953 9563,3866 9526,3782 9485,3700 9439,3622 9387,3548 9323,3472 9252,3401 9174,3335 9093,3275 9009,3220 8923,3170 8838,3125 8754,3084 8673,3049 8596,3018" stroke="#CC0044" fill="none"/>
 <polygon points="8594,3021 8586,3014 8597,3015 8594,3021" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="81531,4965 81531,4845 81863,4845 81863,4965 81531,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="81531,4869 81863,4869" stroke="#0000ff" fill="none"/>
 <polyline points="81531,4893 81863,4893" stroke="#0000ff" fill="none"/>
 <text x="81624" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::PulseMainLoopLock</text>
 <text x="81539" y="4883" fill="#000000" font-family="Arial" font-size="10">- loop_: pa_threaded_mainloop *</text>
 <text x="81539" y="4907" fill="#000000" font-family="Arial" font-size="10">+ PulseMainLoopLock () </text>
 <text x="81539" y="4923" fill="#000000" font-family="Arial" font-size="10">+ operator= () PulseMainLoopLock &amp;</text>
 <text x="81539" y="4939" fill="#000000" font-family="Arial" font-size="10">+ ~PulseMainLoopLock () </text>
 <text x="81539" y="4955" fill="#000000" font-family="Arial" font-size="10">+ PulseMainLoopLock (loop: pa_threaded_mainloop *) </text>
 <polygon points="81881,4965 81881,4845 82145,4845 82145,4965 81881,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="81881,4869 82145,4869" stroke="#0000ff" fill="none"/>
 <polyline points="81881,4941 82145,4941" stroke="#0000ff" fill="none"/>
 <text x="81966" y="4859" fill="#000000" font-family="Arial" font-size="10">RING_PluginAPI</text>
 <text x="81889" y="4883" fill="#000000" font-family="Arial" font-size="10">+ context: void *</text>
 <text x="81889" y="4899" fill="#000000" font-family="Arial" font-size="10">+ invokeService: RING_PluginFunc</text>
 <text x="81889" y="4915" fill="#000000" font-family="Arial" font-size="10">+ registerObjectFactory: RING_PluginFunc</text>
 <text x="81889" y="4931" fill="#000000" font-family="Arial" font-size="10">+ version: RING_PluginVersion</text>
 <text x="82011" y="4955" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="82164,4941 82164,4869 82321,4869 82321,4941 82164,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="82164,4893 82321,4893" stroke="#0000ff" fill="none"/>
 <polyline points="82164,4917 82321,4917" stroke="#0000ff" fill="none"/>
 <text x="82172" y="4883" fill="#000000" font-family="Arial" font-size="10">RING_PluginCreateFunc</text>
 <text x="82240" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="82240" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="82339,4941 82339,4869 82503,4869 82503,4941 82339,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="82339,4893 82503,4893" stroke="#0000ff" fill="none"/>
 <polyline points="82339,4917 82503,4917" stroke="#0000ff" fill="none"/>
 <text x="82347" y="4883" fill="#000000" font-family="Arial" font-size="10">RING_PluginDestroyFunc</text>
 <text x="82419" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="82419" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="82521,4941 82521,4869 82663,4869 82663,4941 82521,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="82521,4893 82663,4893" stroke="#0000ff" fill="none"/>
 <polyline points="82521,4917 82663,4917" stroke="#0000ff" fill="none"/>
 <text x="82529" y="4883" fill="#000000" font-family="Arial" font-size="10">RING_PluginExitFunc</text>
 <text x="82590" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="82590" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="82682,4941 82682,4869 82801,4869 82801,4941 82682,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="82682,4893 82801,4893" stroke="#0000ff" fill="none"/>
 <polyline points="82682,4917 82801,4917" stroke="#0000ff" fill="none"/>
 <text x="82690" y="4883" fill="#000000" font-family="Arial" font-size="10">RING_PluginFunc</text>
 <text x="82739" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="82739" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="82819,4941 82819,4869 82955,4869 82955,4941 82819,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="82819,4893 82955,4893" stroke="#0000ff" fill="none"/>
 <polyline points="82819,4917 82955,4917" stroke="#0000ff" fill="none"/>
 <text x="82827" y="4883" fill="#000000" font-family="Arial" font-size="10">RING_PluginInitFunc</text>
 <text x="82885" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="82885" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="82974,4965 82974,4845 83201,4845 83201,4965 82974,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="82974,4869 83201,4869" stroke="#0000ff" fill="none"/>
 <polyline points="82974,4941 83201,4941" stroke="#0000ff" fill="none"/>
 <text x="83009" y="4859" fill="#000000" font-family="Arial" font-size="10">RING_PluginObjectFactory</text>
 <text x="82982" y="4883" fill="#000000" font-family="Arial" font-size="10">+ closure: void *</text>
 <text x="82982" y="4899" fill="#000000" font-family="Arial" font-size="10">+ create: RING_PluginCreateFunc</text>
 <text x="82982" y="4915" fill="#000000" font-family="Arial" font-size="10">+ destroy: RING_PluginDestroyFunc</text>
 <text x="82982" y="4931" fill="#000000" font-family="Arial" font-size="10">+ version: RING_PluginVersion</text>
 <text x="83085" y="4955" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="83219,4949 83219,4861 83448,4861 83448,4949 83219,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="83219,4885 83448,4885" stroke="#0000ff" fill="none"/>
 <polyline points="83219,4925 83448,4925" stroke="#0000ff" fill="none"/>
 <text x="83255" y="4875" fill="#000000" font-family="Arial" font-size="10">RING_PluginObjectParams</text>
 <text x="83227" y="4899" fill="#000000" font-family="Arial" font-size="10">+ pluginApi: const RING_PluginAPI *</text>
 <text x="83227" y="4915" fill="#000000" font-family="Arial" font-size="10">+ type: const char *</text>
 <text x="83331" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="83466,4949 83466,4861 83599,4861 83599,4949 83466,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="83466,4885 83599,4885" stroke="#0000ff" fill="none"/>
 <polyline points="83466,4925 83599,4925" stroke="#0000ff" fill="none"/>
 <text x="83474" y="4875" fill="#000000" font-family="Arial" font-size="10">RING_PluginVersion</text>
 <text x="83474" y="4899" fill="#000000" font-family="Arial" font-size="10">+ abi: uint32_t</text>
 <text x="83474" y="4915" fill="#000000" font-family="Arial" font-size="10">+ api: uint32_t</text>
 <text x="83530" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="83617,5309 83617,4501 83961,4501 83961,5309 83617,5309" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="83617,4525 83961,4525" stroke="#0000ff" fill="none"/>
 <polyline points="83617,4549 83961,4549" stroke="#0000ff" fill="none"/>
 <text x="83763" y="4515" fill="#000000" font-family="Arial" font-size="10">dev::RLP</text>
 <text x="83625" y="4539" fill="#000000" font-family="Arial" font-size="10">+ operator std::vector: explicit</text>
 <text x="83625" y="4563" fill="#000000" font-family="Arial" font-size="10">+ payload () </text>
 <text x="83625" y="4579" fill="#000000" font-family="Arial" font-size="10">+ toInt () </text>
 <text x="83625" y="4595" fill="#000000" font-family="Arial" font-size="10">+ toString () </text>
 <text x="83625" y="4611" fill="#000000" font-family="Arial" font-size="10">+ RLP () </text>
 <text x="83625" y="4627" fill="#000000" font-family="Arial" font-size="10">+ RLP (_b: byte const *, _s: unsigned , _st: Strictness ) </text>
 <text x="83625" y="4643" fill="#000000" font-family="Arial" font-size="10">+ convert (_flags: int ) T</text>
 <text x="83625" y="4659" fill="#000000" font-family="Arial" font-size="10">+ operator!= (_s: FixedHash const &amp; ) bool</text>
 <text x="83625" y="4675" fill="#000000" font-family="Arial" font-size="10">+ operator== (_h: FixedHash const &amp; ) bool</text>
 <text x="83625" y="4691" fill="#000000" font-family="Arial" font-size="10">+ begin () iterator</text>
 <text x="83625" y="4707" fill="#000000" font-family="Arial" font-size="10">+ data () bytesConstRef</text>
 <text x="83625" y="4723" fill="#000000" font-family="Arial" font-size="10">+ end () iterator</text>
 <text x="83625" y="4739" fill="#000000" font-family="Arial" font-size="10">+ isData () bool</text>
 <text x="83625" y="4755" fill="#000000" font-family="Arial" font-size="10">+ isEmpty () bool</text>
 <text x="83625" y="4771" fill="#000000" font-family="Arial" font-size="10">+ isInt () bool</text>
 <text x="83625" y="4787" fill="#000000" font-family="Arial" font-size="10">+ isList () bool</text>
 <text x="83625" y="4803" fill="#000000" font-family="Arial" font-size="10">+ isNull () bool</text>
 <text x="83625" y="4819" fill="#000000" font-family="Arial" font-size="10">+ itemCount () size_t</text>
 <text x="83625" y="4835" fill="#000000" font-family="Arial" font-size="10">+ itemCountStrict () size_t</text>
 <text x="83625" y="4851" fill="#000000" font-family="Arial" font-size="10">+ operator RLPs () </text>
 <text x="83625" y="4867" fill="#000000" font-family="Arial" font-size="10">+ operator bigint () </text>
 <text x="83625" y="4883" fill="#000000" font-family="Arial" font-size="10">+ operator bool () </text>
 <text x="83625" y="4899" fill="#000000" font-family="Arial" font-size="10">+ operator bytes () </text>
 <text x="83625" y="4915" fill="#000000" font-family="Arial" font-size="10">+ operator dev::FixedHash () </text>
 <text x="83625" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator std::pair () </text>
 <text x="83625" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator std::string () </text>
 <text x="83625" y="4963" fill="#000000" font-family="Arial" font-size="10">+ operator u160 () </text>
 <text x="83625" y="4979" fill="#000000" font-family="Arial" font-size="10">+ operator u256 () </text>
 <text x="83625" y="4995" fill="#000000" font-family="Arial" font-size="10">+ operator uint16_t () </text>
 <text x="83625" y="5011" fill="#000000" font-family="Arial" font-size="10">+ operator uint32_t () </text>
 <text x="83625" y="5027" fill="#000000" font-family="Arial" font-size="10">+ operator uint64_t () </text>
 <text x="83625" y="5043" fill="#000000" font-family="Arial" font-size="10">+ operator uint8_t () </text>
 <text x="83625" y="5059" fill="#000000" font-family="Arial" font-size="10">+ operator!= (_s: char const *) bool</text>
 <text x="83625" y="5075" fill="#000000" font-family="Arial" font-size="10">+ operator!= (_s: std::string const &amp; ) bool</text>
 <text x="83625" y="5091" fill="#000000" font-family="Arial" font-size="10">+ operator!= (_i: unsigned const &amp; ) bool</text>
 <text x="83625" y="5107" fill="#000000" font-family="Arial" font-size="10">+ operator!= (_i: u256 const &amp; ) bool</text>
 <text x="83625" y="5123" fill="#000000" font-family="Arial" font-size="10">+ operator!= (_i: bigint const &amp; ) bool</text>
 <text x="83625" y="5139" fill="#000000" font-family="Arial" font-size="10">+ operator== (_s: char const *) bool</text>
 <text x="83625" y="5155" fill="#000000" font-family="Arial" font-size="10">+ operator== (_s: std::string const &amp; ) bool</text>
 <text x="83625" y="5171" fill="#000000" font-family="Arial" font-size="10">+ operator== (_i: unsigned const &amp; ) bool</text>
 <text x="83625" y="5187" fill="#000000" font-family="Arial" font-size="10">+ operator== (_i: u256 const &amp; ) bool</text>
 <text x="83625" y="5203" fill="#000000" font-family="Arial" font-size="10">+ operator== (_i: bigint const &amp; ) bool</text>
 <text x="83625" y="5219" fill="#000000" font-family="Arial" font-size="10">+ operator[] (_i: size_t ) RLP</text>
 <text x="83625" y="5235" fill="#000000" font-family="Arial" font-size="10">+ size () size_t</text>
 <text x="83625" y="5251" fill="#000000" font-family="Arial" font-size="10">+ sizeStrict () size_t</text>
 <text x="83625" y="5267" fill="#000000" font-family="Arial" font-size="10">+ RLP (_d: bytesConstRef , _s: Strictness ) </text>
 <text x="83625" y="5283" fill="#000000" font-family="Arial" font-size="10">+ RLP (_d: bytes const &amp; , _s: Strictness ) </text>
 <text x="83625" y="5299" fill="#000000" font-family="Arial" font-size="10">+ RLP (_s: std::string const &amp; , _st: Strictness ) </text>
 <polygon points="83980,5181 83980,4629 84457,4629 84457,5181 83980,5181" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="83980,4653 84457,4653" stroke="#0000ff" fill="none"/>
 <polyline points="83980,4677 84457,4677" stroke="#0000ff" fill="none"/>
 <text x="84185" y="4643" fill="#000000" font-family="Arial" font-size="10">RLPStream</text>
 <text x="84216" y="4667" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="83988" y="4691" fill="#000000" font-family="Arial" font-size="10">+ append (_s: FixedHash , _compact: bool , _allOrNothing: bool ) RLPStream &amp;</text>
 <text x="83988" y="4707" fill="#000000" font-family="Arial" font-size="10">+ append (_s: std::vector const &amp; ) RLPStream &amp;</text>
 <text x="83988" y="4723" fill="#000000" font-family="Arial" font-size="10">+ append (_s: std::array const &amp; ) RLPStream &amp;</text>
 <text x="83988" y="4739" fill="#000000" font-family="Arial" font-size="10">+ append (_s: std::set const &amp; ) RLPStream &amp;</text>
 <text x="83988" y="4755" fill="#000000" font-family="Arial" font-size="10">+ append (_s: std::unordered_set const &amp; ) RLPStream &amp;</text>
 <text x="83988" y="4771" fill="#000000" font-family="Arial" font-size="10">+ append (_s: std::pair const &amp; ) RLPStream &amp;</text>
 <text x="83988" y="4787" fill="#000000" font-family="Arial" font-size="10">+ appendVector (_s: std::vector const &amp; ) RLPStream &amp;</text>
 <text x="83988" y="4803" fill="#000000" font-family="Arial" font-size="10">+ operator&lt;&lt; (_data: T ) RLPStream &amp;</text>
 <text x="83988" y="4819" fill="#000000" font-family="Arial" font-size="10">+ BOOST_THROW_EXCEPTION (RLPException) </text>
 <text x="83988" y="4835" fill="#000000" font-family="Arial" font-size="10">+ RLPStream () </text>
 <text x="83988" y="4851" fill="#000000" font-family="Arial" font-size="10">+ append (_s: unsigned ) RLPStream &amp;</text>
 <text x="83988" y="4867" fill="#000000" font-family="Arial" font-size="10">+ append (_s: u160 ) RLPStream &amp;</text>
 <text x="83988" y="4883" fill="#000000" font-family="Arial" font-size="10">+ append (_s: u256 ) RLPStream &amp;</text>
 <text x="83988" y="4899" fill="#000000" font-family="Arial" font-size="10">+ append (_i: bigint ) RLPStream &amp;</text>
 <text x="83988" y="4915" fill="#000000" font-family="Arial" font-size="10">+ append (_s: bytesConstRef , _compact: bool ) RLPStream &amp;</text>
 <text x="83988" y="4931" fill="#000000" font-family="Arial" font-size="10">+ append (_s: bytes const &amp; ) RLPStream &amp;</text>
 <text x="83988" y="4947" fill="#000000" font-family="Arial" font-size="10">+ append (_s: std::string const &amp; ) RLPStream &amp;</text>
 <text x="83988" y="4963" fill="#000000" font-family="Arial" font-size="10">+ append (_s: char const *) RLPStream &amp;</text>
 <text x="83988" y="4979" fill="#000000" font-family="Arial" font-size="10">+ append (_rlp: RLP const &amp; , _itemCount: size_t ) RLPStream &amp;</text>
 <text x="83988" y="4995" fill="#000000" font-family="Arial" font-size="10">+ appendList (_items: size_t ) RLPStream &amp;</text>
 <text x="83988" y="5011" fill="#000000" font-family="Arial" font-size="10">+ appendList (_rlp: bytesConstRef ) RLPStream &amp;</text>
 <text x="83988" y="5027" fill="#000000" font-family="Arial" font-size="10">+ appendList (_rlp: bytes const &amp; ) RLPStream &amp;</text>
 <text x="83988" y="5043" fill="#000000" font-family="Arial" font-size="10">+ appendList (_s: RLPStream const &amp; ) RLPStream &amp;</text>
 <text x="83988" y="5059" fill="#000000" font-family="Arial" font-size="10">+ appendRaw (_s: bytesConstRef , _itemCount: size_t ) RLPStream &amp;</text>
 <text x="83988" y="5075" fill="#000000" font-family="Arial" font-size="10">+ appendRaw (_rlp: bytes const &amp; , _itemCount: size_t ) RLPStream &amp;</text>
 <text x="83988" y="5091" fill="#000000" font-family="Arial" font-size="10">+ clear () void</text>
 <text x="83988" y="5107" fill="#000000" font-family="Arial" font-size="10">+ noteAppended (_itemCount: size_t ) void</text>
 <text x="83988" y="5123" fill="#000000" font-family="Arial" font-size="10">+ pushCount (_count: size_t , _base: byte ) void</text>
 <text x="83988" y="5139" fill="#000000" font-family="Arial" font-size="10">+ ~RLPStream () </text>
 <text x="83988" y="5155" fill="#000000" font-family="Arial" font-size="10">+ out () bytes const &amp;</text>
 <text x="83988" y="5171" fill="#000000" font-family="Arial" font-size="10">+ RLPStream (_listItems: size_t ) </text>
 <polygon points="84475,4941 84475,4869 84555,4869 84555,4941 84475,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="84475,4893 84555,4893" stroke="#0000ff" fill="none"/>
 <polyline points="84475,4917 84555,4917" stroke="#0000ff" fill="none"/>
 <text x="84483" y="4883" fill="#000000" font-family="Arial" font-size="10">ReadOffset</text>
 <text x="84513" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="84513" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="84573,4941 84573,4869 84935,4869 84935,4941 84573,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="84573,4893 84935,4893" stroke="#0000ff" fill="none"/>
 <polyline points="84573,4917 84935,4917" stroke="#0000ff" fill="none"/>
 <text x="84629" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::RecordPlaybackFilepath</text>
 <text x="84581" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;RecordPlaybackFilepath&quot;</text>
 <text x="84752" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="84953,4941 84953,4869 85317,4869 85317,4941 84953,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="84953,4893 85317,4893" stroke="#0000ff" fill="none"/>
 <polyline points="84953,4917 85317,4917" stroke="#0000ff" fill="none"/>
 <text x="85009" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::RecordPlaybackStopped</text>
 <text x="84961" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;RecordPlaybackStopped&quot;</text>
 <text x="85133" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="85336,4941 85336,4869 85697,4869 85697,4941 85336,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="85336,4893 85697,4893" stroke="#0000ff" fill="none"/>
 <polyline points="85336,4917 85697,4917" stroke="#0000ff" fill="none"/>
 <text x="85392" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::RecordingStateChanged</text>
 <text x="85344" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;RecordingStateChanged&quot;</text>
 <text x="85514" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="85715,4941 85715,4869 86068,4869 86068,4941 85715,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="85715,4893 86068,4893" stroke="#0000ff" fill="none"/>
 <polyline points="85715,4917 86068,4917" stroke="#0000ff" fill="none"/>
 <text x="85744" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::RegisteredNameFound</text>
 <text x="85723" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;RegisteredNameFound&quot;</text>
 <text x="85889" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="86086,4965 86086,4845 86352,4845 86352,4965 86086,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="86086,4869 86352,4869" stroke="#0000ff" fill="none"/>
 <polyline points="86086,4941 86352,4941" stroke="#0000ff" fill="none"/>
 <text x="86094" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::NameDirectory::RegistrationResponse</text>
 <text x="86094" y="4883" fill="#000000" font-family="Arial" font-size="10">- alreadyTaken</text>
 <text x="86094" y="4899" fill="#000000" font-family="Arial" font-size="10">- error</text>
 <text x="86094" y="4915" fill="#000000" font-family="Arial" font-size="10">- invalidName</text>
 <text x="86094" y="4931" fill="#000000" font-family="Arial" font-size="10">- success</text>
 <text x="86217" y="4955" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="86370,5029 86370,4781 86598,4781 86598,5029 86370,5029" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="86370,4805 86598,4805" stroke="#0000ff" fill="none"/>
 <polyline points="86370,5005 86598,5005" stroke="#0000ff" fill="none"/>
 <text x="86420" y="4795" fill="#000000" font-family="Arial" font-size="10">ring::RegistrationState</text>
 <text x="86378" y="4819" fill="#000000" font-family="Arial" font-size="10">- ERROR_AUTH</text>
 <text x="86378" y="4835" fill="#000000" font-family="Arial" font-size="10">- ERROR_EXIST_STUN</text>
 <text x="86378" y="4851" fill="#000000" font-family="Arial" font-size="10">- ERROR_GENERIC</text>
 <text x="86378" y="4867" fill="#000000" font-family="Arial" font-size="10">- ERROR_HOST</text>
 <text x="86378" y="4883" fill="#000000" font-family="Arial" font-size="10">- ERROR_NEED_MIGRATION</text>
 <text x="86378" y="4899" fill="#000000" font-family="Arial" font-size="10">- ERROR_NETWORK</text>
 <text x="86378" y="4915" fill="#000000" font-family="Arial" font-size="10">- ERROR_NOT_ACCEPTABLE</text>
 <text x="86378" y="4931" fill="#000000" font-family="Arial" font-size="10">- ERROR_SERVICE_UNAVAILABLE</text>
 <text x="86378" y="4947" fill="#000000" font-family="Arial" font-size="10">- INITIALIZING</text>
 <text x="86378" y="4963" fill="#000000" font-family="Arial" font-size="10">- REGISTERED</text>
 <text x="86378" y="4979" fill="#000000" font-family="Arial" font-size="10">- TRYING</text>
 <text x="86378" y="4995" fill="#000000" font-family="Arial" font-size="10">- UNREGISTERED</text>
 <text x="86482" y="5019" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="86616,4941 86616,4869 86988,4869 86988,4941 86616,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="86616,4893 86988,4893" stroke="#0000ff" fill="none"/>
 <polyline points="86616,4917 86988,4917" stroke="#0000ff" fill="none"/>
 <text x="86646" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::RegistrationStateChanged</text>
 <text x="86624" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;RegistrationStateChanged&quot;</text>
 <text x="86800" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="87007,5045 87007,4765 87454,4765 87454,5045 87007,5045" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="87007,4789 87454,4789" stroke="#0000ff" fill="none"/>
 <polyline points="87007,4909 87454,4909" stroke="#0000ff" fill="none"/>
 <text x="87185" y="4779" fill="#000000" font-family="Arial" font-size="10">ring::Resampler</text>
 <text x="87015" y="4803" fill="#000000" font-family="Arial" font-size="10">- floatBufferIn_: std::vector</text>
 <text x="87015" y="4819" fill="#000000" font-family="Arial" font-size="10">- floatBufferOut_: std::vector</text>
 <text x="87015" y="4835" fill="#000000" font-family="Arial" font-size="10">- format_: AudioFormat</text>
 <text x="87015" y="4851" fill="#000000" font-family="Arial" font-size="10">- high_quality_: bool</text>
 <text x="87015" y="4867" fill="#000000" font-family="Arial" font-size="10">- samples_: size_t</text>
 <text x="87015" y="4883" fill="#000000" font-family="Arial" font-size="10">- scratchBuffer_: std::vector</text>
 <text x="87015" y="4899" fill="#000000" font-family="Arial" font-size="10">- src_state_: std::unique_ptr</text>
 <text x="87015" y="4923" fill="#000000" font-family="Arial" font-size="10">+ channels () </text>
 <text x="87015" y="4939" fill="#000000" font-family="Arial" font-size="10">+ Resampler (format: AudioFormat , quality: bool ) </text>
 <text x="87015" y="4955" fill="#000000" font-family="Arial" font-size="10">+ Resampler (sample_rate: unsigned , channels: unsigned , quality: bool ) </text>
 <text x="87015" y="4971" fill="#000000" font-family="Arial" font-size="10">+ Resampler () </text>
 <text x="87015" y="4987" fill="#000000" font-family="Arial" font-size="10">+ operator= () Resampler &amp;</text>
 <text x="87015" y="5003" fill="#000000" font-family="Arial" font-size="10">+ resample (dataIn: const AudioBuffer &amp; , dataOut: AudioBuffer &amp; ) void</text>
 <text x="87015" y="5019" fill="#000000" font-family="Arial" font-size="10">+ setFormat (format: AudioFormat , quality: bool ) void</text>
 <text x="87015" y="5035" fill="#000000" font-family="Arial" font-size="10">+ ~Resampler () </text>
 <polygon points="87472,4965 87472,4845 87669,4845 87669,4965 87472,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="87472,4869 87669,4869" stroke="#0000ff" fill="none"/>
 <polyline points="87472,4941 87669,4941" stroke="#0000ff" fill="none"/>
 <text x="87480" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::NameDirectory::Response</text>
 <text x="87480" y="4883" fill="#000000" font-family="Arial" font-size="10">- error</text>
 <text x="87480" y="4899" fill="#000000" font-family="Arial" font-size="10">- found</text>
 <text x="87480" y="4915" fill="#000000" font-family="Arial" font-size="10">- invalidName</text>
 <text x="87480" y="4931" fill="#000000" font-family="Arial" font-size="10">- notFound</text>
 <text x="87568" y="4955" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="87687,5029 87687,4781 88001,4781 88001,5029 87687,5029" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="87687,4805 88001,4805" stroke="#0000ff" fill="none"/>
 <polyline points="87687,4909 88001,4909" stroke="#0000ff" fill="none"/>
 <text x="87814" y="4795" fill="#000000" font-family="Arial" font-size="10">RestClient</text>
 <text x="87695" y="4819" fill="#000000" font-family="Arial" font-size="10">- configurationManager_: std::unique_ptr</text>
 <text x="87695" y="4835" fill="#000000" font-family="Arial" font-size="10">- pollNoMore_: bool</text>
 <text x="87695" y="4851" fill="#000000" font-family="Arial" font-size="10">- restbed: std::thread</text>
 <text x="87695" y="4867" fill="#000000" font-family="Arial" font-size="10">- service_: restbed::Service</text>
 <text x="87695" y="4883" fill="#000000" font-family="Arial" font-size="10">- settings_: std::shared_ptr</text>
 <text x="87695" y="4899" fill="#000000" font-family="Arial" font-size="10">- videoManager_: std::unique_ptr</text>
 <text x="87695" y="4923" fill="#000000" font-family="Arial" font-size="10">+ RestClient (port: int , flags: int , persistent: bool ) </text>
 <text x="87695" y="4939" fill="#000000" font-family="Arial" font-size="10">+ event_loop () int</text>
 <text x="87695" y="4955" fill="#000000" font-family="Arial" font-size="10">+ exit () int</text>
 <text x="87695" y="4971" fill="#000000" font-family="Arial" font-size="10">+ ~RestClient () </text>
 <text x="87695" y="4987" fill="#000000" font-family="Arial" font-size="10">- endLib () void</text>
 <text x="87695" y="5003" fill="#000000" font-family="Arial" font-size="10">- initLib (flags: int ) int</text>
 <text x="87695" y="5019" fill="#000000" font-family="Arial" font-size="10">- initResources () void</text>
 <polygon points="88019,5621 88019,4189 89133,4189 89133,5621 88019,5621" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="88019,4213 89133,4213" stroke="#0000ff" fill="none"/>
 <polyline points="88019,4237 89133,4237" stroke="#0000ff" fill="none"/>
 <text x="88500" y="4203" fill="#000000" font-family="Arial" font-size="10">RestConfigurationManager</text>
 <text x="88574" y="4227" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="88027" y="4251" fill="#000000" font-family="Arial" font-size="10">+ RestConfigurationManager () </text>
 <text x="88027" y="4267" fill="#000000" font-family="Arial" font-size="10">- acceptTrustRequest (accountId: const std::string &amp; , from: const std::string &amp; ) void</text>
 <text x="88027" y="4283" fill="#000000" font-family="Arial" font-size="10">- addAccount (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4299" fill="#000000" font-family="Arial" font-size="10">- defaultRoute (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4315" fill="#000000" font-family="Arial" font-size="10">- discardTrustRequest (accountId: const std::string &amp; , from: const std::string &amp; ) void</text>
 <text x="88027" y="4331" fill="#000000" font-family="Arial" font-size="10">- exportAccounts (accountIDs: const std::vector &amp; , filepath: const std::string &amp; , password: const std::string &amp; ) void</text>
 <text x="88027" y="4347" fill="#000000" font-family="Arial" font-size="10">- getAccountDetails (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4363" fill="#000000" font-family="Arial" font-size="10">- getAccountList (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4379" fill="#000000" font-family="Arial" font-size="10">- getAccountTemplate (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4395" fill="#000000" font-family="Arial" font-size="10">- getActiveCodecList (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4411" fill="#000000" font-family="Arial" font-size="10">- getAddrFromInterfaceName (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4427" fill="#000000" font-family="Arial" font-size="10">- getAllIpInterface (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4443" fill="#000000" font-family="Arial" font-size="10">- getAllIpInterfaceByName (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4459" fill="#000000" font-family="Arial" font-size="10">- getAudioInputDeviceIndex (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4475" fill="#000000" font-family="Arial" font-size="10">- getAudioInputDeviceList (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4491" fill="#000000" font-family="Arial" font-size="10">- getAudioManager (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4507" fill="#000000" font-family="Arial" font-size="10">- getAudioOutputDeviceIndex (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4523" fill="#000000" font-family="Arial" font-size="10">- getAudioOutputDeviceList (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4539" fill="#000000" font-family="Arial" font-size="10">- getAudioPluginList (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4555" fill="#000000" font-family="Arial" font-size="10">- getCertificateDetails (certificate: const std::string &amp; ) void</text>
 <text x="88027" y="4571" fill="#000000" font-family="Arial" font-size="10">- getCertificateDetailsPath (certificate: const std::string &amp; , privateKey: const std::string &amp; , privateKeyPass: const std::string &amp; ) void</text>
 <text x="88027" y="4587" fill="#000000" font-family="Arial" font-size="10">- getCertificatesByStatus (accountId: const std::string &amp; , status: const std::string &amp; ) void</text>
 <text x="88027" y="4603" fill="#000000" font-family="Arial" font-size="10">- getCodecDetails (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4619" fill="#000000" font-family="Arial" font-size="10">- getCodecList (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4635" fill="#000000" font-family="Arial" font-size="10">- getCredentials (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4651" fill="#000000" font-family="Arial" font-size="10">- getCurrentAudioDevicesIndex (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4667" fill="#000000" font-family="Arial" font-size="10">- getCurrentAudioOutputPlugin (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4683" fill="#000000" font-family="Arial" font-size="10">- getHistoryLimit (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4699" fill="#000000" font-family="Arial" font-size="10">- getHookSettings (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4715" fill="#000000" font-family="Arial" font-size="10">- getIsAlwaysRecording (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4731" fill="#000000" font-family="Arial" font-size="10">- getMessageStatus (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4747" fill="#000000" font-family="Arial" font-size="10">- getNoiseSuppressState (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4763" fill="#000000" font-family="Arial" font-size="10">- getPinnedCertificates () void</text>
 <text x="88027" y="4779" fill="#000000" font-family="Arial" font-size="10">- getRecordPath (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4795" fill="#000000" font-family="Arial" font-size="10">- getShortcuts (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4811" fill="#000000" font-family="Arial" font-size="10">- getSupportedAudioManagers (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4827" fill="#000000" font-family="Arial" font-size="10">- getSupportedCiphers (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4843" fill="#000000" font-family="Arial" font-size="10">- getSupportedTlsMethod (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4859" fill="#000000" font-family="Arial" font-size="10">- getTlsDefaultSettings (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4875" fill="#000000" font-family="Arial" font-size="10">- getTrustRequests (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4891" fill="#000000" font-family="Arial" font-size="10">- getVolatileAccountDetails (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4907" fill="#000000" font-family="Arial" font-size="10">- getVolume (device: const std::string &amp; ) void</text>
 <text x="88027" y="4923" fill="#000000" font-family="Arial" font-size="10">- importAccounts (archivePath: const std::string &amp; , password: const std::string &amp; ) void</text>
 <text x="88027" y="4939" fill="#000000" font-family="Arial" font-size="10">- isAgcEnabled (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4955" fill="#000000" font-family="Arial" font-size="10">- isCaptureMuted (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4971" fill="#000000" font-family="Arial" font-size="10">- isDtmfMuted (session: const std::shared_ptr ) void</text>
 <text x="88027" y="4987" fill="#000000" font-family="Arial" font-size="10">- isPlaybackMuted (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5003" fill="#000000" font-family="Arial" font-size="10">- isRingtoneMuted (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5019" fill="#000000" font-family="Arial" font-size="10">- muteCapture (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5035" fill="#000000" font-family="Arial" font-size="10">- muteDtmf (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5051" fill="#000000" font-family="Arial" font-size="10">- mutePlayback (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5067" fill="#000000" font-family="Arial" font-size="10">- muteRingtone (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5083" fill="#000000" font-family="Arial" font-size="10">- parsePost (post: const std::string &amp; ) std::map</text>
 <text x="88027" y="5099" fill="#000000" font-family="Arial" font-size="10">- pinCertificate (certificate: const std::vector &amp; , local: const bool &amp; ) void</text>
 <text x="88027" y="5115" fill="#000000" font-family="Arial" font-size="10">- pinCertificatePath (certPath: const std::string &amp; ) void</text>
 <text x="88027" y="5131" fill="#000000" font-family="Arial" font-size="10">- pinRemoteCertificate (accountId: const std::string &amp; , certId: const std::string &amp; ) void</text>
 <text x="88027" y="5147" fill="#000000" font-family="Arial" font-size="10">- populateResources () void</text>
 <text x="88027" y="5163" fill="#000000" font-family="Arial" font-size="10">- registerAllAccounts (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5179" fill="#000000" font-family="Arial" font-size="10">- removeAccount (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5195" fill="#000000" font-family="Arial" font-size="10">- sendRegister (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5211" fill="#000000" font-family="Arial" font-size="10">- sendTextMessage (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5227" fill="#000000" font-family="Arial" font-size="10">- sendTrustRequest (accountId: const std::string &amp; , to: const std::string &amp; , payload: const std::vector &amp; ) void</text>
 <text x="88027" y="5243" fill="#000000" font-family="Arial" font-size="10">- setAccountActive (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5259" fill="#000000" font-family="Arial" font-size="10">- setAccountDetails (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5275" fill="#000000" font-family="Arial" font-size="10">- setAccountsOrder (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5291" fill="#000000" font-family="Arial" font-size="10">- setActiveCodecList (accountID: const std::string &amp; , list: const std::vector &amp; ) void</text>
 <text x="88027" y="5307" fill="#000000" font-family="Arial" font-size="10">- setAgcState (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5323" fill="#000000" font-family="Arial" font-size="10">- setAudioInputDevice (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5339" fill="#000000" font-family="Arial" font-size="10">- setAudioManager (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5355" fill="#000000" font-family="Arial" font-size="10">- setAudioOutputDevice (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5371" fill="#000000" font-family="Arial" font-size="10">- setAudioPlugin (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5387" fill="#000000" font-family="Arial" font-size="10">- setAudioRingtoneDevice (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5403" fill="#000000" font-family="Arial" font-size="10">- setCertificateStatus (accountId: const std::string &amp; , certId: const std::string &amp; , status: const std::string &amp; ) void</text>
 <text x="88027" y="5419" fill="#000000" font-family="Arial" font-size="10">- setCodecDetails (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5435" fill="#000000" font-family="Arial" font-size="10">- setCredentials (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5451" fill="#000000" font-family="Arial" font-size="10">- setHistoryLimit (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5467" fill="#000000" font-family="Arial" font-size="10">- setHookSettings (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5483" fill="#000000" font-family="Arial" font-size="10">- setIsAlwaysRecording (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5499" fill="#000000" font-family="Arial" font-size="10">- setNoiseSuppressState (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5515" fill="#000000" font-family="Arial" font-size="10">- setRecordPath (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5531" fill="#000000" font-family="Arial" font-size="10">- setShortcuts (session: const std::shared_ptr ) void</text>
 <text x="88027" y="5547" fill="#000000" font-family="Arial" font-size="10">- setVolume (device: const std::string &amp; , value: const double &amp; ) void</text>
 <text x="88027" y="5563" fill="#000000" font-family="Arial" font-size="10">- unpinCertificate (certId: const std::string &amp; ) void</text>
 <text x="88027" y="5579" fill="#000000" font-family="Arial" font-size="10">- unpinCertificatePath (p: const std::string &amp; ) void</text>
 <text x="88027" y="5595" fill="#000000" font-family="Arial" font-size="10">- validateCertificate (accountId: const std::string &amp; , certificate: const std::string &amp; ) void</text>
 <text x="88027" y="5611" fill="#000000" font-family="Arial" font-size="10">- validateCertificatePath (accountId: const std::string &amp; , certificate: const std::string &amp; , privateKey: const std::string &amp; , privateKeyPass: const std::string &amp; , caList: const std::string &amp; ) void</text>
 <polygon points="89151,5045 89151,4765 89501,4765 89501,5045 89151,5045" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="89151,4789 89501,4789" stroke="#0000ff" fill="none"/>
 <polyline points="89151,4813 89501,4813" stroke="#0000ff" fill="none"/>
 <text x="89271" y="4779" fill="#000000" font-family="Arial" font-size="10">RestVideoManager</text>
 <text x="89324" y="4803" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="89159" y="4827" fill="#000000" font-family="Arial" font-size="10">+ RestVideoManager () </text>
 <text x="89159" y="4843" fill="#000000" font-family="Arial" font-size="10">- applySettings (session: const std::shared_ptr ) void</text>
 <text x="89159" y="4859" fill="#000000" font-family="Arial" font-size="10">- defaultRoute (session: const std::shared_ptr ) void</text>
 <text x="89159" y="4875" fill="#000000" font-family="Arial" font-size="10">- getCapabilities (session: const std::shared_ptr ) void</text>
 <text x="89159" y="4891" fill="#000000" font-family="Arial" font-size="10">- getDefaultDevice (session: const std::shared_ptr ) void</text>
 <text x="89159" y="4907" fill="#000000" font-family="Arial" font-size="10">- getDeviceList (session: const std::shared_ptr ) void</text>
 <text x="89159" y="4923" fill="#000000" font-family="Arial" font-size="10">- getSettings (session: const std::shared_ptr ) void</text>
 <text x="89159" y="4939" fill="#000000" font-family="Arial" font-size="10">- hasCameraStarted (session: const std::shared_ptr ) void</text>
 <text x="89159" y="4955" fill="#000000" font-family="Arial" font-size="10">- parsePost (post: const std::string &amp; ) std::map</text>
 <text x="89159" y="4971" fill="#000000" font-family="Arial" font-size="10">- populateResources () void</text>
 <text x="89159" y="4987" fill="#000000" font-family="Arial" font-size="10">- setDefaultDevice (session: const std::shared_ptr ) void</text>
 <text x="89159" y="5003" fill="#000000" font-family="Arial" font-size="10">- startCamera (session: const std::shared_ptr ) void</text>
 <text x="89159" y="5019" fill="#000000" font-family="Arial" font-size="10">- stopCamera (session: const std::shared_ptr ) void</text>
 <text x="89159" y="5035" fill="#000000" font-family="Arial" font-size="10">- switchInput (session: const std::shared_ptr ) void</text>
 <polygon points="89519,5197 89519,4613 90443,4613 90443,5197 89519,5197" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="89519,4637 90443,4637" stroke="#0000ff" fill="none"/>
 <polyline points="89519,4741 90443,4741" stroke="#0000ff" fill="none"/>
 <text x="89937" y="4627" fill="#000000" font-family="Arial" font-size="10">ring::RingBuffer</text>
 <text x="89527" y="4651" fill="#000000" font-family="Arial" font-size="10">+ id: const std::string</text>
 <text x="89527" y="4667" fill="#000000" font-family="Arial" font-size="10">- buffer_: AudioBuffer</text>
 <text x="89527" y="4683" fill="#000000" font-family="Arial" font-size="10">- endPos_: size_t</text>
 <text x="89527" y="4699" fill="#000000" font-family="Arial" font-size="10">- lock_: mutable std::mutex</text>
 <text x="89527" y="4715" fill="#000000" font-family="Arial" font-size="10">- not_empty_: mutable std::condition_variable</text>
 <text x="89527" y="4731" fill="#000000" font-family="Arial" font-size="10">- readoffsets_: ReadOffset</text>
 <text x="89527" y="4755" fill="#000000" font-family="Arial" font-size="10">+ RingBuffer (rbuf_id: const std::string &amp; , size: size_t , format: AudioFormat ) </text>
 <text x="89527" y="4771" fill="#000000" font-family="Arial" font-size="10">+ RingBuffer () </text>
 <text x="89527" y="4787" fill="#000000" font-family="Arial" font-size="10">+ createReadOffset (call_id: const std::string &amp; ) void</text>
 <text x="89527" y="4803" fill="#000000" font-family="Arial" font-size="10">+ debug () void</text>
 <text x="89527" y="4819" fill="#000000" font-family="Arial" font-size="10">+ discard (toDiscard: size_t , call_id: const std::string &amp; ) size_t</text>
 <text x="89527" y="4835" fill="#000000" font-family="Arial" font-size="10">+ flush (call_id: const std::string &amp; ) void</text>
 <text x="89527" y="4851" fill="#000000" font-family="Arial" font-size="10">+ flushAll () void</text>
 <text x="89527" y="4867" fill="#000000" font-family="Arial" font-size="10">+ get (buf: AudioBuffer &amp; , call_id: const std::string &amp; ) size_t</text>
 <text x="89527" y="4883" fill="#000000" font-family="Arial" font-size="10">+ get (buf: AudioBuffer &amp; , call_id: const std::string &amp; ) size_t</text>
 <text x="89527" y="4899" fill="#000000" font-family="Arial" font-size="10">+ operator= () RingBuffer &amp;</text>
 <text x="89527" y="4915" fill="#000000" font-family="Arial" font-size="10">+ put (buf: AudioBuffer &amp; ) void</text>
 <text x="89527" y="4931" fill="#000000" font-family="Arial" font-size="10">+ put (buf: AudioBuffer &amp; ) void</text>
 <text x="89527" y="4947" fill="#000000" font-family="Arial" font-size="10">+ removeReadOffset (call_id: const std::string &amp; ) void</text>
 <text x="89527" y="4963" fill="#000000" font-family="Arial" font-size="10">+ setFormat (format: AudioFormat ) void</text>
 <text x="89527" y="4979" fill="#000000" font-family="Arial" font-size="10">+ availableForGet (call_id: const std::string &amp; ) size_t</text>
 <text x="89527" y="4995" fill="#000000" font-family="Arial" font-size="10">+ getFormat () AudioFormat</text>
 <text x="89527" y="5011" fill="#000000" font-family="Arial" font-size="10">+ getLength (call_id: const std::string &amp; ) size_t</text>
 <text x="89527" y="5027" fill="#000000" font-family="Arial" font-size="10">+ hasNoReadOffsets () bool</text>
 <text x="89527" y="5043" fill="#000000" font-family="Arial" font-size="10">+ isEmpty () bool</text>
 <text x="89527" y="5059" fill="#000000" font-family="Arial" font-size="10">+ isFull () bool</text>
 <text x="89527" y="5075" fill="#000000" font-family="Arial" font-size="10">+ putLength () size_t</text>
 <text x="89527" y="5091" fill="#000000" font-family="Arial" font-size="10">+ readOffsetCount () size_t</text>
 <text x="89527" y="5107" fill="#000000" font-family="Arial" font-size="10">+ waitForDataAvailable (call_id: const std::string &amp; , min_data_length: const size_t , deadline: const std::chrono::high_resolution_clock::time_point &amp; ) size_t</text>
 <text x="89527" y="5123" fill="#000000" font-family="Arial" font-size="10">- discard (toDiscard: size_t ) size_t</text>
 <text x="89527" y="5139" fill="#000000" font-family="Arial" font-size="10">- storeReadOffset (offset: size_t , call_id: const std::string &amp; ) void</text>
 <text x="89527" y="5155" fill="#000000" font-family="Arial" font-size="10">- getReadOffset (call_id: const std::string &amp; ) size_t</text>
 <text x="89527" y="5171" fill="#000000" font-family="Arial" font-size="10">- getSmallestReadOffset () size_t</text>
 <text x="89527" y="5187" fill="#000000" font-family="Arial" font-size="10">- hasThisReadOffset (call_id: const std::string &amp; ) bool</text>
 <polygon points="90461,5213 90461,4597 91205,4597 91205,5213 90461,5213" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="90461,4621 91205,4621" stroke="#0000ff" fill="none"/>
 <polyline points="90461,4661 91205,4661" stroke="#0000ff" fill="none"/>
 <text x="90776" y="4611" fill="#000000" font-family="Arial" font-size="10">ring::RingBufferPool</text>
 <text x="90469" y="4635" fill="#000000" font-family="Arial" font-size="10">+ DEFAULT_ID: const char *const= &quot;audiolayer_id&quot;</text>
 <text x="90469" y="4651" fill="#000000" font-family="Arial" font-size="10">- defaultRingBuffer_: std::shared_ptr</text>
 <text x="90469" y="4675" fill="#000000" font-family="Arial" font-size="10">+ RingBufferPool () </text>
 <text x="90469" y="4691" fill="#000000" font-family="Arial" font-size="10">+ RingBufferPool () </text>
 <text x="90469" y="4707" fill="#000000" font-family="Arial" font-size="10">+ bindCallID (call_id1: const std::string &amp; , call_id2: const std::string &amp; ) void</text>
 <text x="90469" y="4723" fill="#000000" font-family="Arial" font-size="10">+ bindHalfDuplexOut (process_id: const std::string &amp; , call_id: const std::string &amp; ) void</text>
 <text x="90469" y="4739" fill="#000000" font-family="Arial" font-size="10">+ createRingBuffer (id: const std::string &amp; ) std::shared_ptr</text>
 <text x="90469" y="4755" fill="#000000" font-family="Arial" font-size="10">+ discard (toDiscard: size_t , call_id: const std::string &amp; ) size_t</text>
 <text x="90469" y="4771" fill="#000000" font-family="Arial" font-size="10">+ flush (call_id: const std::string &amp; ) void</text>
 <text x="90469" y="4787" fill="#000000" font-family="Arial" font-size="10">+ flushAllBuffers () void</text>
 <text x="90469" y="4803" fill="#000000" font-family="Arial" font-size="10">+ getAvailableData (buffer: AudioBuffer &amp; , call_id: const std::string &amp; ) size_t</text>
 <text x="90469" y="4819" fill="#000000" font-family="Arial" font-size="10">+ getAvailableData (buffer: AudioBuffer &amp; , call_id: const std::string &amp; ) size_t</text>
 <text x="90469" y="4835" fill="#000000" font-family="Arial" font-size="10">+ getData (buffer: AudioBuffer &amp; , call_id: const std::string &amp; ) size_t</text>
 <text x="90469" y="4851" fill="#000000" font-family="Arial" font-size="10">+ getData (buffer: AudioBuffer &amp; , call_id: const std::string &amp; ) size_t</text>
 <text x="90469" y="4867" fill="#000000" font-family="Arial" font-size="10">+ getRingBuffer (id: const std::string &amp; ) std::shared_ptr</text>
 <text x="90469" y="4883" fill="#000000" font-family="Arial" font-size="10">+ operator= () RingBufferPool &amp;</text>
 <text x="90469" y="4899" fill="#000000" font-family="Arial" font-size="10">+ setInternalAudioFormat (format: AudioFormat ) void</text>
 <text x="90469" y="4915" fill="#000000" font-family="Arial" font-size="10">+ setInternalSamplingRate (sr: unsigned ) void</text>
 <text x="90469" y="4931" fill="#000000" font-family="Arial" font-size="10">+ unBindAll (call_id: const std::string &amp; ) void</text>
 <text x="90469" y="4947" fill="#000000" font-family="Arial" font-size="10">+ unBindCallID (call_id1: const std::string &amp; , call_id2: const std::string &amp; ) void</text>
 <text x="90469" y="4963" fill="#000000" font-family="Arial" font-size="10">+ unBindHalfDuplexOut (process_id: const std::string &amp; , call_id: const std::string &amp; ) void</text>
 <text x="90469" y="4979" fill="#000000" font-family="Arial" font-size="10">+ ~RingBufferPool () </text>
 <text x="90469" y="4995" fill="#000000" font-family="Arial" font-size="10">+ availableForGet (call_id: const std::string &amp; ) size_t</text>
 <text x="90469" y="5011" fill="#000000" font-family="Arial" font-size="10">+ getInternalAudioFormat () AudioFormat</text>
 <text x="90469" y="5027" fill="#000000" font-family="Arial" font-size="10">+ getInternalSamplingRate () int</text>
 <text x="90469" y="5043" fill="#000000" font-family="Arial" font-size="10">+ getRingBuffer (id: const std::string &amp; ) std::shared_ptr</text>
 <text x="90469" y="5059" fill="#000000" font-family="Arial" font-size="10">+ waitForDataAvailable (call_id: const std::string &amp; , min_frames: size_t , max_wait: const std::chrono::microseconds &amp; ) bool</text>
 <text x="90469" y="5075" fill="#000000" font-family="Arial" font-size="10">- addReaderToRingBuffer (rbuf: const std::shared_ptr &amp; , call_id: const std::string &amp; ) void</text>
 <text x="90469" y="5091" fill="#000000" font-family="Arial" font-size="10">- getReadBindings (call_id: const std::string &amp; ) RingBufferPool::ReadBindings *</text>
 <text x="90469" y="5107" fill="#000000" font-family="Arial" font-size="10">- internalAudioFormat_ () AudioFormat</text>
 <text x="90469" y="5123" fill="#000000" font-family="Arial" font-size="10">- readBindingsMap_ () std::map</text>
 <text x="90469" y="5139" fill="#000000" font-family="Arial" font-size="10">- removeReadBindings (call_id: const std::string &amp; ) void</text>
 <text x="90469" y="5155" fill="#000000" font-family="Arial" font-size="10">- removeReaderFromRingBuffer (rbuf: const std::shared_ptr &amp; , call_id: const std::string &amp; ) void</text>
 <text x="90469" y="5171" fill="#000000" font-family="Arial" font-size="10">- ringBufferMap_ () std::map</text>
 <text x="90469" y="5187" fill="#000000" font-family="Arial" font-size="10">- stateLock_ () mutable std::recursive_mutex</text>
 <text x="90469" y="5203" fill="#000000" font-family="Arial" font-size="10">- getReadBindings (call_id: const std::string &amp; ) const RingBufferPool::ReadBindings *</text>
 <polygon points="26301,2959 26301,2887 26442,2887 26442,2959 26301,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="26301,2911 26442,2911" stroke="#0000ff" fill="none"/>
 <polyline points="26301,2935 26442,2935" stroke="#0000ff" fill="none"/>
 <text x="26316" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::RootNotFound</text>
 <text x="26369" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="26309" y="2949" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="26374,2887 26375,2854 26376,2811 26376,2762 26374,2707 26369,2647 26362,2584 26351,2520 26336,2456 26316,2394 26291,2334 26225,2213 26146,2097 26060,1987 25967,1883 25872,1787 25778,1700 25688,1622 25604,1555 25531,1499 25471,1455" stroke="#CC0044" fill="none"/>
 <polygon points="25469,1458 25463,1449 25473,1452 25469,1458" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="91223,4941 91223,4869 91561,4869 91561,4941 91223,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="91223,4893 91561,4893" stroke="#0000ff" fill="none"/>
 <polyline points="91223,4917 91561,4917" stroke="#0000ff" fill="none"/>
 <text x="91279" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::RtcpReportReceived</text>
 <text x="91231" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;RtcpReportReceived&quot;</text>
 <text x="91390" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="91579,4941 91579,4869 91739,4869 91739,4941 91579,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="91579,4893 91739,4893" stroke="#0000ff" fill="none"/>
 <polyline points="91579,4917 91739,4917" stroke="#0000ff" fill="none"/>
 <text x="91632" y="4883" fill="#000000" font-family="Arial" font-size="10">Runnable</text>
 <text x="91587" y="4907" fill="#000000" font-family="Arial" font-size="10">+ cb: std::function</text>
 <text x="91587" y="4931" fill="#000000" font-family="Arial" font-size="10">+ Runnable (std: const ) </text>
 <polygon points="91757,5021 91757,4789 91921,4789 91921,5021 91757,5021" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="91757,4813 91921,4813" stroke="#0000ff" fill="none"/>
 <polyline points="91757,4997 91921,4997" stroke="#0000ff" fill="none"/>
 <text x="91804" y="4803" fill="#000000" font-family="Arial" font-size="10">SHMHeader</text>
 <text x="91765" y="4827" fill="#000000" font-family="Arial" font-size="10">+ buffer_gen</text>
 <text x="91765" y="4843" fill="#000000" font-family="Arial" font-size="10">+ buffer_size</text>
 <text x="91765" y="4859" fill="#000000" font-family="Arial" font-size="10">+ notification</text>
 <text x="91765" y="4875" fill="#000000" font-family="Arial" font-size="10">+ data: uint8_t []</text>
 <text x="91765" y="4891" fill="#000000" font-family="Arial" font-size="10">+ frameGen: unsigned</text>
 <text x="91765" y="4907" fill="#000000" font-family="Arial" font-size="10">+ frameGenMutex: sem_t</text>
 <text x="91765" y="4923" fill="#000000" font-family="Arial" font-size="10">+ frameSize: unsigned</text>
 <text x="91765" y="4939" fill="#000000" font-family="Arial" font-size="10">+ mapSize: unsigned</text>
 <text x="91765" y="4955" fill="#000000" font-family="Arial" font-size="10">+ mutex: sem_t</text>
 <text x="91765" y="4971" fill="#000000" font-family="Arial" font-size="10">+ readOffset: unsigned</text>
 <text x="91765" y="4987" fill="#000000" font-family="Arial" font-size="10">+ writeOffset: unsigned</text>
 <text x="91837" y="5011" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="91939,5301 91939,4509 92481,4509 92481,5301 91939,5301" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="91939,4533 92481,4533" stroke="#0000ff" fill="none"/>
 <polyline points="91939,4749 92481,4749" stroke="#0000ff" fill="none"/>
 <text x="92158" y="4523" fill="#000000" font-family="Arial" font-size="10">ring::SIPPresence</text>
 <text x="91947" y="4547" fill="#000000" font-family="Arial" font-size="10">- acc_: SIPAccount *</text>
 <text x="91947" y="4563" fill="#000000" font-family="Arial" font-size="10">- cp_: pj_caching_pool</text>
 <text x="91947" y="4579" fill="#000000" font-family="Arial" font-size="10">- enabled_: pj_bool_t</text>
 <text x="91947" y="4595" fill="#000000" font-family="Arial" font-size="10">- mutex_: std::recursive_mutex</text>
 <text x="91947" y="4611" fill="#000000" font-family="Arial" font-size="10">- note_: std::string</text>
 <text x="91947" y="4627" fill="#000000" font-family="Arial" font-size="10">- pool_: pj_pool_t *</text>
 <text x="91947" y="4643" fill="#000000" font-family="Arial" font-size="10">- publish_sess_: pjsip_publishc *</text>
 <text x="91947" y="4659" fill="#000000" font-family="Arial" font-size="10">- publish_supported_: pj_bool_t</text>
 <text x="91947" y="4675" fill="#000000" font-family="Arial" font-size="10">- status_: bool</text>
 <text x="91947" y="4691" fill="#000000" font-family="Arial" font-size="10">- status_data_: pjsip_pres_status</text>
 <text x="91947" y="4707" fill="#000000" font-family="Arial" font-size="10">- sub_client_list_: std::list</text>
 <text x="91947" y="4723" fill="#000000" font-family="Arial" font-size="10">- sub_server_list_: std::list</text>
 <text x="91947" y="4739" fill="#000000" font-family="Arial" font-size="10">- subscribe_supported_: pj_bool_t</text>
 <text x="91947" y="4763" fill="#000000" font-family="Arial" font-size="10">+ SIPPresence (acc: SIPAccount *) </text>
 <text x="91947" y="4779" fill="#000000" font-family="Arial" font-size="10">+ SIPPresence () </text>
 <text x="91947" y="4795" fill="#000000" font-family="Arial" font-size="10">+ addPresSubClient (c: PresSubClient *) void</text>
 <text x="91947" y="4811" fill="#000000" font-family="Arial" font-size="10">+ addPresSubServer (s: PresSubServer *) void</text>
 <text x="91947" y="4827" fill="#000000" font-family="Arial" font-size="10">+ approvePresSubServer (uri: const std::string &amp; , flag: bool ) void</text>
 <text x="91947" y="4843" fill="#000000" font-family="Arial" font-size="10">+ enable (enabled: bool ) void</text>
 <text x="91947" y="4859" fill="#000000" font-family="Arial" font-size="10">+ fillDoc (tdata: pjsip_tx_data *, msg_data: const pres_msg_data *) void</text>
 <text x="91947" y="4875" fill="#000000" font-family="Arial" font-size="10">+ getClientSubscriptions () std::list</text>
 <text x="91947" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getNote () std::string</text>
 <text x="91947" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getStatus () pjsip_pres_status *</text>
 <text x="91947" y="4923" fill="#000000" font-family="Arial" font-size="10">+ isEnabled () bool</text>
 <text x="91947" y="4939" fill="#000000" font-family="Arial" font-size="10">+ isOnline () bool</text>
 <text x="91947" y="4955" fill="#000000" font-family="Arial" font-size="10">+ isSupported (function: int ) bool</text>
 <text x="91947" y="4971" fill="#000000" font-family="Arial" font-size="10">+ lock () void</text>
 <text x="91947" y="4987" fill="#000000" font-family="Arial" font-size="10">+ notifyPresSubServer () void</text>
 <text x="91947" y="5003" fill="#000000" font-family="Arial" font-size="10">+ operator= () SIPPresence &amp;</text>
 <text x="91947" y="5019" fill="#000000" font-family="Arial" font-size="10">+ publish_cb (param: struct pjsip_publishc_cbparam *) void</text>
 <text x="91947" y="5035" fill="#000000" font-family="Arial" font-size="10">+ removePresSubClient (c: PresSubClient *) void</text>
 <text x="91947" y="5051" fill="#000000" font-family="Arial" font-size="10">+ removePresSubServer (s: PresSubServer *) void</text>
 <text x="91947" y="5067" fill="#000000" font-family="Arial" font-size="10">+ reportPresSubClientNotification (uri: const std::string &amp; , status: pjsip_pres_status *) void</text>
 <text x="91947" y="5083" fill="#000000" font-family="Arial" font-size="10">+ sendPresence (status: bool , note: const std::string &amp; ) void</text>
 <text x="91947" y="5099" fill="#000000" font-family="Arial" font-size="10">+ subscribeClient (uri: const std::string &amp; , flag: bool ) void</text>
 <text x="91947" y="5115" fill="#000000" font-family="Arial" font-size="10">+ support (function: int , supported: bool ) void</text>
 <text x="91947" y="5131" fill="#000000" font-family="Arial" font-size="10">+ tryLock () bool</text>
 <text x="91947" y="5147" fill="#000000" font-family="Arial" font-size="10">+ unlock () void</text>
 <text x="91947" y="5163" fill="#000000" font-family="Arial" font-size="10">+ updateStatus (status: bool , note: const std::string &amp; ) void</text>
 <text x="91947" y="5179" fill="#000000" font-family="Arial" font-size="10">+ ~SIPPresence () </text>
 <text x="91947" y="5195" fill="#000000" font-family="Arial" font-size="10">+ getAccount () SIPAccount *</text>
 <text x="91947" y="5211" fill="#000000" font-family="Arial" font-size="10">+ getModId () int</text>
 <text x="91947" y="5227" fill="#000000" font-family="Arial" font-size="10">+ getPool () pj_pool_t *</text>
 <text x="91947" y="5243" fill="#000000" font-family="Arial" font-size="10">- publish (pres: SIPPresence *) pj_status_t</text>
 <text x="91947" y="5259" fill="#000000" font-family="Arial" font-size="10">- publish_cb (param: struct pjsip_publishc_cbparam *) void</text>
 <text x="91947" y="5275" fill="#000000" font-family="Arial" font-size="10">- send_publish (pres: SIPPresence *) pj_status_t</text>
 <text x="91947" y="5291" fill="#000000" font-family="Arial" font-size="10">- mutex_nesting_level_ () unsigned</text>
 <polygon points="92499,5117 92499,4693 93537,4693 93537,5117 92499,5117" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="92499,4717 93537,4717" stroke="#0000ff" fill="none"/>
 <polyline points="92499,4773 93537,4773" stroke="#0000ff" fill="none"/>
 <text x="92968" y="4707" fill="#000000" font-family="Arial" font-size="10">ring::SIPVoIPLink</text>
 <text x="92507" y="4731" fill="#000000" font-family="Arial" font-size="10">+ sipTransportBroker: std::unique_ptr</text>
 <text x="92507" y="4747" fill="#000000" font-family="Arial" font-size="10">- cp_: mutable pj_caching_pool</text>
 <text x="92507" y="4763" fill="#000000" font-family="Arial" font-size="10">- pool_: std::unique_ptr</text>
 <text x="92507" y="4787" fill="#000000" font-family="Arial" font-size="10">+ createSDPOffer (inv: pjsip_inv_session *, pjmedia_sdp_session **p_offer) void</text>
 <text x="92507" y="4803" fill="#000000" font-family="Arial" font-size="10">+ getTransportSelector (transport: pjsip_transport *) pjsip_tpselector</text>
 <text x="92507" y="4819" fill="#000000" font-family="Arial" font-size="10">+ SIPVoIPLink () </text>
 <text x="92507" y="4835" fill="#000000" font-family="Arial" font-size="10">+ SIPVoIPLink () </text>
 <text x="92507" y="4851" fill="#000000" font-family="Arial" font-size="10">+ cancelKeepAliveTimer (timer: pj_timer_entry &amp; ) void</text>
 <text x="92507" y="4867" fill="#000000" font-family="Arial" font-size="10">+ createDefaultSipUdpTransport () void</text>
 <text x="92507" y="4883" fill="#000000" font-family="Arial" font-size="10">+ getCachingPool () pj_caching_pool *</text>
 <text x="92507" y="4899" fill="#000000" font-family="Arial" font-size="10">+ getCallIDs () std::vector</text>
 <text x="92507" y="4915" fill="#000000" font-family="Arial" font-size="10">+ getEndpoint () pjsip_endpoint *</text>
 <text x="92507" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getMemoryPoolFactory () pj_caching_pool *</text>
 <text x="92507" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getMod () pjsip_module *</text>
 <text x="92507" y="4963" fill="#000000" font-family="Arial" font-size="10">+ getModId () int</text>
 <text x="92507" y="4979" fill="#000000" font-family="Arial" font-size="10">+ getPool () pj_pool_t *</text>
 <text x="92507" y="4995" fill="#000000" font-family="Arial" font-size="10">+ handleEvents () void</text>
 <text x="92507" y="5011" fill="#000000" font-family="Arial" font-size="10">+ operator= () SIPVoIPLink &amp;</text>
 <text x="92507" y="5027" fill="#000000" font-family="Arial" font-size="10">+ registerKeepAliveTimer (timer: pj_timer_entry &amp; , delay: pj_time_val &amp; ) void</text>
 <text x="92507" y="5043" fill="#000000" font-family="Arial" font-size="10">+ resolveSrvName (name: const std::string &amp; , type: pjsip_transport_type_e , cb: SrvResolveCallback ) void</text>
 <text x="92507" y="5059" fill="#000000" font-family="Arial" font-size="10">+ ~SIPVoIPLink () </text>
 <text x="92507" y="5075" fill="#000000" font-family="Arial" font-size="10">+ findLocalAddressFromSTUN (transport: pjsip_transport *, stunServerName: pj_str_t *, stunPort: int , address: std::string &amp; , port: pj_uint16_t &amp; ) bool</text>
 <text x="92507" y="5091" fill="#000000" font-family="Arial" font-size="10">+ findLocalAddressFromTransport (transport: pjsip_transport *, transportType: pjsip_transport_type_e , host: const std::string &amp; , address: std::string &amp; , port: pj_uint16_t &amp; ) void</text>
 <text x="92507" y="5107" fill="#000000" font-family="Arial" font-size="10">+ guessAccount (userName: const std::string &amp; , server: const std::string &amp; , fromUri: const std::string &amp; ) std::shared_ptr</text>
 <polygon points="93556,5061 93556,4749 93725,4749 93725,5061 93556,5061" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="93556,4773 93725,4773" stroke="#0000ff" fill="none"/>
 <polyline points="93556,5037 93725,5037" stroke="#0000ff" fill="none"/>
 <text x="93601" y="4763" fill="#000000" font-family="Arial" font-size="10">SRTPContext</text>
 <text x="93564" y="4787" fill="#000000" font-family="Arial" font-size="10">+ aes: struct AVAES *</text>
 <text x="93564" y="4803" fill="#000000" font-family="Arial" font-size="10">+ hmac: struct AVHMAC *</text>
 <text x="93564" y="4819" fill="#000000" font-family="Arial" font-size="10">+ master_key: uint8_t [16]</text>
 <text x="93564" y="4835" fill="#000000" font-family="Arial" font-size="10">+ master_salt: uint8_t [14]</text>
 <text x="93564" y="4851" fill="#000000" font-family="Arial" font-size="10">+ roc: uint32_t</text>
 <text x="93564" y="4867" fill="#000000" font-family="Arial" font-size="10">+ rtcp_auth: uint8_t [20]</text>
 <text x="93564" y="4883" fill="#000000" font-family="Arial" font-size="10">+ rtcp_hmac_size: int</text>
 <text x="93564" y="4899" fill="#000000" font-family="Arial" font-size="10">+ rtcp_index: uint32_t</text>
 <text x="93564" y="4915" fill="#000000" font-family="Arial" font-size="10">+ rtcp_key: uint8_t [16]</text>
 <text x="93564" y="4931" fill="#000000" font-family="Arial" font-size="10">+ rtcp_salt: uint8_t [14]</text>
 <text x="93564" y="4947" fill="#000000" font-family="Arial" font-size="10">+ rtp_auth: uint8_t [20]</text>
 <text x="93564" y="4963" fill="#000000" font-family="Arial" font-size="10">+ rtp_hmac_size: int</text>
 <text x="93564" y="4979" fill="#000000" font-family="Arial" font-size="10">+ rtp_key: uint8_t [16]</text>
 <text x="93564" y="4995" fill="#000000" font-family="Arial" font-size="10">+ rtp_salt: uint8_t [14]</text>
 <text x="93564" y="5011" fill="#000000" font-family="Arial" font-size="10">+ seq_initialized: int</text>
 <text x="93564" y="5027" fill="#000000" font-family="Arial" font-size="10">+ seq_largest: int</text>
 <text x="93638" y="5051" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="93743,4973 93743,4837 94415,4837 94415,4973 93743,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="93743,4861 94415,4861" stroke="#0000ff" fill="none"/>
 <polyline points="93743,4885 94415,4885" stroke="#0000ff" fill="none"/>
 <text x="94010" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::SRTPProtoContext</text>
 <text x="93751" y="4875" fill="#000000" font-family="Arial" font-size="10">+ encryptbuf: uint8_t [RTP_MAX_PACKET_LENGTH]</text>
 <text x="93751" y="4899" fill="#000000" font-family="Arial" font-size="10">+ SRTPProtoContext (out_suite: const char *, out_key: const char *, in_suite: const char *, in_key: const char *) </text>
 <text x="93751" y="4915" fill="#000000" font-family="Arial" font-size="10">+ srtp_in () SRTPContext</text>
 <text x="93751" y="4931" fill="#000000" font-family="Arial" font-size="10">+ srtp_out () SRTPContext</text>
 <text x="93751" y="4947" fill="#000000" font-family="Arial" font-size="10">+ ~SRTPProtoContext () </text>
 <text x="93751" y="4963" fill="#000000" font-family="Arial" font-size="10">- srtp_close () void</text>
 <polygon points="94434,4957 94434,4853 94967,4853 94967,4957 94434,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="94434,4877 94967,4877" stroke="#0000ff" fill="none"/>
 <polyline points="94434,4917 94967,4917" stroke="#0000ff" fill="none"/>
 <text x="94627" y="4867" fill="#000000" font-family="Arial" font-size="10">SafeResolveCallbackMap</text>
 <text x="94442" y="4891" fill="#000000" font-family="Arial" font-size="10">- cbMap_: std::map</text>
 <text x="94442" y="4907" fill="#000000" font-family="Arial" font-size="10">- mutex_: std::mutex</text>
 <text x="94442" y="4931" fill="#000000" font-family="Arial" font-size="10">+ process (key: uintptr_t , status: pj_status_t , addr: const pjsip_server_addresses *) void</text>
 <text x="94442" y="4947" fill="#000000" font-family="Arial" font-size="10">+ registerCallback (key: uintptr_t , ResolveCallback) void</text>
 <polygon points="94985,4957 94985,4853 95328,4853 95328,4957 94985,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="94985,4877 95328,4877" stroke="#0000ff" fill="none"/>
 <polyline points="94985,4933 95328,4933" stroke="#0000ff" fill="none"/>
 <text x="95045" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::RingAccount::SavedTrustRequest</text>
 <text x="94993" y="4891" fill="#000000" font-family="Arial" font-size="10">+ device: dht::InfoHash</text>
 <text x="94993" y="4907" fill="#000000" font-family="Arial" font-size="10">+ payload: std::vector</text>
 <text x="94993" y="4923" fill="#000000" font-family="Arial" font-size="10">+ received: time_t</text>
 <text x="94993" y="4947" fill="#000000" font-family="Arial" font-size="10">+ MSGPACK_DEFINE_MAP (device, received, payload) </text>
 <polygon points="95346,4949 95346,4861 95555,4861 95555,4949 95346,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="95346,4885 95555,4885" stroke="#0000ff" fill="none"/>
 <polyline points="95346,4909 95555,4909" stroke="#0000ff" fill="none"/>
 <text x="95401" y="4875" fill="#000000" font-family="Arial" font-size="10">dev::ScopeGuard</text>
 <text x="95354" y="4899" fill="#000000" font-family="Arial" font-size="10">- m_f: std::function</text>
 <text x="95354" y="4923" fill="#000000" font-family="Arial" font-size="10">+ ScopeGuard (_f: std::function ) </text>
 <text x="95354" y="4939" fill="#000000" font-family="Arial" font-size="10">+ ~ScopeGuard () </text>
 <polygon points="95573,4973 95573,4837 95932,4837 95932,4973 95573,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="95573,4861 95932,4861" stroke="#0000ff" fill="none"/>
 <polyline points="95573,4885 95932,4885" stroke="#0000ff" fill="none"/>
 <text x="95693" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::SdesNegotiator</text>
 <text x="95581" y="4875" fill="#000000" font-family="Arial" font-size="10">- localCapabilities_: std::vector</text>
 <text x="95581" y="4899" fill="#000000" font-family="Arial" font-size="10">+ SdesNegotiator () </text>
 <text x="95581" y="4915" fill="#000000" font-family="Arial" font-size="10">+ SdesNegotiator (localCapabilites: const std::vector &amp; ) </text>
 <text x="95581" y="4931" fill="#000000" font-family="Arial" font-size="10">+ negotiate (attributes: const std::vector &amp; ) CryptoAttribute</text>
 <text x="95581" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator bool () </text>
 <text x="95581" y="4963" fill="#000000" font-family="Arial" font-size="10">- parse (attributes: const std::vector &amp; ) std::vector</text>
 <polygon points="95950,5445 95950,4365 96745,4365 96745,5445 95950,5445" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="95950,4389 96745,4389" stroke="#0000ff" fill="none"/>
 <polyline points="95950,4477 96745,4477" stroke="#0000ff" fill="none"/>
 <text x="96321" y="4379" fill="#000000" font-family="Arial" font-size="10">ring::Sdp</text>
 <text x="95958" y="4403" fill="#000000" font-family="Arial" font-size="10">- memPool_: std::unique_ptr</text>
 <text x="95958" y="4419" fill="#000000" font-family="Arial" font-size="10">- publishedIpAddrType_: pj_uint16_t</text>
 <text x="95958" y="4435" fill="#000000" font-family="Arial" font-size="10">- publishedIpAddr_: std::string</text>
 <text x="95958" y="4451" fill="#000000" font-family="Arial" font-size="10">- sdesNego_: SdesNegotiator</text>
 <text x="95958" y="4467" fill="#000000" font-family="Arial" font-size="10">- telephoneEventPayload_: unsigned int</text>
 <text x="95958" y="4491" fill="#000000" font-family="Arial" font-size="10">+ getIceAttributes (session: const pjmedia_sdp_session *) IceTransport::Attribute</text>
 <text x="95958" y="4507" fill="#000000" font-family="Arial" font-size="10">+ Sdp (id: const std::string &amp; ) </text>
 <text x="95958" y="4523" fill="#000000" font-family="Arial" font-size="10">+ Sdp () </text>
 <text x="95958" y="4539" fill="#000000" font-family="Arial" font-size="10">+ addIceAttributes (IceTransport: const ) void</text>
 <text x="95958" y="4555" fill="#000000" font-family="Arial" font-size="10">+ addIceAttributes (IceTransport: const ) void</text>
 <text x="95958" y="4571" fill="#000000" font-family="Arial" font-size="10">+ addIceCandidates (media_index: unsigned , cands: const std::vector &amp; ) void</text>
 <text x="95958" y="4587" fill="#000000" font-family="Arial" font-size="10">+ cleanSessionMedia () void</text>
 <text x="95958" y="4603" fill="#000000" font-family="Arial" font-size="10">+ clearIce () void</text>
 <text x="95958" y="4619" fill="#000000" font-family="Arial" font-size="10">+ createOffer (std: const , std: const , security: sip_utils::KeyExchangeProtocol , holding: bool ) bool</text>
 <text x="95958" y="4635" fill="#000000" font-family="Arial" font-size="10">+ getLocalSdpSession () pjmedia_sdp_session *</text>
 <text x="95958" y="4651" fill="#000000" font-family="Arial" font-size="10">+ getRemoteSdpSession () pjmedia_sdp_session *</text>
 <text x="95958" y="4667" fill="#000000" font-family="Arial" font-size="10">+ operator= () Sdp &amp;</text>
 <text x="95958" y="4683" fill="#000000" font-family="Arial" font-size="10">+ receiveOffer (remote: const pjmedia_sdp_session *, std: const , std: const , kx: sip_utils::KeyExchangeProtocol , holding: bool ) void</text>
 <text x="95958" y="4699" fill="#000000" font-family="Arial" font-size="10">+ setActiveLocalSdpSession (sdp: const pjmedia_sdp_session *) void</text>
 <text x="95958" y="4715" fill="#000000" font-family="Arial" font-size="10">+ setActiveRemoteSdpSession (sdp: const pjmedia_sdp_session *) void</text>
 <text x="95958" y="4731" fill="#000000" font-family="Arial" font-size="10">+ setLocalPublishedAudioPort (port: int ) void</text>
 <text x="95958" y="4747" fill="#000000" font-family="Arial" font-size="10">+ setLocalPublishedAudioPorts (audio_port: int , control_port: int ) void</text>
 <text x="95958" y="4763" fill="#000000" font-family="Arial" font-size="10">+ setLocalPublishedVideoPort (port: int ) void</text>
 <text x="95958" y="4779" fill="#000000" font-family="Arial" font-size="10">+ setLocalPublishedVideoPorts (video_port: int , control_port: int ) void</text>
 <text x="95958" y="4795" fill="#000000" font-family="Arial" font-size="10">+ setPublishedIP (addr: const std::string &amp; , addr_type: pj_uint16_t ) void</text>
 <text x="95958" y="4811" fill="#000000" font-family="Arial" font-size="10">+ setPublishedIP (ip_addr: const IpAddr &amp; ) void</text>
 <text x="95958" y="4827" fill="#000000" font-family="Arial" font-size="10">+ startNegotiation () void</text>
 <text x="95958" y="4843" fill="#000000" font-family="Arial" font-size="10">+ ~Sdp () </text>
 <text x="95958" y="4859" fill="#000000" font-family="Arial" font-size="10">+ getActiveLocalSdpSession () const pjmedia_sdp_session *</text>
 <text x="95958" y="4875" fill="#000000" font-family="Arial" font-size="10">+ getActiveRemoteSdpSession () const pjmedia_sdp_session *</text>
 <text x="95958" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getIceAttributes () IceTransport::Attribute</text>
 <text x="95958" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getIceCandidates (media_index: unsigned ) std::vector</text>
 <text x="95958" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getLocalAudioControlPort () unsigned int</text>
 <text x="95958" y="4939" fill="#000000" font-family="Arial" font-size="10">+ getLocalAudioPort () unsigned int</text>
 <text x="95958" y="4955" fill="#000000" font-family="Arial" font-size="10">+ getLocalVideoControlPort () unsigned int</text>
 <text x="95958" y="4971" fill="#000000" font-family="Arial" font-size="10">+ getLocalVideoPort () unsigned int</text>
 <text x="95958" y="4987" fill="#000000" font-family="Arial" font-size="10">+ getMediaSlots (session: const pjmedia_sdp_session *, remote: bool ) std::vector</text>
 <text x="95958" y="5003" fill="#000000" font-family="Arial" font-size="10">+ getMediaSlots () std::vector</text>
 <text x="95958" y="5019" fill="#000000" font-family="Arial" font-size="10">+ getPublishedIP () std::string</text>
 <text x="95958" y="5035" fill="#000000" font-family="Arial" font-size="10">+ getPublishedIPAddr () IpAddr</text>
 <text x="95958" y="5051" fill="#000000" font-family="Arial" font-size="10">+ getTelephoneEventType () unsigned int</text>
 <text x="95958" y="5067" fill="#000000" font-family="Arial" font-size="10">- clearIce (session: pjmedia_sdp_session *) void</text>
 <text x="95958" y="5083" fill="#000000" font-family="Arial" font-size="10">- getFilteredSdp (session: const pjmedia_sdp_session *, media_keep: unsigned , pt_keep: unsigned ) std::string</text>
 <text x="95958" y="5099" fill="#000000" font-family="Arial" font-size="10">- activeLocalSession_ () const pjmedia_sdp_session *</text>
 <text x="95958" y="5115" fill="#000000" font-family="Arial" font-size="10">- activeRemoteSession_ () const pjmedia_sdp_session *</text>
 <text x="95958" y="5131" fill="#000000" font-family="Arial" font-size="10">- addRTCPAttribute (med: pjmedia_sdp_media *) void</text>
 <text x="95958" y="5147" fill="#000000" font-family="Arial" font-size="10">- addSdesAttribute (crypto: const std::vector &amp; ) void</text>
 <text x="95958" y="5163" fill="#000000" font-family="Arial" font-size="10">- createLocalSession (std: const , std: const , security: sip_utils::KeyExchangeProtocol , holding: bool ) int</text>
 <text x="95958" y="5179" fill="#000000" font-family="Arial" font-size="10">- findCodecByPayload (payloadType: const unsigned ) std::shared_ptr</text>
 <text x="95958" y="5195" fill="#000000" font-family="Arial" font-size="10">- generateSdesAttribute () pjmedia_sdp_attr *</text>
 <text x="95958" y="5211" fill="#000000" font-family="Arial" font-size="10">- localAudioControlPort_ () int</text>
 <text x="95958" y="5227" fill="#000000" font-family="Arial" font-size="10">- localAudioDataPort_ () int</text>
 <text x="95958" y="5243" fill="#000000" font-family="Arial" font-size="10">- localSession_ () pjmedia_sdp_session *</text>
 <text x="95958" y="5259" fill="#000000" font-family="Arial" font-size="10">- localVideoControlPort_ () int</text>
 <text x="95958" y="5275" fill="#000000" font-family="Arial" font-size="10">- localVideoDataPort_ () int</text>
 <text x="95958" y="5291" fill="#000000" font-family="Arial" font-size="10">- negotiator_ () pjmedia_sdp_neg *</text>
 <text x="95958" y="5307" fill="#000000" font-family="Arial" font-size="10">- remoteSession_ () pjmedia_sdp_session *</text>
 <text x="95958" y="5323" fill="#000000" font-family="Arial" font-size="10">- setLocalMediaAudioCapabilities (std: const ) void</text>
 <text x="95958" y="5339" fill="#000000" font-family="Arial" font-size="10">- setLocalMediaVideoCapabilities (std: const ) void</text>
 <text x="95958" y="5355" fill="#000000" font-family="Arial" font-size="10">- setMediaDescriptorLines (audio: bool , holding: bool , kx: sip_utils::KeyExchangeProtocol ) pjmedia_sdp_media *</text>
 <text x="95958" y="5371" fill="#000000" font-family="Arial" font-size="10">- setTelephoneEventRtpmap (med: pjmedia_sdp_media *) void</text>
 <text x="95958" y="5387" fill="#000000" font-family="Arial" font-size="10">- findCodecBySpec (codec: const std::string &amp; , clockrate: const unsigned ) std::shared_ptr</text>
 <text x="95958" y="5403" fill="#000000" font-family="Arial" font-size="10">- getLineFromSession (sess: const pjmedia_sdp_session *, keyword: const std::string &amp; ) std::string</text>
 <text x="95958" y="5419" fill="#000000" font-family="Arial" font-size="10">- getOutgoingVideoField (codec: const std::string &amp; , key: const char *) std::string</text>
 <text x="95958" y="5435" fill="#000000" font-family="Arial" font-size="10">- getProfileLevelID (session: const pjmedia_sdp_session *, dest: std::string &amp; , payload: int ) void</text>
 <polygon points="13285,4941 13285,4869 13544,4869 13544,4941 13285,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="13285,4893 13544,4893" stroke="#0000ff" fill="none"/>
 <polyline points="13285,4917 13544,4917" stroke="#0000ff" fill="none"/>
 <text x="13359" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::SdpException</text>
 <text x="13412" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="13293" y="4931" fill="#000000" font-family="Arial" font-size="10">+ SdpException (str: const std::string &amp; ) </text>
 <polyline points="13411,4869 13403,4765 13392,4605 13377,4404 13360,4175 13342,3931 13324,3686 13307,3454 13292,3248 13279,3082 13271,2969" stroke="#CC0044" fill="none"/>
 <polygon points="13268,2969 13271,2959 13275,2969 13268,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="96763,5197 96763,4613 97377,4613 97377,5197 96763,5197" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="96763,4637 97377,4637" stroke="#0000ff" fill="none"/>
 <polyline points="96763,4805 97377,4805" stroke="#0000ff" fill="none"/>
 <text x="96993" y="4627" fill="#000000" font-family="Arial" font-size="10">dev::crypto::Secp256k1PP</text>
 <text x="96771" y="4651" fill="#000000" font-family="Arial" font-size="10">- s_this: Secp256k1PP *= nullptr</text>
 <text x="96771" y="4667" fill="#000000" font-family="Arial" font-size="10">- m_curve: DL_GroupParameters_EC::EllipticCurve</text>
 <text x="96771" y="4683" fill="#000000" font-family="Arial" font-size="10">- m_oid: OID</text>
 <text x="96771" y="4699" fill="#000000" font-family="Arial" font-size="10">- m_params: DL_GroupParameters_EC</text>
 <text x="96771" y="4715" fill="#000000" font-family="Arial" font-size="10">- m_q: Integer</text>
 <text x="96771" y="4731" fill="#000000" font-family="Arial" font-size="10">- m_qs: Integer</text>
 <text x="96771" y="4747" fill="#000000" font-family="Arial" font-size="10">- m_rng: AutoSeededRandomPool</text>
 <text x="96771" y="4763" fill="#000000" font-family="Arial" font-size="10">- x_curve: std::mutex</text>
 <text x="96771" y="4779" fill="#000000" font-family="Arial" font-size="10">- x_params: std::mutex</text>
 <text x="96771" y="4795" fill="#000000" font-family="Arial" font-size="10">- x_rng: std::mutex</text>
 <text x="96771" y="4819" fill="#000000" font-family="Arial" font-size="10">+ get () Secp256k1PP *</text>
 <text x="96771" y="4835" fill="#000000" font-family="Arial" font-size="10">+ agree (_s: Secret const &amp; , _r: Public const &amp; , o_s: Secret &amp; ) void</text>
 <text x="96771" y="4851" fill="#000000" font-family="Arial" font-size="10">+ decrypt (_k: Secret const &amp; , io_text: bytes &amp; ) void</text>
 <text x="96771" y="4867" fill="#000000" font-family="Arial" font-size="10">+ decryptECIES (_k: Secret const &amp; , io_text: bytes &amp; ) bool</text>
 <text x="96771" y="4883" fill="#000000" font-family="Arial" font-size="10">+ decryptECIES (_k: Secret const &amp; , _sharedMacData: bytesConstRef , io_text: bytes &amp; ) bool</text>
 <text x="96771" y="4899" fill="#000000" font-family="Arial" font-size="10">+ eciesKDF (_z: Secret const &amp; , _s1: bytes , kdByteLen: unsigned ) bytes</text>
 <text x="96771" y="4915" fill="#000000" font-family="Arial" font-size="10">+ encrypt (_k: Public const &amp; , io_cipher: bytes &amp; ) void</text>
 <text x="96771" y="4931" fill="#000000" font-family="Arial" font-size="10">+ encryptECIES (_k: Public const &amp; , io_cipher: bytes &amp; ) void</text>
 <text x="96771" y="4947" fill="#000000" font-family="Arial" font-size="10">+ encryptECIES (_k: Public const &amp; , _sharedMacData: bytesConstRef , io_cipher: bytes &amp; ) void</text>
 <text x="96771" y="4963" fill="#000000" font-family="Arial" font-size="10">+ exportPublicKey (_k: CryptoPP::DL_PublicKey_EC const &amp; , o_p: Public &amp; ) void</text>
 <text x="96771" y="4979" fill="#000000" font-family="Arial" font-size="10">+ recover (_signature: Signature , _message: bytesConstRef ) Public</text>
 <text x="96771" y="4995" fill="#000000" font-family="Arial" font-size="10">+ sign (_k: Secret const &amp; , _message: bytesConstRef ) Signature</text>
 <text x="96771" y="5011" fill="#000000" font-family="Arial" font-size="10">+ sign (_k: Secret const &amp; , _hash: h256 const &amp; ) Signature</text>
 <text x="96771" y="5027" fill="#000000" font-family="Arial" font-size="10">+ sign (_key: Secret const &amp; , _hash: h256 const &amp; ) Signature</text>
 <text x="96771" y="5043" fill="#000000" font-family="Arial" font-size="10">+ toPublic (_s: Secret const &amp; , o_public: Public &amp; ) void</text>
 <text x="96771" y="5059" fill="#000000" font-family="Arial" font-size="10">+ verify (_signature: Signature const &amp; , _message: bytesConstRef ) bool</text>
 <text x="96771" y="5075" fill="#000000" font-family="Arial" font-size="10">+ verify (_p: Public const &amp; , _sig: Signature const &amp; , _message: bytesConstRef , _hashed: bool ) bool</text>
 <text x="96771" y="5091" fill="#000000" font-family="Arial" font-size="10">+ verifySecret (_s: Secret const &amp; , _p: Public &amp; ) bool</text>
 <text x="96771" y="5107" fill="#000000" font-family="Arial" font-size="10"># initializeDLScheme (_s: Secret const &amp; , io_operator: T &amp; ) void</text>
 <text x="96771" y="5123" fill="#000000" font-family="Arial" font-size="10"># initializeDLScheme (_p: Public const &amp; , io_operator: T &amp; ) void</text>
 <text x="96771" y="5139" fill="#000000" font-family="Arial" font-size="10"># exponentToPublic (_e: Integer const &amp; , o_p: Public &amp; ) void</text>
 <text x="96771" y="5155" fill="#000000" font-family="Arial" font-size="10"># exportPrivateKey (_k: DL_PrivateKey_EC const &amp; , o_s: Secret &amp; ) void</text>
 <text x="96771" y="5171" fill="#000000" font-family="Arial" font-size="10"># exportPublicKey (_k: DL_PublicKey_EC const &amp; , o_p: Public &amp; ) void</text>
 <text x="96771" y="5187" fill="#000000" font-family="Arial" font-size="10">- Secp256k1PP () </text>
 <polygon points="97395,4941 97395,4869 97703,4869 97703,4941 97395,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="97395,4893 97703,4893" stroke="#0000ff" fill="none"/>
 <polyline points="97395,4917 97703,4917" stroke="#0000ff" fill="none"/>
 <text x="97451" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::SecureSdesOff</text>
 <text x="97403" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;SecureSdesOff&quot;</text>
 <text x="97547" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="97722,4941 97722,4869 98031,4869 98031,4941 97722,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="97722,4893 98031,4893" stroke="#0000ff" fill="none"/>
 <polyline points="97722,4917 98031,4917" stroke="#0000ff" fill="none"/>
 <text x="97778" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::SecureSdesOn</text>
 <text x="97730" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;SecureSdesOn&quot;</text>
 <text x="97874" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="98049,4941 98049,4869 98334,4869 98334,4941 98049,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="98049,4893 98334,4893" stroke="#0000ff" fill="none"/>
 <polyline points="98049,4917 98334,4917" stroke="#0000ff" fill="none"/>
 <text x="98088" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::PresenceSignal::ServerError</text>
 <text x="98057" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;ServerError&quot;</text>
 <text x="98189" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="4,1593 4,1217 372,1217 372,1593 4,1593" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="4,1241 372,1241" stroke="#0000ff" fill="none"/>
 <polyline points="4,1345 372,1345" stroke="#0000ff" fill="none"/>
 <text x="115" y="1231" fill="#000000" font-family="Arial" font-size="10">ring::ShortcutPreferences</text>
 <text x="12" y="1255" fill="#000000" font-family="Arial" font-size="10">- CONFIG_LABEL: constexpr const char *const= &quot;shortcuts&quot;</text>
 <text x="12" y="1271" fill="#000000" font-family="Arial" font-size="10">- hangup_: std::string</text>
 <text x="12" y="1287" fill="#000000" font-family="Arial" font-size="10">- pickup_: std::string</text>
 <text x="12" y="1303" fill="#000000" font-family="Arial" font-size="10">- popup_: std::string</text>
 <text x="12" y="1319" fill="#000000" font-family="Arial" font-size="10">- toggleHold_: std::string</text>
 <text x="12" y="1335" fill="#000000" font-family="Arial" font-size="10">- togglePickupHangup_: std::string</text>
 <text x="12" y="1359" fill="#000000" font-family="Arial" font-size="10">+ serialize (out: YAML::Emitter &amp; ) void Virtual</text>
 <text x="12" y="1375" fill="#000000" font-family="Arial" font-size="10">+ unserialize (in: const YAML::Node &amp; ) void Virtual</text>
 <text x="12" y="1391" fill="#000000" font-family="Arial" font-size="10">+ ShortcutPreferences () </text>
 <text x="12" y="1407" fill="#000000" font-family="Arial" font-size="10">+ setHangup (hangup: const std::string &amp; ) void</text>
 <text x="12" y="1423" fill="#000000" font-family="Arial" font-size="10">+ setPickup (pickup: const std::string &amp; ) void</text>
 <text x="12" y="1439" fill="#000000" font-family="Arial" font-size="10">+ setPopup (popup: const std::string &amp; ) void</text>
 <text x="12" y="1455" fill="#000000" font-family="Arial" font-size="10">+ setShortcuts (map: std::map ) void</text>
 <text x="12" y="1471" fill="#000000" font-family="Arial" font-size="10">+ setToggleHold (hold: const std::string &amp; ) void</text>
 <text x="12" y="1487" fill="#000000" font-family="Arial" font-size="10">+ setTogglePickupHangup (toggle: const std::string &amp; ) void</text>
 <text x="12" y="1503" fill="#000000" font-family="Arial" font-size="10">+ getHangup () std::string</text>
 <text x="12" y="1519" fill="#000000" font-family="Arial" font-size="10">+ getPickup () std::string</text>
 <text x="12" y="1535" fill="#000000" font-family="Arial" font-size="10">+ getPopup () std::string</text>
 <text x="12" y="1551" fill="#000000" font-family="Arial" font-size="10">+ getShortcuts () std::map</text>
 <text x="12" y="1567" fill="#000000" font-family="Arial" font-size="10">+ getToggleHold () std::string</text>
 <text x="12" y="1583" fill="#000000" font-family="Arial" font-size="10">+ getTogglePickupHangup () std::string</text>
 <polyline points="173,1217 172,1153 174,1083 180,1010 189,934 204,857 225,781 252,707 287,636 329,571 381,512 426,479 489,451 566,426 654,404 750,385 850,369 951,356 1051,345 1145,337 1230,330" stroke="#CC0044" fill="none"/>
 <polygon points="1230,327 1240,330 1230,334 1230,327" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="98352,4997 98352,4813 98754,4813 98754,4997 98352,4997" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="98352,4837 98754,4837" stroke="#0000ff" fill="none"/>
 <polyline points="98352,4893 98754,4893" stroke="#0000ff" fill="none"/>
 <text x="98495" y="4827" fill="#000000" font-family="Arial" font-size="10">dev::SignatureStruct</text>
 <text x="98360" y="4851" fill="#000000" font-family="Arial" font-size="10">+ r: h256</text>
 <text x="98360" y="4867" fill="#000000" font-family="Arial" font-size="10">+ s: h256</text>
 <text x="98360" y="4883" fill="#000000" font-family="Arial" font-size="10">+ v: byte</text>
 <text x="98360" y="4907" fill="#000000" font-family="Arial" font-size="10">+ SignatureStruct () </text>
 <text x="98360" y="4923" fill="#000000" font-family="Arial" font-size="10">+ SignatureStruct (_s: Signature const &amp; ) </text>
 <text x="98360" y="4939" fill="#000000" font-family="Arial" font-size="10">+ SignatureStruct (_r: h256 const &amp; , _s: h256 const &amp; , _v: byte ) </text>
 <text x="98360" y="4955" fill="#000000" font-family="Arial" font-size="10">+ isValid () bool</text>
 <text x="98360" y="4971" fill="#000000" font-family="Arial" font-size="10">+ operator Signature () </text>
 <text x="98360" y="4987" fill="#000000" font-family="Arial" font-size="10">+ recover (_hash: h256 const &amp; ) Public</text>
 <polygon points="98773,4949 98773,4861 98908,4861 98908,4949 98773,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="98773,4885 98908,4885" stroke="#0000ff" fill="none"/>
 <polyline points="98773,4925 98908,4925" stroke="#0000ff" fill="none"/>
 <text x="98788" y="4875" fill="#000000" font-family="Arial" font-size="10">DRing::SinkTarget</text>
 <text x="98781" y="4899" fill="#000000" font-family="Arial" font-size="10">+ pull: std::function</text>
 <text x="98781" y="4915" fill="#000000" font-family="Arial" font-size="10">+ push: std::function</text>
 <text x="98838" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="98926,4941 98926,4869 99037,4869 99037,4941 98926,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="98926,4893 99037,4893" stroke="#0000ff" fill="none"/>
 <polyline points="98926,4917 99037,4917" stroke="#0000ff" fill="none"/>
 <text x="98934" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::SipCallMap</text>
 <text x="98979" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="98979" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="99055,4941 99055,4869 99399,4869 99399,4941 99055,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="99055,4893 99399,4893" stroke="#0000ff" fill="none"/>
 <polyline points="99055,4917 99399,4917" stroke="#0000ff" fill="none"/>
 <text x="99111" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::SipCallStateChanged</text>
 <text x="99063" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;SipCallStateChanged&quot;</text>
 <text x="99225" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="99418,4949 99418,4861 100045,4861 100045,4949 99418,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="99418,4885 100045,4885" stroke="#0000ff" fill="none"/>
 <polyline points="99418,4909 100045,4909" stroke="#0000ff" fill="none"/>
 <text x="99672" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::SipIceTransport</text>
 <text x="99426" y="4899" fill="#000000" font-family="Arial" font-size="10">+ base: pjsip_transport</text>
 <text x="99426" y="4923" fill="#000000" font-family="Arial" font-size="10">+ SipIceTransport (endpt: pjsip_endpoint *, pj_pool_t &amp;, long, ice: const std::shared_ptr &amp; , comp_id: int ) </text>
 <text x="99426" y="4939" fill="#000000" font-family="Arial" font-size="10">+ self () SipIceTransport *</text>
 <polygon points="100063,5101 100063,4709 100599,4709 100599,5101 100063,5101" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="100063,4733 100599,4733" stroke="#0000ff" fill="none"/>
 <polyline points="100063,4821 100599,4821" stroke="#0000ff" fill="none"/>
 <text x="100280" y="4723" fill="#000000" font-family="Arial" font-size="10">ring::SipTransport</text>
 <text x="100071" y="4747" fill="#000000" font-family="Arial" font-size="10">- stateListenersMutex_: std::mutex</text>
 <text x="100071" y="4763" fill="#000000" font-family="Arial" font-size="10">- stateListeners_: std::map</text>
 <text x="100071" y="4779" fill="#000000" font-family="Arial" font-size="10">- tlsInfos_: TlsInfos</text>
 <text x="100071" y="4795" fill="#000000" font-family="Arial" font-size="10">- tlsListener_: std::shared_ptr</text>
 <text x="100071" y="4811" fill="#000000" font-family="Arial" font-size="10">- transport_: std::unique_ptr</text>
 <text x="100071" y="4835" fill="#000000" font-family="Arial" font-size="10">+ isAlive (std: const , state: pjsip_transport_state ) bool</text>
 <text x="100071" y="4851" fill="#000000" font-family="Arial" font-size="10">+ stateToStr (state: pjsip_transport_state ) const char *</text>
 <text x="100071" y="4867" fill="#000000" font-family="Arial" font-size="10">+ SipTransport (t: pjsip_transport *) </text>
 <text x="100071" y="4883" fill="#000000" font-family="Arial" font-size="10">+ SipTransport (t: pjsip_transport *, l: const std::shared_ptr &amp; ) </text>
 <text x="100071" y="4899" fill="#000000" font-family="Arial" font-size="10">+ SipTransport () </text>
 <text x="100071" y="4915" fill="#000000" font-family="Arial" font-size="10">+ addStateListener (lid: uintptr_t , cb: SipTransportStateCallback ) void</text>
 <text x="100071" y="4931" fill="#000000" font-family="Arial" font-size="10">+ get () pjsip_transport *</text>
 <text x="100071" y="4947" fill="#000000" font-family="Arial" font-size="10">+ isAlive (__attribute__: (*) () , state: pjsip_transport_state ) bool</text>
 <text x="100071" y="4963" fill="#000000" font-family="Arial" font-size="10">+ operator= () SipTransport &amp;</text>
 <text x="100071" y="4979" fill="#000000" font-family="Arial" font-size="10">+ removeStateListener (lid: uintptr_t ) bool</text>
 <text x="100071" y="4995" fill="#000000" font-family="Arial" font-size="10">+ stateCallback (state: pjsip_transport_state , info: const pjsip_transport_state_info *) void</text>
 <text x="100071" y="5011" fill="#000000" font-family="Arial" font-size="10">+ ~SipTransport () </text>
 <text x="100071" y="5027" fill="#000000" font-family="Arial" font-size="10">+ getTlsInfos () const TlsInfos &amp;</text>
 <text x="100071" y="5043" fill="#000000" font-family="Arial" font-size="10">+ isConnected () bool</text>
 <text x="100071" y="5059" fill="#000000" font-family="Arial" font-size="10">+ isSecure () bool</text>
 <text x="100071" y="5075" fill="#000000" font-family="Arial" font-size="10">- deleteTransport (t: pjsip_transport *) void</text>
 <text x="100071" y="5091" fill="#000000" font-family="Arial" font-size="10">- connected_ () bool</text>
 <polygon points="100618,5077 100618,4733 101341,4733 101341,5077 100618,5077" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="100618,4757 101341,4757" stroke="#0000ff" fill="none"/>
 <polyline points="100618,4829 101341,4829" stroke="#0000ff" fill="none"/>
 <text x="100909" y="4747" fill="#000000" font-family="Arial" font-size="10">ring::SipTransportBroker</text>
 <text x="100626" y="4771" fill="#000000" font-family="Arial" font-size="10">- cp_: pj_caching_pool &amp;</text>
 <text x="100626" y="4787" fill="#000000" font-family="Arial" font-size="10">- endpt_: pjsip_endpoint *</text>
 <text x="100626" y="4803" fill="#000000" font-family="Arial" font-size="10">- pool_: pj_pool_t &amp;</text>
 <text x="100626" y="4819" fill="#000000" font-family="Arial" font-size="10">- udpTransports_: std::map</text>
 <text x="100626" y="4843" fill="#000000" font-family="Arial" font-size="10">+ SipTransportBroker (endpt: pjsip_endpoint *, cp: pj_caching_pool &amp; , pool: pj_pool_t &amp; ) </text>
 <text x="100626" y="4859" fill="#000000" font-family="Arial" font-size="10">+ SipTransportBroker () </text>
 <text x="100626" y="4875" fill="#000000" font-family="Arial" font-size="10">+ addTransport (t: pjsip_transport *) std::shared_ptr</text>
 <text x="100626" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getIceTransport (ice: const std::shared_ptr &amp; , comp_id: unsigned ) std::shared_ptr</text>
 <text x="100626" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getTlsIceTransport (ice: const std::shared_ptr &amp; , comp_id: unsigned , params: const tls::TlsParams &amp; ) std::shared_ptr</text>
 <text x="100626" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getTlsListener (d: const SipTransportDescr &amp; , settings: const pjsip_tls_setting *) std::shared_ptr</text>
 <text x="100626" y="4939" fill="#000000" font-family="Arial" font-size="10">+ getTlsTransport (l: const std::shared_ptr &amp; , remote: const IpAddr &amp; , remote_name: const std::string &amp; ) std::shared_ptr</text>
 <text x="100626" y="4955" fill="#000000" font-family="Arial" font-size="10">+ getUdpTransport (descr: const SipTransportDescr &amp; ) std::shared_ptr</text>
 <text x="100626" y="4971" fill="#000000" font-family="Arial" font-size="10">+ operator= () SipTransportBroker &amp;</text>
 <text x="100626" y="4987" fill="#000000" font-family="Arial" font-size="10">+ shutdown () void</text>
 <text x="100626" y="5003" fill="#000000" font-family="Arial" font-size="10">+ transportStateChanged (tp: pjsip_transport *, state: pjsip_transport_state , info: const pjsip_transport_state_info *) void</text>
 <text x="100626" y="5019" fill="#000000" font-family="Arial" font-size="10">+ ~SipTransportBroker () </text>
 <text x="100626" y="5035" fill="#000000" font-family="Arial" font-size="10">- createUdpTransport (d: const SipTransportDescr &amp; ) std::shared_ptr</text>
 <text x="100626" y="5051" fill="#000000" font-family="Arial" font-size="10">- ice_pj_transport_type_ () int</text>
 <text x="100626" y="5067" fill="#000000" font-family="Arial" font-size="10">- transportMapMutex_ () std::mutex</text>
 <polygon points="101359,5013 101359,4797 101843,4797 101843,5013 101359,5013" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="101359,4821 101843,4821" stroke="#0000ff" fill="none"/>
 <polyline points="101359,4845 101843,4845" stroke="#0000ff" fill="none"/>
 <text x="101533" y="4811" fill="#000000" font-family="Arial" font-size="10">ring::SipTransportDescr</text>
 <text x="101599" y="4835" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="101367" y="4859" fill="#000000" font-family="Arial" font-size="10">+ actualType (t: pjsip_transport_type_e ) pjsip_transport_type_e</text>
 <text x="101367" y="4875" fill="#000000" font-family="Arial" font-size="10">+ SipTransportDescr () </text>
 <text x="101367" y="4891" fill="#000000" font-family="Arial" font-size="10">+ SipTransportDescr (t: pjsip_transport_type_e ) </text>
 <text x="101367" y="4907" fill="#000000" font-family="Arial" font-size="10">+ SipTransportDescr (t: pjsip_transport_type_e , port: pj_uint16_t , i: std::string ) </text>
 <text x="101367" y="4923" fill="#000000" font-family="Arial" font-size="10">+ interface () std::string</text>
 <text x="101367" y="4939" fill="#000000" font-family="Arial" font-size="10">+ listenerPort () pj_uint16_t</text>
 <text x="101367" y="4955" fill="#000000" font-family="Arial" font-size="10">+ type () pjsip_transport_type_e</text>
 <text x="101367" y="4971" fill="#000000" font-family="Arial" font-size="10">+ operator&lt; (o: SipTransportDescr const &amp; ) bool</text>
 <text x="101367" y="4987" fill="#000000" font-family="Arial" font-size="10">+ operator== (o: SipTransportDescr const &amp; ) bool</text>
 <text x="101367" y="5003" fill="#000000" font-family="Arial" font-size="10">+ toString () std::string</text>
 <polygon points="101862,4949 101862,4861 102635,4861 102635,4949 101862,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="101862,4885 102635,4885" stroke="#0000ff" fill="none"/>
 <polyline points="101862,4909 102635,4909" stroke="#0000ff" fill="none"/>
 <text x="102174" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::tls::SipsIceTransport</text>
 <text x="101870" y="4899" fill="#000000" font-family="Arial" font-size="10">+ base: pjsip_transport</text>
 <text x="101870" y="4923" fill="#000000" font-family="Arial" font-size="10">+ SipsIceTransport (endpt: pjsip_endpoint *, tp_type: int , param: const TlsParams &amp; , ice: const std::shared_ptr &amp; , comp_id: int ) </text>
 <text x="101870" y="4939" fill="#000000" font-family="Arial" font-size="10">+ self () SipsIceTransport *</text>
 <polygon points="102653,4941 102653,4869 102929,4869 102929,4941 102653,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="102653,4893 102929,4893" stroke="#0000ff" fill="none"/>
 <polyline points="102653,4917 102929,4917" stroke="#0000ff" fill="none"/>
 <text x="102709" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::SmartInfo</text>
 <text x="102661" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;SmartInfo&quot;</text>
 <text x="102789" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="102948,5053 102948,4757 103535,4757 103535,5053 102948,5053" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="102948,4781 103535,4781" stroke="#0000ff" fill="none"/>
 <polyline points="102948,4837 103535,4837" stroke="#0000ff" fill="none"/>
 <text x="103197" y="4771" fill="#000000" font-family="Arial" font-size="10">ring::Smartools</text>
 <text x="102956" y="4795" fill="#000000" font-family="Arial" font-size="10">- information_: std::map</text>
 <text x="102956" y="4811" fill="#000000" font-family="Arial" font-size="10">- loop_: ThreadLoop</text>
 <text x="102956" y="4827" fill="#000000" font-family="Arial" font-size="10">- mutexInfo_: std::mutex</text>
 <text x="102956" y="4851" fill="#000000" font-family="Arial" font-size="10">+ getInstance () Smartools &amp;</text>
 <text x="102956" y="4867" fill="#000000" font-family="Arial" font-size="10">+ sendInfo () void</text>
 <text x="102956" y="4883" fill="#000000" font-family="Arial" font-size="10">+ setFrameRate (id: const std::string &amp; , fps: const std::string &amp; ) void</text>
 <text x="102956" y="4899" fill="#000000" font-family="Arial" font-size="10">+ setLocalAudioCodec (remoteAudioCodec: const std::string &amp; ) void</text>
 <text x="102956" y="4915" fill="#000000" font-family="Arial" font-size="10">+ setLocalVideoCodec (localVideoCodec: const std::string &amp; ) void</text>
 <text x="102956" y="4931" fill="#000000" font-family="Arial" font-size="10">+ setRemoteAudioCodec (remoteAudioCodec: const std::string &amp; ) void</text>
 <text x="102956" y="4947" fill="#000000" font-family="Arial" font-size="10">+ setRemoteVideoCodec (remoteVideoCodec: const std::string &amp; , callID: const std::string &amp; ) void</text>
 <text x="102956" y="4963" fill="#000000" font-family="Arial" font-size="10">+ setResolution (id: const std::string &amp; , width: int , height: int ) void</text>
 <text x="102956" y="4979" fill="#000000" font-family="Arial" font-size="10">+ start (refreshTimeMs: std::chrono::milliseconds ) void</text>
 <text x="102956" y="4995" fill="#000000" font-family="Arial" font-size="10">+ stop () void</text>
 <text x="102956" y="5011" fill="#000000" font-family="Arial" font-size="10">- Smartools () </text>
 <text x="102956" y="5027" fill="#000000" font-family="Arial" font-size="10">- process () void</text>
 <text x="102956" y="5043" fill="#000000" font-family="Arial" font-size="10">- refreshTimeMs_ () std::chrono::milliseconds</text>
 <polygon points="103553,5205 103553,4605 104207,4605 104207,5205 103553,5205" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="103553,4629 104207,4629" stroke="#0000ff" fill="none"/>
 <polyline points="103553,4813 104207,4813" stroke="#0000ff" fill="none"/>
 <text x="103834" y="4619" fill="#000000" font-family="Arial" font-size="10">ring::SocketPair</text>
 <text x="103561" y="4643" fill="#000000" font-family="Arial" font-size="10">- cv_: std::condition_variable</text>
 <text x="103561" y="4659" fill="#000000" font-family="Arial" font-size="10">- dataBuffMutex_: std::mutex</text>
 <text x="103561" y="4675" fill="#000000" font-family="Arial" font-size="10">- listRtcpHeader_: std::list</text>
 <text x="103561" y="4691" fill="#000000" font-family="Arial" font-size="10">- rtcpDestAddrLen_: socklen_t</text>
 <text x="103561" y="4707" fill="#000000" font-family="Arial" font-size="10">- rtcpDestAddr_: sockaddr_storage</text>
 <text x="103561" y="4723" fill="#000000" font-family="Arial" font-size="10">- rtcpInfo_mutex_: std::mutex</text>
 <text x="103561" y="4739" fill="#000000" font-family="Arial" font-size="10">- rtcp_sock_: std::unique_ptr</text>
 <text x="103561" y="4755" fill="#000000" font-family="Arial" font-size="10">- rtpDestAddrLen_: socklen_t</text>
 <text x="103561" y="4771" fill="#000000" font-family="Arial" font-size="10">- rtpDestAddr_: sockaddr_storage</text>
 <text x="103561" y="4787" fill="#000000" font-family="Arial" font-size="10">- rtp_sock_: std::unique_ptr</text>
 <text x="103561" y="4803" fill="#000000" font-family="Arial" font-size="10">- srtpContext_: std::unique_ptr</text>
 <text x="103561" y="4827" fill="#000000" font-family="Arial" font-size="10">+ SocketPair (uri: const char *, localPort: int ) </text>
 <text x="103561" y="4843" fill="#000000" font-family="Arial" font-size="10">+ SocketPair (rtp_sock: std::unique_ptr , rtcp_sock: std::unique_ptr ) </text>
 <text x="103561" y="4859" fill="#000000" font-family="Arial" font-size="10">+ SocketPair () </text>
 <text x="103561" y="4875" fill="#000000" font-family="Arial" font-size="10">+ closeSockets () void</text>
 <text x="103561" y="4891" fill="#000000" font-family="Arial" font-size="10">+ createIOContext () MediaIOHandle *</text>
 <text x="103561" y="4907" fill="#000000" font-family="Arial" font-size="10">+ createSRTP (out_suite: const char *, out_key: const char *, in_suite: const char *, in_key: const char *) void</text>
 <text x="103561" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getRtcpInfo () std::vector</text>
 <text x="103561" y="4939" fill="#000000" font-family="Arial" font-size="10">+ interrupt () void</text>
 <text x="103561" y="4955" fill="#000000" font-family="Arial" font-size="10">+ openSockets (uri: const char *, local_rtp_port: int ) void</text>
 <text x="103561" y="4971" fill="#000000" font-family="Arial" font-size="10">+ operator= () SocketPair &amp;</text>
 <text x="103561" y="4987" fill="#000000" font-family="Arial" font-size="10">+ stopSendOp (state: bool ) void</text>
 <text x="103561" y="5003" fill="#000000" font-family="Arial" font-size="10">+ ~SocketPair () </text>
 <text x="103561" y="5019" fill="#000000" font-family="Arial" font-size="10">- MAX_LIST_SIZE () constexpr unsigned</text>
 <text x="103561" y="5035" fill="#000000" font-family="Arial" font-size="10">- interrupted_ () std::atomic_bool</text>
 <text x="103561" y="5051" fill="#000000" font-family="Arial" font-size="10">- noWrite_ () std::atomic_bool</text>
 <text x="103561" y="5067" fill="#000000" font-family="Arial" font-size="10">- readCallback (buf: uint8_t *, buf_size: int ) int</text>
 <text x="103561" y="5083" fill="#000000" font-family="Arial" font-size="10">- readRtcpData (buf: void *, buf_size: int ) int</text>
 <text x="103561" y="5099" fill="#000000" font-family="Arial" font-size="10">- readRtpData (buf: void *, buf_size: int ) int</text>
 <text x="103561" y="5115" fill="#000000" font-family="Arial" font-size="10">- rtcpHandle_ () int</text>
 <text x="103561" y="5131" fill="#000000" font-family="Arial" font-size="10">- rtpHandle_ () int</text>
 <text x="103561" y="5147" fill="#000000" font-family="Arial" font-size="10">- saveRtcpPacket (buf: uint8_t *, len: size_t ) void</text>
 <text x="103561" y="5163" fill="#000000" font-family="Arial" font-size="10">- waitForData () int</text>
 <text x="103561" y="5179" fill="#000000" font-family="Arial" font-size="10">- writeCallback (buf: uint8_t *, buf_size: int ) int</text>
 <text x="103561" y="5195" fill="#000000" font-family="Arial" font-size="10">- writeData (buf: uint8_t *, buf_size: int ) int</text>
 <polygon points="104226,4941 104226,4869 104391,4869 104391,4941 104226,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="104226,4893 104391,4893" stroke="#0000ff" fill="none"/>
 <polyline points="104226,4917 104391,4917" stroke="#0000ff" fill="none"/>
 <text x="104234" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::DSP::SpeexStatePtr</text>
 <text x="104306" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="104306" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="104409,4957 104409,4853 104575,4853 104575,4957 104409,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="104409,4877 104575,4877" stroke="#0000ff" fill="none"/>
 <polyline points="104409,4901 104575,4901" stroke="#0000ff" fill="none"/>
 <text x="104452" y="4867" fill="#000000" font-family="Arial" font-size="10">dev::SpinLock</text>
 <text x="104417" y="4891" fill="#000000" font-family="Arial" font-size="10">- m_lock: std::atomic_flag</text>
 <text x="104417" y="4915" fill="#000000" font-family="Arial" font-size="10">+ SpinLock () </text>
 <text x="104417" y="4931" fill="#000000" font-family="Arial" font-size="10">+ lock () void</text>
 <text x="104417" y="4947" fill="#000000" font-family="Arial" font-size="10">+ unlock () void</text>
 <polygon points="104594,4965 104594,4845 104901,4845 104901,4965 104594,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="104594,4869 104901,4869" stroke="#0000ff" fill="none"/>
 <polyline points="104594,4893 104901,4893" stroke="#0000ff" fill="none"/>
 <text x="104707" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::SrcState</text>
 <text x="104745" y="4883" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="104602" y="4907" fill="#000000" font-family="Arial" font-size="10">+ SrcState (nb_channels: int , high_quality: bool ) </text>
 <text x="104602" y="4923" fill="#000000" font-family="Arial" font-size="10">+ process (src_data: SRC_DATA *) void</text>
 <text x="104602" y="4939" fill="#000000" font-family="Arial" font-size="10">+ ~SrcState () </text>
 <text x="104602" y="4955" fill="#000000" font-family="Arial" font-size="10">- state_ () SRC_STATE *</text>
 <polygon points="104919,4941 104919,4869 105157,4869 105157,4941 104919,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="104919,4893 105157,4893" stroke="#0000ff" fill="none"/>
 <polyline points="104919,4917 105157,4917" stroke="#0000ff" fill="none"/>
 <text x="104927" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::SIPVoIPLink::SrvResolveCallback</text>
 <text x="105036" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="105036" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="105175,4941 105175,4869 105469,4869 105469,4941 105175,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="105175,4893 105469,4893" stroke="#0000ff" fill="none"/>
 <polyline points="105175,4917 105469,4917" stroke="#0000ff" fill="none"/>
 <text x="105226" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::VideoSignal::StartCapture</text>
 <text x="105183" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;StartCapture&quot;</text>
 <text x="105320" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="105487,4941 105487,4869 105783,4869 105783,4941 105487,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="105487,4893 105783,4893" stroke="#0000ff" fill="none"/>
 <polyline points="105487,4917 105783,4917" stroke="#0000ff" fill="none"/>
 <text x="105543" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::StateChange</text>
 <text x="105495" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;StateChange&quot;</text>
 <text x="105633" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="105802,4941 105802,4869 105907,4869 105907,4941 105802,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="105802,4893 105907,4893" stroke="#0000ff" fill="none"/>
 <polyline points="105802,4917 105907,4917" stroke="#0000ff" fill="none"/>
 <text x="105810" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::StaticLog2</text>
 <text x="105810" y="4907" fill="#000000" font-family="Arial" font-size="10">+ result</text>
 <text x="105852" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="105925,4941 105925,4869 106030,4869 106030,4941 105925,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="105925,4893 106030,4893" stroke="#0000ff" fill="none"/>
 <polyline points="105925,4917 106030,4917" stroke="#0000ff" fill="none"/>
 <text x="105933" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::StaticLog2</text>
 <text x="105975" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="105975" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="106048,4981 106048,4829 106222,4829 106222,4981 106048,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="106048,4853 106222,4853" stroke="#0000ff" fill="none"/>
 <polyline points="106048,4957 106222,4957" stroke="#0000ff" fill="none"/>
 <text x="106056" y="4843" fill="#000000" font-family="Arial" font-size="10">ring::MediaDecoder::Status</text>
 <text x="106056" y="4867" fill="#000000" font-family="Arial" font-size="10">- DecodeError</text>
 <text x="106056" y="4883" fill="#000000" font-family="Arial" font-size="10">- EOFError</text>
 <text x="106056" y="4899" fill="#000000" font-family="Arial" font-size="10">- FrameFinished</text>
 <text x="106056" y="4915" fill="#000000" font-family="Arial" font-size="10">- ReadError</text>
 <text x="106056" y="4931" fill="#000000" font-family="Arial" font-size="10">- RestartRequired</text>
 <text x="106056" y="4947" fill="#000000" font-family="Arial" font-size="10">- Success</text>
 <text x="106133" y="4971" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="106240,4957 106240,4853 106396,4853 106396,4957 106240,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="106240,4877 106396,4877" stroke="#0000ff" fill="none"/>
 <polyline points="106240,4933 106396,4933" stroke="#0000ff" fill="none"/>
 <text x="106248" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::AudioLayer::Status</text>
 <text x="106248" y="4891" fill="#000000" font-family="Arial" font-size="10">- Idle</text>
 <text x="106248" y="4907" fill="#000000" font-family="Arial" font-size="10">- Started</text>
 <text x="106248" y="4923" fill="#000000" font-family="Arial" font-size="10">- Starting</text>
 <text x="106316" y="4947" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="106415,4949 106415,4861 106588,4861 106588,4949 106415,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="106415,4885 106588,4885" stroke="#0000ff" fill="none"/>
 <polyline points="106415,4925 106588,4925" stroke="#0000ff" fill="none"/>
 <text x="106423" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::tls::TrustStore::Status</text>
 <text x="106423" y="4899" fill="#000000" font-family="Arial" font-size="10">+ allowed: bool</text>
 <text x="106423" y="4915" fill="#000000" font-family="Arial" font-size="10">+ trusted: bool</text>
 <text x="106499" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="106606,4941 106606,4869 106899,4869 106899,4941 106606,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="106606,4893 106899,4893" stroke="#0000ff" fill="none"/>
 <polyline points="106606,4917 106899,4917" stroke="#0000ff" fill="none"/>
 <text x="106656" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::VideoSignal::StopCapture</text>
 <text x="106614" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;StopCapture&quot;</text>
 <text x="106750" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="106917,4965 106917,4845 107103,4845 107103,4965 106917,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="106917,4869 107103,4869" stroke="#0000ff" fill="none"/>
 <polyline points="106917,4941 107103,4941" stroke="#0000ff" fill="none"/>
 <text x="106925" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::DcBlocker::StreamState</text>
 <text x="106925" y="4883" fill="#000000" font-family="Arial" font-size="10">+ x_: AudioSample</text>
 <text x="106925" y="4899" fill="#000000" font-family="Arial" font-size="10">+ xm1_: AudioSample</text>
 <text x="106925" y="4915" fill="#000000" font-family="Arial" font-size="10">+ y_: AudioSample</text>
 <text x="106925" y="4931" fill="#000000" font-family="Arial" font-size="10">+ ym1_: AudioSample</text>
 <text x="107008" y="4955" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="107121,4941 107121,4869 107439,4869 107439,4941 107121,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="107121,4893 107439,4893" stroke="#0000ff" fill="none"/>
 <polyline points="107121,4917 107439,4917" stroke="#0000ff" fill="none"/>
 <text x="107224" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::StunServerInfo</text>
 <text x="107129" y="4907" fill="#000000" font-family="Arial" font-size="10">+ uri: std::string</text>
 <text x="107129" y="4931" fill="#000000" font-family="Arial" font-size="10">+ setUri (args: const std::string &amp; ) StunServerInfo &amp;</text>
 <polygon points="107458,4941 107458,4869 107779,4869 107779,4941 107458,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="107458,4893 107779,4893" stroke="#0000ff" fill="none"/>
 <polyline points="107458,4917 107779,4917" stroke="#0000ff" fill="none"/>
 <text x="107487" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::StunStatusFailed</text>
 <text x="107466" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;StunStatusFailed&quot;</text>
 <text x="107616" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="107797,4941 107797,4869 108172,4869 108172,4941 107797,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="107797,4893 108172,4893" stroke="#0000ff" fill="none"/>
 <polyline points="107797,4917 108172,4917" stroke="#0000ff" fill="none"/>
 <text x="107836" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::PresenceSignal::SubscriptionStateChanged</text>
 <text x="107805" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;SubscriptionStateChanged&quot;</text>
 <text x="107982" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="108190,4965 108190,4845 109547,4845 109547,4965 108190,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="108190,4869 109547,4869" stroke="#0000ff" fill="none"/>
 <polyline points="108190,4893 109547,4893" stroke="#0000ff" fill="none"/>
 <text x="108801" y="4859" fill="#000000" font-family="Arial" font-size="10">SystemAudioCodecInfo</text>
 <text x="108866" y="4883" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="108198" y="4907" fill="#000000" font-family="Arial" font-size="10">+ ~SystemAudioCodecInfo () Virtual</text>
 <text x="108198" y="4923" fill="#000000" font-family="Arial" font-size="10">+ SystemAudioCodecInfo (m_avcodecId: unsigned , m_name: const std::string , m_libName: std::string , m_type: CodecType , m_bitrate: unsigned , m_sampleRate: unsigned , m_nbChannels: unsigned , m_payloadType: unsigned ) </text>
 <text x="108198" y="4939" fill="#000000" font-family="Arial" font-size="10">+ audioformat () AudioFormat</text>
 <text x="108198" y="4955" fill="#000000" font-family="Arial" font-size="10">+ getCodecSpecifications () std::map</text>
 <polygon points="108948,3095 108948,2751 110300,2751 110300,3095 108948,3095" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="108948,2775 110300,2775" stroke="#0000ff" fill="none"/>
 <polyline points="108948,2991 110300,2991" stroke="#0000ff" fill="none"/>
 <text x="109573" y="2765" fill="#000000" font-family="Arial" font-size="10">SystemCodecInfo</text>
 <text x="108956" y="2789" fill="#000000" font-family="Arial" font-size="10">+ DEFAULT_VIDEO_BITRATE</text>
 <text x="108956" y="2805" fill="#000000" font-family="Arial" font-size="10">+ avcodecId: unsigned</text>
 <text x="108956" y="2821" fill="#000000" font-family="Arial" font-size="10">+ bitrate: unsigned</text>
 <text x="108956" y="2837" fill="#000000" font-family="Arial" font-size="10">+ codecType: CodecType</text>
 <text x="108956" y="2853" fill="#000000" font-family="Arial" font-size="10">+ id: unsigned</text>
 <text x="108956" y="2869" fill="#000000" font-family="Arial" font-size="10">+ libName: std::string</text>
 <text x="108956" y="2885" fill="#000000" font-family="Arial" font-size="10">+ maxBitrate: unsigned= DEFAULT_MAX_BITRATE</text>
 <text x="108956" y="2901" fill="#000000" font-family="Arial" font-size="10">+ maxQuality: unsigned= DEFAULT_NO_QUALITY</text>
 <text x="108956" y="2917" fill="#000000" font-family="Arial" font-size="10">+ mediaType: MediaType</text>
 <text x="108956" y="2933" fill="#000000" font-family="Arial" font-size="10">+ minBitrate: unsigned= DEFAULT_MIN_BITRATE</text>
 <text x="108956" y="2949" fill="#000000" font-family="Arial" font-size="10">+ minQuality: unsigned= DEFAULT_NO_QUALITY</text>
 <text x="108956" y="2965" fill="#000000" font-family="Arial" font-size="10">+ name: std::string</text>
 <text x="108956" y="2981" fill="#000000" font-family="Arial" font-size="10">+ payloadType: unsigned</text>
 <text x="108956" y="3005" fill="#000000" font-family="Arial" font-size="10">+ ~SystemCodecInfo () Virtual</text>
 <text x="108956" y="3021" fill="#000000" font-family="Arial" font-size="10">+ DEFAULT_CODEC_QUALITY () constexpr unsigned</text>
 <text x="108956" y="3037" fill="#000000" font-family="Arial" font-size="10">+ DEFAULT_MAX_BITRATE () constexpr unsigned</text>
 <text x="108956" y="3053" fill="#000000" font-family="Arial" font-size="10">+ DEFAULT_MIN_BITRATE () constexpr unsigned</text>
 <text x="108956" y="3069" fill="#000000" font-family="Arial" font-size="10">+ DEFAULT_NO_QUALITY () constexpr unsigned</text>
 <text x="108956" y="3085" fill="#000000" font-family="Arial" font-size="10">+ SystemCodecInfo (avcodecId: unsigned , name: const std::string , libName: std::string , mediaType: MediaType , codecType: CodecType , bitrate: unsigned , payloadType: unsigned , minQuality: unsigned , maxQuality: unsigned ) </text>
 <polyline points="108891,4845 108929,4744 108982,4605 109047,4435 109121,4242 109199,4037 109279,3826 109358,3619 109433,3424 109499,3250 109555,3105" stroke="#CC0044" fill="none"/>
 <polygon points="109552,3103 109559,3095 109558,3106 109552,3103" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="111214,4997 111214,4813 111700,4813 111700,4997 111214,4997" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="111214,4837 111700,4837" stroke="#0000ff" fill="none"/>
 <polyline points="111214,4861 111700,4861" stroke="#0000ff" fill="none"/>
 <text x="111374" y="4827" fill="#000000" font-family="Arial" font-size="10">ring::SystemCodecContainer</text>
 <text x="111455" y="4851" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="111222" y="4875" fill="#000000" font-family="Arial" font-size="10">+ SystemCodecContainer () </text>
 <text x="111222" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getSystemCodecInfoIdList (type: MediaType ) std::vector</text>
 <text x="111222" y="4907" fill="#000000" font-family="Arial" font-size="10">+ searchCodecById (codecId: unsigned , type: MediaType ) std::shared_ptr</text>
 <text x="111222" y="4923" fill="#000000" font-family="Arial" font-size="10">+ searchCodecByName (name: std::string , type: MediaType ) std::shared_ptr</text>
 <text x="111222" y="4939" fill="#000000" font-family="Arial" font-size="10">+ searchCodecByPayload (payload: unsigned , type: MediaType ) std::shared_ptr</text>
 <text x="111222" y="4955" fill="#000000" font-family="Arial" font-size="10">+ ~SystemCodecContainer () </text>
 <text x="111222" y="4971" fill="#000000" font-family="Arial" font-size="10">- checkInstalledCodecs () void</text>
 <text x="111222" y="4987" fill="#000000" font-family="Arial" font-size="10">- initCodecConfig () void</text>
 <polygon points="109565,4973 109565,4837 111196,4837 111196,4973 109565,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="109565,4861 111196,4861" stroke="#0000ff" fill="none"/>
 <polyline points="109565,4917 111196,4917" stroke="#0000ff" fill="none"/>
 <text x="110313" y="4851" fill="#000000" font-family="Arial" font-size="10">SystemVideoCodecInfo</text>
 <text x="109573" y="4875" fill="#000000" font-family="Arial" font-size="10">+ frameRate: unsigned</text>
 <text x="109573" y="4891" fill="#000000" font-family="Arial" font-size="10">+ parameters: std::string</text>
 <text x="109573" y="4907" fill="#000000" font-family="Arial" font-size="10">+ profileId: unsigned</text>
 <text x="109573" y="4931" fill="#000000" font-family="Arial" font-size="10">+ ~SystemVideoCodecInfo () Virtual</text>
 <text x="109573" y="4947" fill="#000000" font-family="Arial" font-size="10">+ SystemVideoCodecInfo (m_avcodecId: unsigned , m_name: const std::string , m_libName: std::string , m_type: CodecType , m_bitrate: unsigned , m_minQuality: unsigned , m_maxQuality: unsigned , m_payloadType: unsigned , m_frameRate: unsigned , m_profileId: unsigned ) </text>
 <text x="109573" y="4963" fill="#000000" font-family="Arial" font-size="10">+ getCodecSpecifications () std::map</text>
 <polyline points="110354,4837 110315,4734 110261,4593 110196,4422 110123,4231 110045,4027 109965,3818 109887,3614 109814,3421 109748,3249 109693,3105" stroke="#CC0044" fill="none"/>
 <polygon points="109690,3106 109689,3095 109696,3103 109690,3106" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="111718,5013 111718,4797 112202,4797 112202,5013 111718,5013" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="111718,4821 112202,4821" stroke="#0000ff" fill="none"/>
 <polyline points="111718,4877 112202,4877" stroke="#0000ff" fill="none"/>
 <text x="111903" y="4811" fill="#000000" font-family="Arial" font-size="10">ring::TelephoneTone</text>
 <text x="111726" y="4835" fill="#000000" font-family="Arial" font-size="10">- countryId_: COUNTRYID</text>
 <text x="111726" y="4851" fill="#000000" font-family="Arial" font-size="10">- currentTone_: Tone::TONEID</text>
 <text x="111726" y="4867" fill="#000000" font-family="Arial" font-size="10">- tones_: std::array</text>
 <text x="111726" y="4891" fill="#000000" font-family="Arial" font-size="10">+ TelephoneTone (countryName: const std::string &amp; , sampleRate: unsigned int ) </text>
 <text x="111726" y="4907" fill="#000000" font-family="Arial" font-size="10">+ TelephoneTone () </text>
 <text x="111726" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getCurrentTone () Tone *</text>
 <text x="111726" y="4939" fill="#000000" font-family="Arial" font-size="10">+ operator= () TelephoneTone &amp;</text>
 <text x="111726" y="4955" fill="#000000" font-family="Arial" font-size="10">+ setCurrentTone (toneId: Tone::TONEID ) void</text>
 <text x="111726" y="4971" fill="#000000" font-family="Arial" font-size="10">+ setSampleRate (sampleRate: unsigned int ) void</text>
 <text x="111726" y="4987" fill="#000000" font-family="Arial" font-size="10">- getCountryId (countryName: const std::string &amp; ) COUNTRYID</text>
 <text x="111726" y="5003" fill="#000000" font-family="Arial" font-size="10">- buildTones (sampleRate: unsigned int ) void</text>
 <polygon points="13562,4941 13562,4869 13732,4869 13732,4941 13562,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="13562,4893 13732,4893" stroke="#0000ff" fill="none"/>
 <polyline points="13562,4917 13732,4917" stroke="#0000ff" fill="none"/>
 <text x="13570" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::ThreadLoopException</text>
 <text x="13645" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="13570" y="4931" fill="#000000" font-family="Arial" font-size="10">+ ThreadLoopException () </text>
 <polyline points="13649,4869 13652,4808 13654,4720 13656,4611 13656,4484 13652,4342 13645,4189 13632,4029 13613,3867 13587,3705 13552,3548 13532,3479 13509,3409 13482,3340 13453,3273 13424,3209 13394,3149 13366,3093 13339,3044 13315,3002 13295,2968" stroke="#CC0044" fill="none"/>
 <polygon points="13292,2970 13290,2959 13298,2966 13292,2970" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="112221,4981 112221,4829 112412,4829 112412,4981 112221,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="112221,4853 112412,4853" stroke="#0000ff" fill="none"/>
 <polyline points="112221,4877 112412,4877" stroke="#0000ff" fill="none"/>
 <text x="112269" y="4843" fill="#000000" font-family="Arial" font-size="10">ring::ThreadPool</text>
 <text x="112314" y="4867" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="112229" y="4891" fill="#000000" font-family="Arial" font-size="10">+ join () </text>
 <text x="112229" y="4907" fill="#000000" font-family="Arial" font-size="10">+ instance () ThreadPool &amp;</text>
 <text x="112229" y="4923" fill="#000000" font-family="Arial" font-size="10">+ get (std::function) std::future</text>
 <text x="112229" y="4939" fill="#000000" font-family="Arial" font-size="10">+ ThreadPool () </text>
 <text x="112229" y="4955" fill="#000000" font-family="Arial" font-size="10">+ run (std::function) void</text>
 <text x="112229" y="4971" fill="#000000" font-family="Arial" font-size="10">+ ~ThreadPool () </text>
 <polygon points="112430,4949 112430,4861 112618,4861 112618,4949 112430,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="112430,4885 112618,4885" stroke="#0000ff" fill="none"/>
 <polyline points="112430,4909 112618,4909" stroke="#0000ff" fill="none"/>
 <text x="112438" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::ThreadPool::ThreadState</text>
 <text x="112522" y="4899" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="112438" y="4923" fill="#000000" font-family="Arial" font-size="10">+ run () std::atomic_bool</text>
 <text x="112438" y="4939" fill="#000000" font-family="Arial" font-size="10">+ thread () std::thread</text>
 <polygon points="112636,4965 112636,4845 112978,4845 112978,4965 112636,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="112636,4869 112978,4869" stroke="#0000ff" fill="none"/>
 <polyline points="112636,4893 112978,4893" stroke="#0000ff" fill="none"/>
 <text x="112778" y="4859" fill="#000000" font-family="Arial" font-size="10">dev::Timer</text>
 <text x="112644" y="4883" fill="#000000" font-family="Arial" font-size="10">- m_t: std::chrono::high_resolution_clock::time_point</text>
 <text x="112644" y="4907" fill="#000000" font-family="Arial" font-size="10">+ Timer () </text>
 <text x="112644" y="4923" fill="#000000" font-family="Arial" font-size="10">+ restart () void</text>
 <text x="112644" y="4939" fill="#000000" font-family="Arial" font-size="10">+ duration () std::chrono::high_resolution_clock::duration</text>
 <text x="112644" y="4955" fill="#000000" font-family="Arial" font-size="10">+ elapsed () double</text>
 <polygon points="112997,4965 112997,4845 113458,4845 113458,4965 112997,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="112997,4869 113458,4869" stroke="#0000ff" fill="none"/>
 <polyline points="112997,4925 113458,4925" stroke="#0000ff" fill="none"/>
 <text x="113179" y="4859" fill="#000000" font-family="Arial" font-size="10">dev::TimerHelper</text>
 <text x="113005" y="4883" fill="#000000" font-family="Arial" font-size="10">- m_id: std::string</text>
 <text x="113005" y="4899" fill="#000000" font-family="Arial" font-size="10">- m_ms: unsigned</text>
 <text x="113005" y="4915" fill="#000000" font-family="Arial" font-size="10">- m_t: std::chrono::high_resolution_clock::time_point</text>
 <text x="113005" y="4939" fill="#000000" font-family="Arial" font-size="10">+ TimerHelper (_id: std::string const &amp; , _msReportWhenGreater: unsigned ) </text>
 <text x="113005" y="4955" fill="#000000" font-family="Arial" font-size="10">+ ~TimerHelper () </text>
 <polygon points="113476,4973 113476,4837 113802,4837 113802,4973 113476,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="113476,4861 113802,4861" stroke="#0000ff" fill="none"/>
 <polyline points="113476,4885 113802,4885" stroke="#0000ff" fill="none"/>
 <text x="113484" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsSession::TlsAnonymousClientCredendials</text>
 <text x="113484" y="4875" fill="#000000" font-family="Arial" font-size="10">- creds_: T</text>
 <text x="113484" y="4899" fill="#000000" font-family="Arial" font-size="10">+ TlsAnonymousClientCredendials () </text>
 <text x="113484" y="4915" fill="#000000" font-family="Arial" font-size="10">+ TlsAnonymousClientCredendials () </text>
 <text x="113484" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator T () </text>
 <text x="113484" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator= () TlsAnonymousClientCredendials &amp;</text>
 <text x="113484" y="4963" fill="#000000" font-family="Arial" font-size="10">+ ~TlsAnonymousClientCredendials () </text>
 <polygon points="113821,4973 113821,4837 114150,4837 114150,4973 113821,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="113821,4861 114150,4861" stroke="#0000ff" fill="none"/>
 <polyline points="113821,4885 114150,4885" stroke="#0000ff" fill="none"/>
 <text x="113829" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsSession::TlsAnonymousServerCredendials</text>
 <text x="113829" y="4875" fill="#000000" font-family="Arial" font-size="10">- creds_: T</text>
 <text x="113829" y="4899" fill="#000000" font-family="Arial" font-size="10">+ TlsAnonymousServerCredendials () </text>
 <text x="113829" y="4915" fill="#000000" font-family="Arial" font-size="10">+ TlsAnonymousServerCredendials () </text>
 <text x="113829" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator T () </text>
 <text x="113829" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator= () TlsAnonymousServerCredendials &amp;</text>
 <text x="113829" y="4963" fill="#000000" font-family="Arial" font-size="10">+ ~TlsAnonymousServerCredendials () </text>
 <polygon points="114168,4973 114168,4837 114450,4837 114450,4973 114168,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="114168,4861 114450,4861" stroke="#0000ff" fill="none"/>
 <polyline points="114168,4885 114450,4885" stroke="#0000ff" fill="none"/>
 <text x="114176" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsSession::TlsCertificateCredendials</text>
 <text x="114176" y="4875" fill="#000000" font-family="Arial" font-size="10">- creds_: T</text>
 <text x="114176" y="4899" fill="#000000" font-family="Arial" font-size="10">+ TlsCertificateCredendials () </text>
 <text x="114176" y="4915" fill="#000000" font-family="Arial" font-size="10">+ TlsCertificateCredendials () </text>
 <text x="114176" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator T () </text>
 <text x="114176" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator= () TlsCertificateCredendials &amp;</text>
 <text x="114176" y="4963" fill="#000000" font-family="Arial" font-size="10">+ ~TlsCertificateCredendials () </text>
 <polygon points="114468,4965 114468,4845 114716,4845 114716,4965 114468,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="114468,4869 114716,4869" stroke="#0000ff" fill="none"/>
 <polyline points="114468,4893 114716,4893" stroke="#0000ff" fill="none"/>
 <text x="114556" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::TlsInfos</text>
 <text x="114590" y="4883" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="114476" y="4907" fill="#000000" font-family="Arial" font-size="10">+ cipher () pj_ssl_cipher</text>
 <text x="114476" y="4923" fill="#000000" font-family="Arial" font-size="10">+ peerCert () std::shared_ptr</text>
 <text x="114476" y="4939" fill="#000000" font-family="Arial" font-size="10">+ proto () pj_ssl_sock_proto</text>
 <text x="114476" y="4955" fill="#000000" font-family="Arial" font-size="10">+ verifyStatus () pj_ssl_cert_verify_flag_t</text>
 <polygon points="114735,4989 114735,4821 114946,4821 114946,4989 114735,4989" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="114735,4845 114946,4845" stroke="#0000ff" fill="none"/>
 <polyline points="114735,4869 114946,4869" stroke="#0000ff" fill="none"/>
 <text x="114794" y="4835" fill="#000000" font-family="Arial" font-size="10">ring::TlsListener</text>
 <text x="114838" y="4859" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="114743" y="4883" fill="#000000" font-family="Arial" font-size="10">+ ~TlsListener () Virtual</text>
 <text x="114743" y="4899" fill="#000000" font-family="Arial" font-size="10">+ TlsListener () </text>
 <text x="114743" y="4915" fill="#000000" font-family="Arial" font-size="10">+ TlsListener (f: pjsip_tpfactory *) </text>
 <text x="114743" y="4931" fill="#000000" font-family="Arial" font-size="10">+ TlsListener () </text>
 <text x="114743" y="4947" fill="#000000" font-family="Arial" font-size="10">+ get () pjsip_tpfactory *</text>
 <text x="114743" y="4963" fill="#000000" font-family="Arial" font-size="10">+ operator= () TlsListener &amp;</text>
 <text x="114743" y="4979" fill="#000000" font-family="Arial" font-size="10">- listener () pjsip_tpfactory *</text>
 <polygon points="114964,4981 114964,4829 115247,4829 115247,4981 114964,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="114964,4853 115247,4853" stroke="#0000ff" fill="none"/>
 <polyline points="114964,4957 115247,4957" stroke="#0000ff" fill="none"/>
 <text x="115049" y="4843" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsParams</text>
 <text x="114972" y="4867" fill="#000000" font-family="Arial" font-size="10">+ ca_list: std::string</text>
 <text x="114972" y="4883" fill="#000000" font-family="Arial" font-size="10">+ cert: std::shared_ptr</text>
 <text x="114972" y="4899" fill="#000000" font-family="Arial" font-size="10">+ cert_check: std::function</text>
 <text x="114972" y="4915" fill="#000000" font-family="Arial" font-size="10">+ cert_key: std::shared_ptr</text>
 <text x="114972" y="4931" fill="#000000" font-family="Arial" font-size="10">+ dh_params: std::shared_future</text>
 <text x="114972" y="4947" fill="#000000" font-family="Arial" font-size="10">+ timeout: std::chrono::steady_clock::duration</text>
 <text x="115103" y="4971" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="115265,4973 115265,4837 116141,4837 116141,4973 115265,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="115265,4861 116141,4861" stroke="#0000ff" fill="none"/>
 <polyline points="115265,4949 116141,4949" stroke="#0000ff" fill="none"/>
 <text x="115646" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsSession</text>
 <text x="115273" y="4875" fill="#000000" font-family="Arial" font-size="10">+ TlsSessionCallbacks</text>
 <text x="115273" y="4891" fill="#000000" font-family="Arial" font-size="10">+ onCertificatesUpdate: OnCertificatesUpdate</text>
 <text x="115273" y="4907" fill="#000000" font-family="Arial" font-size="10">+ onRxData: OnRxDataFunc</text>
 <text x="115273" y="4923" fill="#000000" font-family="Arial" font-size="10">+ onStateChange: OnStateChangeFunc</text>
 <text x="115273" y="4939" fill="#000000" font-family="Arial" font-size="10">+ verifyCertificate: VerifyCertificate</text>
 <text x="115273" y="4963" fill="#000000" font-family="Arial" font-size="10">+ TlsSession (ice: const std::shared_ptr &amp; , ice_comp_id: int , params: const TlsParams &amp; , cbs: const TlsSessionCallbacks &amp; , anonymous: bool ) </text>
 <polygon points="116159,4973 116159,4837 116321,4837 116321,4973 116159,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="116159,4861 116321,4861" stroke="#0000ff" fill="none"/>
 <polyline points="116159,4949 116321,4949" stroke="#0000ff" fill="none"/>
 <text x="116167" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsSessionState</text>
 <text x="116167" y="4875" fill="#000000" font-family="Arial" font-size="10">- COOKIE</text>
 <text x="116167" y="4891" fill="#000000" font-family="Arial" font-size="10">- ESTABLISHED</text>
 <text x="116167" y="4907" fill="#000000" font-family="Arial" font-size="10">- HANDSHAKE</text>
 <text x="116167" y="4923" fill="#000000" font-family="Arial" font-size="10">- SETUP</text>
 <text x="116167" y="4939" fill="#000000" font-family="Arial" font-size="10">- SHUTDOWN</text>
 <text x="116238" y="4963" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="116339,5525 116339,4285 117203,4285 117203,5525 116339,5525" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="116339,4309 117203,4309" stroke="#0000ff" fill="none"/>
 <polyline points="116339,4525 117203,4525" stroke="#0000ff" fill="none"/>
 <text x="116712" y="4299" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsValidator</text>
 <text x="116347" y="4323" fill="#000000" font-family="Arial" font-size="10">- CertificateCheckNames: const EnumClassNames= {...}</text>
 <text x="116347" y="4339" fill="#000000" font-family="Arial" font-size="10">- CertificateDetailsNames: const EnumClassNames= {...}</text>
 <text x="116347" y="4355" fill="#000000" font-family="Arial" font-size="10">- CheckValuesNames: const EnumClassNames= {...}</text>
 <text x="116347" y="4371" fill="#000000" font-family="Arial" font-size="10">- CheckValuesTypeNames: const EnumClassNames= {...}</text>
 <text x="116347" y="4387" fill="#000000" font-family="Arial" font-size="10">- acceptedCheckValuesResult: const Matrix2D= {...}</text>
 <text x="116347" y="4403" fill="#000000" font-family="Arial" font-size="10">- checkCallback: const CallbackMatrix1D= {...}</text>
 <text x="116347" y="4419" fill="#000000" font-family="Arial" font-size="10">- enforcedCheckType: const Matrix1D= {...}</text>
 <text x="116347" y="4435" fill="#000000" font-family="Arial" font-size="10">- getterCallback: const CallbackMatrix1D= {...}</text>
 <text x="116347" y="4451" fill="#000000" font-family="Arial" font-size="10">- certificateContent_: std::vector</text>
 <text x="116347" y="4467" fill="#000000" font-family="Arial" font-size="10">- certificatePath_: std::string</text>
 <text x="116347" y="4483" fill="#000000" font-family="Arial" font-size="10">- copy_buffer: mutable char [4096]</text>
 <text x="116347" y="4499" fill="#000000" font-family="Arial" font-size="10">- privateKeyPath_: std::string</text>
 <text x="116347" y="4515" fill="#000000" font-family="Arial" font-size="10">- x509crt_: std::shared_ptr</text>
 <text x="116347" y="4539" fill="#000000" font-family="Arial" font-size="10">+ CheckResult () </text>
 <text x="116347" y="4555" fill="#000000" font-family="Arial" font-size="10">+ TlsValidator (certificate: const std::string &amp; , privatekey: const std::string &amp; , privatekeyPasswd: const std::string &amp; , caList: const std::string &amp; ) </text>
 <text x="116347" y="4571" fill="#000000" font-family="Arial" font-size="10">+ TlsValidator (std: const ) </text>
 <text x="116347" y="4587" fill="#000000" font-family="Arial" font-size="10">+ TlsValidator (certificate_raw: const std::vector &amp; ) </text>
 <text x="116347" y="4603" fill="#000000" font-family="Arial" font-size="10">+ TlsValidator (crt: const std::shared_ptr &amp; ) </text>
 <text x="116347" y="4619" fill="#000000" font-family="Arial" font-size="10">+ activated () TlsValidator::CheckResult</text>
 <text x="116347" y="4635" fill="#000000" font-family="Arial" font-size="10">+ authorityMatch () TlsValidator::CheckResult</text>
 <text x="116347" y="4651" fill="#000000" font-family="Arial" font-size="10">+ exist () TlsValidator::CheckResult</text>
 <text x="116347" y="4667" fill="#000000" font-family="Arial" font-size="10">+ expectedOwner () TlsValidator::CheckResult</text>
 <text x="116347" y="4683" fill="#000000" font-family="Arial" font-size="10">+ getActivationDate () TlsValidator::CheckResult</text>
 <text x="116347" y="4699" fill="#000000" font-family="Arial" font-size="10">+ getCN () TlsValidator::CheckResult</text>
 <text x="116347" y="4715" fill="#000000" font-family="Arial" font-size="10">+ getExpirationDate () TlsValidator::CheckResult</text>
 <text x="116347" y="4731" fill="#000000" font-family="Arial" font-size="10">+ getIssuer () TlsValidator::CheckResult</text>
 <text x="116347" y="4747" fill="#000000" font-family="Arial" font-size="10">+ getIssuerDN () TlsValidator::CheckResult</text>
 <text x="116347" y="4763" fill="#000000" font-family="Arial" font-size="10">+ getMd5Fingerprint () TlsValidator::CheckResult</text>
 <text x="116347" y="4779" fill="#000000" font-family="Arial" font-size="10">+ getN () TlsValidator::CheckResult</text>
 <text x="116347" y="4795" fill="#000000" font-family="Arial" font-size="10">+ getO () TlsValidator::CheckResult</text>
 <text x="116347" y="4811" fill="#000000" font-family="Arial" font-size="10">+ getPublicKeyId () TlsValidator::CheckResult</text>
 <text x="116347" y="4827" fill="#000000" font-family="Arial" font-size="10">+ getPublicSignature () TlsValidator::CheckResult</text>
 <text x="116347" y="4843" fill="#000000" font-family="Arial" font-size="10">+ getSerialNumber () TlsValidator::CheckResult</text>
 <text x="116347" y="4859" fill="#000000" font-family="Arial" font-size="10">+ getSerializedChecks () std::map</text>
 <text x="116347" y="4875" fill="#000000" font-family="Arial" font-size="10">+ getSerializedDetails () std::map</text>
 <text x="116347" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getSha1Fingerprint () TlsValidator::CheckResult</text>
 <text x="116347" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getSignatureAlgorithm () TlsValidator::CheckResult</text>
 <text x="116347" y="4923" fill="#000000" font-family="Arial" font-size="10">+ getStringValue (check: const TlsValidator::CertificateCheck , result: const TlsValidator::CheckResult ) std::string</text>
 <text x="116347" y="4939" fill="#000000" font-family="Arial" font-size="10">+ getSubjectKeyAlgorithm () TlsValidator::CheckResult</text>
 <text x="116347" y="4955" fill="#000000" font-family="Arial" font-size="10">+ getVersionNumber () TlsValidator::CheckResult</text>
 <text x="116347" y="4971" fill="#000000" font-family="Arial" font-size="10">+ hasPrivateKey () TlsValidator::CheckResult</text>
 <text x="116347" y="4987" fill="#000000" font-family="Arial" font-size="10">+ isCA () TlsValidator::CheckResult</text>
 <text x="116347" y="5003" fill="#000000" font-family="Arial" font-size="10">+ isValid (verbose: bool ) bool</text>
 <text x="116347" y="5019" fill="#000000" font-family="Arial" font-size="10">+ keyMatch () TlsValidator::CheckResult</text>
 <text x="116347" y="5035" fill="#000000" font-family="Arial" font-size="10">+ knownAuthority () TlsValidator::CheckResult</text>
 <text x="116347" y="5051" fill="#000000" font-family="Arial" font-size="10">+ notExpired () TlsValidator::CheckResult</text>
 <text x="116347" y="5067" fill="#000000" font-family="Arial" font-size="10">+ notRevoked () TlsValidator::CheckResult</text>
 <text x="116347" y="5083" fill="#000000" font-family="Arial" font-size="10">+ notSelfSigned () TlsValidator::CheckResult</text>
 <text x="116347" y="5099" fill="#000000" font-family="Arial" font-size="10">+ outgoingServer () TlsValidator::CheckResult</text>
 <text x="116347" y="5115" fill="#000000" font-family="Arial" font-size="10">+ privateKeyDirectoryPermissions () TlsValidator::CheckResult</text>
 <text x="116347" y="5131" fill="#000000" font-family="Arial" font-size="10">+ privateKeySelinuxAttributes () TlsValidator::CheckResult</text>
 <text x="116347" y="5147" fill="#000000" font-family="Arial" font-size="10">+ privateKeyStorageLocation () TlsValidator::CheckResult</text>
 <text x="116347" y="5163" fill="#000000" font-family="Arial" font-size="10">+ privateKeyStoragePermissions () TlsValidator::CheckResult</text>
 <text x="116347" y="5179" fill="#000000" font-family="Arial" font-size="10">+ publicKeyDirectoryPermissions () TlsValidator::CheckResult</text>
 <text x="116347" y="5195" fill="#000000" font-family="Arial" font-size="10">+ publicKeySelinuxAttributes () TlsValidator::CheckResult</text>
 <text x="116347" y="5211" fill="#000000" font-family="Arial" font-size="10">+ publicKeyStorageLocation () TlsValidator::CheckResult</text>
 <text x="116347" y="5227" fill="#000000" font-family="Arial" font-size="10">+ publicKeyStoragePermissions () TlsValidator::CheckResult</text>
 <text x="116347" y="5243" fill="#000000" font-family="Arial" font-size="10">+ requirePrivateKeyPassword () TlsValidator::CheckResult</text>
 <text x="116347" y="5259" fill="#000000" font-family="Arial" font-size="10">+ setCaTlsValidator (validator: const TlsValidator &amp; ) void</text>
 <text x="116347" y="5275" fill="#000000" font-family="Arial" font-size="10">+ strongSigning () TlsValidator::CheckResult</text>
 <text x="116347" y="5291" fill="#000000" font-family="Arial" font-size="10">+ valid () TlsValidator::CheckResult</text>
 <text x="116347" y="5307" fill="#000000" font-family="Arial" font-size="10">+ validAuthority () TlsValidator::CheckResult</text>
 <text x="116347" y="5323" fill="#000000" font-family="Arial" font-size="10">+ ~TlsValidator () </text>
 <text x="116347" y="5339" fill="#000000" font-family="Arial" font-size="10">+ getCertificate () std::shared_ptr</text>
 <text x="116347" y="5355" fill="#000000" font-family="Arial" font-size="10">+ hasCa () bool</text>
 <text x="116347" y="5371" fill="#000000" font-family="Arial" font-size="10">- caChecked_ () bool</text>
 <text x="116347" y="5387" fill="#000000" font-family="Arial" font-size="10">- caListPath_ () std::string</text>
 <text x="116347" y="5403" fill="#000000" font-family="Arial" font-size="10">- caValidationOutput_ () unsigned int</text>
 <text x="116347" y="5419" fill="#000000" font-family="Arial" font-size="10">- certificateFileFound_ () bool</text>
 <text x="116347" y="5435" fill="#000000" font-family="Arial" font-size="10">- certificateFound_ () bool</text>
 <text x="116347" y="5451" fill="#000000" font-family="Arial" font-size="10">- compareToCa () unsigned int</text>
 <text x="116347" y="5467" fill="#000000" font-family="Arial" font-size="10">- getStringValue (check: const CertificateCheck , result: const CheckResult ) std::string</text>
 <text x="116347" y="5483" fill="#000000" font-family="Arial" font-size="10">- privateKeyFound_ () bool</text>
 <text x="116347" y="5499" fill="#000000" font-family="Arial" font-size="10">- privateKeyMatch_ () bool</text>
 <text x="116347" y="5515" fill="#000000" font-family="Arial" font-size="10">- privateKeyPassword_ () bool</text>
 <polygon points="13751,4941 13751,4869 14054,4869 14054,4941 13751,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="13751,4893 14054,4893" stroke="#0000ff" fill="none"/>
 <polyline points="13751,4917 14054,4917" stroke="#0000ff" fill="none"/>
 <text x="13814" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::tls::TlsValidatorException</text>
 <text x="13900" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="13759" y="4931" fill="#000000" font-family="Arial" font-size="10">+ TlsValidatorException (str: const std::string &amp; ) </text>
 <polyline points="13904,4869 13907,4806 13910,4717 13911,4606 13908,4477 13901,4333 13887,4179 13866,4020 13835,3859 13794,3700 13741,3548 13707,3473 13667,3400 13623,3330 13575,3262 13526,3199 13477,3139 13430,3086 13385,3039 13346,2998 13313,2966" stroke="#CC0044" fill="none"/>
 <polygon points="13311,2969 13306,2959 13316,2964 13311,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="117221,4941 117221,4869 117321,4869 117321,4941 117221,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="117221,4893 117321,4893" stroke="#0000ff" fill="none"/>
 <polyline points="117221,4917 117321,4917" stroke="#0000ff" fill="none"/>
 <text x="117229" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::TokenList</text>
 <text x="117269" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="117269" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="11485,4965 11485,4845 12017,4845 12017,4965 11485,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="11485,4869 12017,4869" stroke="#0000ff" fill="none"/>
 <polyline points="11485,4893 12017,4893" stroke="#0000ff" fill="none"/>
 <text x="11723" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::Tone</text>
 <text x="11749" y="4883" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="11493" y="4907" fill="#000000" font-family="Arial" font-size="10">+ Tone () </text>
 <text x="11493" y="4923" fill="#000000" font-family="Arial" font-size="10">+ Tone (definition: const std::string &amp; , sampleRate: unsigned int ) </text>
 <text x="11493" y="4939" fill="#000000" font-family="Arial" font-size="10">+ genSin (buffer: AudioSample *, lowFrequency: int , highFrequency: int , nb: size_t ) void</text>
 <text x="11493" y="4955" fill="#000000" font-family="Arial" font-size="10">- genBuffer (definition: const std::string &amp; ) void</text>
 <polyline points="11744,4845 11731,4742 11713,4599 11691,4424 11666,4227 11639,4017 11612,3802 11586,3593 11561,3396 11540,3223 11522,3081" stroke="#CC0044" fill="none"/>
 <polygon points="11518,3082 11521,3071 11525,3081 11518,3082" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="117340,5053 117340,4757 117649,4757 117649,5053 117340,5053" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="117340,4781 117649,4781" stroke="#0000ff" fill="none"/>
 <polyline points="117340,4869 117649,4869" stroke="#0000ff" fill="none"/>
 <text x="117446" y="4771" fill="#000000" font-family="Arial" font-size="10">ring::ToneControl</text>
 <text x="117348" y="4795" fill="#000000" font-family="Arial" font-size="10">- audioFile_: std::unique_ptr</text>
 <text x="117348" y="4811" fill="#000000" font-family="Arial" font-size="10">- mutex_: std::mutex</text>
 <text x="117348" y="4827" fill="#000000" font-family="Arial" font-size="10">- prefs_: const Preferences &amp;</text>
 <text x="117348" y="4843" fill="#000000" font-family="Arial" font-size="10">- sampleRate_: unsigned</text>
 <text x="117348" y="4859" fill="#000000" font-family="Arial" font-size="10">- telephoneTone_: std::unique_ptr</text>
 <text x="117348" y="4883" fill="#000000" font-family="Arial" font-size="10">+ ToneControl () </text>
 <text x="117348" y="4899" fill="#000000" font-family="Arial" font-size="10">+ ToneControl (preferences: const Preferences &amp; ) </text>
 <text x="117348" y="4915" fill="#000000" font-family="Arial" font-size="10">+ getTelephoneFile () AudioLoop *</text>
 <text x="117348" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getTelephoneTone () AudioLoop *</text>
 <text x="117348" y="4947" fill="#000000" font-family="Arial" font-size="10">+ play (toneId: Tone::TONEID ) void</text>
 <text x="117348" y="4963" fill="#000000" font-family="Arial" font-size="10">+ seek (value: double ) void</text>
 <text x="117348" y="4979" fill="#000000" font-family="Arial" font-size="10">+ setAudioFile (file: const std::string &amp; ) bool</text>
 <text x="117348" y="4995" fill="#000000" font-family="Arial" font-size="10">+ setSampleRate (rate: unsigned ) void</text>
 <text x="117348" y="5011" fill="#000000" font-family="Arial" font-size="10">+ stop () void</text>
 <text x="117348" y="5027" fill="#000000" font-family="Arial" font-size="10">+ stopAudioFile () void</text>
 <text x="117348" y="5043" fill="#000000" font-family="Arial" font-size="10">+ ~ToneControl () </text>
 <polygon points="117667,4941 117667,4869 117969,4869 117969,4941 117667,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="117667,4893 117969,4893" stroke="#0000ff" fill="none"/>
 <polyline points="117667,4917 117969,4917" stroke="#0000ff" fill="none"/>
 <text x="117723" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::TransferFailed</text>
 <text x="117675" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;TransferFailed&quot;</text>
 <text x="117816" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="117987,4941 117987,4869 118319,4869 118319,4941 117987,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="117987,4893 118319,4893" stroke="#0000ff" fill="none"/>
 <polyline points="117987,4917 118319,4917" stroke="#0000ff" fill="none"/>
 <text x="118043" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::TransferSucceeded</text>
 <text x="117995" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;TransferSucceeded&quot;</text>
 <text x="118151" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="118338,4973 118338,4837 118897,4837 118897,4973 118338,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="118338,4861 118897,4861" stroke="#0000ff" fill="none"/>
 <polyline points="118338,4917 118897,4917" stroke="#0000ff" fill="none"/>
 <text x="118523" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::RingAccount::TrustRequest</text>
 <text x="118346" y="4875" fill="#000000" font-family="Arial" font-size="10">+ from_device: dht::InfoHash</text>
 <text x="118346" y="4891" fill="#000000" font-family="Arial" font-size="10">+ payload: std::vector</text>
 <text x="118346" y="4907" fill="#000000" font-family="Arial" font-size="10">+ received: std::chrono::system_clock::time_point</text>
 <text x="118346" y="4931" fill="#000000" font-family="Arial" font-size="10">+ TrustRequest () </text>
 <text x="118346" y="4947" fill="#000000" font-family="Arial" font-size="10">+ TrustRequest (device: dht::InfoHash , r: std::chrono::system_clock::time_point , std::vector) </text>
 <text x="118346" y="4963" fill="#000000" font-family="Arial" font-size="10">+ TrustRequest (SavedTrustRequest) </text>
 <polygon points="118915,4949 118915,4861 119049,4861 119049,4949 118915,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="118915,4885 119049,4885" stroke="#0000ff" fill="none"/>
 <polyline points="118915,4925 119049,4925" stroke="#0000ff" fill="none"/>
 <text x="118923" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::tls::TrustStatus</text>
 <text x="118923" y="4899" fill="#000000" font-family="Arial" font-size="10">- TRUSTED</text>
 <text x="118923" y="4915" fill="#000000" font-family="Arial" font-size="10">- UNTRUSTED</text>
 <text x="118980" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="119067,5101 119067,4709 119649,4709 119649,5101 119067,5101" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="119067,4733 119649,4733" stroke="#0000ff" fill="none"/>
 <polyline points="119067,4789 119649,4789" stroke="#0000ff" fill="none"/>
 <text x="119303" y="4723" fill="#000000" font-family="Arial" font-size="10">ring::tls::TrustStore</text>
 <text x="119075" y="4747" fill="#000000" font-family="Arial" font-size="10">- allowed_: gnutls_x509_trust_list_st *</text>
 <text x="119075" y="4763" fill="#000000" font-family="Arial" font-size="10">- revokedList_: std::vector</text>
 <text x="119075" y="4779" fill="#000000" font-family="Arial" font-size="10">- unknownCertStatus_: std::map</text>
 <text x="119075" y="4803" fill="#000000" font-family="Arial" font-size="10">+ ~TrustStore () Virtual</text>
 <text x="119075" y="4819" fill="#000000" font-family="Arial" font-size="10">+ statusFromStr (str: const char *) PermissionStatus</text>
 <text x="119075" y="4835" fill="#000000" font-family="Arial" font-size="10">+ statusToStr (s: PermissionStatus ) const char *</text>
 <text x="119075" y="4851" fill="#000000" font-family="Arial" font-size="10">+ TrustStore () </text>
 <text x="119075" y="4867" fill="#000000" font-family="Arial" font-size="10">+ TrustStore () </text>
 <text x="119075" y="4883" fill="#000000" font-family="Arial" font-size="10">+ addRevocationList (dht::crypto::RevocationList) bool</text>
 <text x="119075" y="4899" fill="#000000" font-family="Arial" font-size="10">+ getCertificatesByStatus (status: PermissionStatus ) std::vector</text>
 <text x="119075" y="4915" fill="#000000" font-family="Arial" font-size="10">+ isAllowed (crt: const crypto::Certificate &amp; ) bool</text>
 <text x="119075" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator= () TrustStore &amp;</text>
 <text x="119075" y="4947" fill="#000000" font-family="Arial" font-size="10">+ setCertificateStatus (cert_id: const std::string &amp; , status: const PermissionStatus ) bool</text>
 <text x="119075" y="4963" fill="#000000" font-family="Arial" font-size="10">+ setCertificateStatus (cert: const std::shared_ptr &amp; , status: PermissionStatus , local: bool ) bool</text>
 <text x="119075" y="4979" fill="#000000" font-family="Arial" font-size="10">+ setCertificateStatus (cert_id: const std::string &amp; , status: const TrustStatus ) bool</text>
 <text x="119075" y="4995" fill="#000000" font-family="Arial" font-size="10">+ setCertificateStatus (cert: const std::shared_ptr &amp; , status: TrustStatus , local: bool ) bool</text>
 <text x="119075" y="5011" fill="#000000" font-family="Arial" font-size="10">+ getCertificateStatus (cert_id: const std::string &amp; ) PermissionStatus</text>
 <text x="119075" y="5027" fill="#000000" font-family="Arial" font-size="10">+ getCertificateTrustStatus (cert_id: const std::string &amp; ) TrustStatus</text>
 <text x="119075" y="5043" fill="#000000" font-family="Arial" font-size="10">+ getTrustedCertificates () std::vector</text>
 <text x="119075" y="5059" fill="#000000" font-family="Arial" font-size="10">- matchTrustStore (std::vector, store: gnutls_x509_trust_list_st *) bool</text>
 <text x="119075" y="5075" fill="#000000" font-family="Arial" font-size="10">- setStoreCertStatus (crt: const crypto::Certificate &amp; , status: PermissionStatus ) void</text>
 <text x="119075" y="5091" fill="#000000" font-family="Arial" font-size="10">- updateKnownCerts () void</text>
 <polygon points="119668,4989 119668,4821 120027,4821 120027,4989 119668,4989" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="119668,4845 120027,4845" stroke="#0000ff" fill="none"/>
 <polyline points="119668,4917 120027,4917" stroke="#0000ff" fill="none"/>
 <text x="119792" y="4835" fill="#000000" font-family="Arial" font-size="10">ring::TurnServerInfo</text>
 <text x="119676" y="4859" fill="#000000" font-family="Arial" font-size="10">+ password: std::string</text>
 <text x="119676" y="4875" fill="#000000" font-family="Arial" font-size="10">+ realm: std::string</text>
 <text x="119676" y="4891" fill="#000000" font-family="Arial" font-size="10">+ uri: std::string</text>
 <text x="119676" y="4907" fill="#000000" font-family="Arial" font-size="10">+ username: std::string</text>
 <text x="119676" y="4931" fill="#000000" font-family="Arial" font-size="10">+ setPassword (args: const std::string &amp; ) TurnServerInfo &amp;</text>
 <text x="119676" y="4947" fill="#000000" font-family="Arial" font-size="10">+ setRealm (args: const std::string &amp; ) TurnServerInfo &amp;</text>
 <text x="119676" y="4963" fill="#000000" font-family="Arial" font-size="10">+ setUri (args: const std::string &amp; ) TurnServerInfo &amp;</text>
 <text x="119676" y="4979" fill="#000000" font-family="Arial" font-size="10">+ setUsername (args: const std::string &amp; ) TurnServerInfo &amp;</text>
 <polygon points="120045,5109 120045,4701 120793,4701 120793,5109 120045,5109" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="120045,4725 120793,4725" stroke="#0000ff" fill="none"/>
 <polyline points="120045,4781 120793,4781" stroke="#0000ff" fill="none"/>
 <text x="120347" y="4715" fill="#000000" font-family="Arial" font-size="10">ring::upnp::UPnPContext</text>
 <text x="120053" y="4739" fill="#000000" font-family="Arial" font-size="10">- igdListeners_: std::map</text>
 <text x="120053" y="4755" fill="#000000" font-family="Arial" font-size="10">- validIGDCondVar_: std::condition_variable</text>
 <text x="120053" y="4771" fill="#000000" font-family="Arial" font-size="10">- validIGDMutex_: mutable std::mutex</text>
 <text x="120053" y="4795" fill="#000000" font-family="Arial" font-size="10">+ SEARCH_TIMEOUT () constexpr unsigned</text>
 <text x="120053" y="4811" fill="#000000" font-family="Arial" font-size="10">+ UPnPContext () </text>
 <text x="120053" y="4827" fill="#000000" font-family="Arial" font-size="10">+ UPnPContext () </text>
 <text x="120053" y="4843" fill="#000000" font-family="Arial" font-size="10">+ addAnyMapping (port_desired: uint16_t , port_local: uint16_t , type: PortType , use_same_port: bool , unique: bool ) Mapping</text>
 <text x="120053" y="4859" fill="#000000" font-family="Arial" font-size="10">+ addIGDListener (IGDFoundCallback) size_t</text>
 <text x="120053" y="4875" fill="#000000" font-family="Arial" font-size="10">+ connectivityChanged () void</text>
 <text x="120053" y="4891" fill="#000000" font-family="Arial" font-size="10">+ hasValidIGD (timeout: std::chrono::seconds ) bool</text>
 <text x="120053" y="4907" fill="#000000" font-family="Arial" font-size="10">+ operator= () UPnPContext &amp;</text>
 <text x="120053" y="4923" fill="#000000" font-family="Arial" font-size="10">+ removeIGDListener (token: size_t ) void</text>
 <text x="120053" y="4939" fill="#000000" font-family="Arial" font-size="10">+ removeMapping (mapping: const Mapping &amp; ) void</text>
 <text x="120053" y="4955" fill="#000000" font-family="Arial" font-size="10">+ ~UPnPContext () </text>
 <text x="120053" y="4971" fill="#000000" font-family="Arial" font-size="10">+ getExternalIP () IpAddr</text>
 <text x="120053" y="4987" fill="#000000" font-family="Arial" font-size="10">+ getLocalIP () IpAddr</text>
 <text x="120053" y="5003" fill="#000000" font-family="Arial" font-size="10">- pmpRun_ () constexpr bool</text>
 <text x="120053" y="5019" fill="#000000" font-family="Arial" font-size="10">- addMapping (igd: IGD *, port_external: uint16_t , port_internal: uint16_t , type: PortType , upnp_error: int *) Mapping</text>
 <text x="120053" y="5035" fill="#000000" font-family="Arial" font-size="10">- chooseRandomPort (igd: const IGD &amp; , type: PortType ) uint16_t</text>
 <text x="120053" y="5051" fill="#000000" font-family="Arial" font-size="10">- clientRegistered_ () std::atomic_bool</text>
 <text x="120053" y="5067" fill="#000000" font-family="Arial" font-size="10">- listenerToken_ () size_t</text>
 <text x="120053" y="5083" fill="#000000" font-family="Arial" font-size="10">- chooseIGD_unlocked () IGD *</text>
 <text x="120053" y="5099" fill="#000000" font-family="Arial" font-size="10">- hasValidIGD_unlocked () bool</text>
 <polygon points="24212,4941 24212,4869 24353,4869 24353,4941 24212,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="24212,4893 24353,4893" stroke="#0000ff" fill="none"/>
 <polyline points="24212,4917 24353,4917" stroke="#0000ff" fill="none"/>
 <text x="24227" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::UndersizeRLP</text>
 <text x="24280" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="24220" y="4931" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="24286,4869 24292,4807 24299,4719 24305,4609 24309,4481 24310,4338 24305,4185 24293,4026 24273,3864 24243,3703 24202,3548 24200,3543 24198,3539 24196,3535 24194,3532 24191,3530 24189,3527 24187,3524 24184,3521 24182,3517 24180,3512 24157,3453 24137,3391 24119,3329 24104,3267 24090,3206 24078,3148 24068,3094 24060,3046 24054,3004 24049,2969" stroke="#CC0044" fill="none"/>
 <polygon points="24045,2970 24047,2959 24052,2969 24045,2970" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="120812,4941 120812,4869 121161,4869 121161,4941 120812,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="120812,4893 121161,4893" stroke="#0000ff" fill="none"/>
 <polyline points="120812,4917 121161,4917" stroke="#0000ff" fill="none"/>
 <text x="120868" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::UpdatePlaybackScale</text>
 <text x="120820" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;UpdatePlaybackScale&quot;</text>
 <text x="120984" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="121179,5013 121179,4797 121414,4797 121414,5013 121179,5013" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="121179,4821 121414,4821" stroke="#0000ff" fill="none"/>
 <polyline points="121179,4845 121414,4845" stroke="#0000ff" fill="none"/>
 <text x="121202" y="4811" fill="#000000" font-family="Arial" font-size="10">ring::SIPAccountBase::UsedPort</text>
 <text x="121294" y="4835" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="121187" y="4859" fill="#000000" font-family="Arial" font-size="10">+ UsedPort () </text>
 <text x="121187" y="4875" fill="#000000" font-family="Arial" font-size="10">+ UsedPort (UsedPort) </text>
 <text x="121187" y="4891" fill="#000000" font-family="Arial" font-size="10">+ UsedPort (p: in_port_t ) </text>
 <text x="121187" y="4907" fill="#000000" font-family="Arial" font-size="10">+ UsedPort () </text>
 <text x="121187" y="4923" fill="#000000" font-family="Arial" font-size="10">+ operator= (UsedPort) UsedPort &amp;</text>
 <text x="121187" y="4939" fill="#000000" font-family="Arial" font-size="10">+ operator= (p: in_port_t ) UsedPort &amp;</text>
 <text x="121187" y="4955" fill="#000000" font-family="Arial" font-size="10">+ operator= () UsedPort &amp;</text>
 <text x="121187" y="4971" fill="#000000" font-family="Arial" font-size="10">+ ~UsedPort () </text>
 <text x="121187" y="4987" fill="#000000" font-family="Arial" font-size="10">+ operator in_port_t () </text>
 <text x="121187" y="5003" fill="#000000" font-family="Arial" font-size="10">- port_ () in_port_t</text>
 <polygon points="26460,2959 26460,2887 26601,2887 26601,2959 26460,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="26460,2911 26601,2911" stroke="#0000ff" fill="none"/>
 <polyline points="26460,2935 26601,2935" stroke="#0000ff" fill="none"/>
 <text x="26475" y="2901" fill="#000000" font-family="Arial" font-size="10">dev::ValueTooLarge</text>
 <text x="26528" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="26468" y="2949" fill="#000000" font-family="Arial" font-size="10">+ what () const char *</text>
 <polyline points="26533,2887 26535,2854 26537,2811 26538,2761 26536,2706 26532,2646 26525,2583 26514,2519 26498,2455 26477,2393 26450,2334 26372,2207 26281,2087 26179,1975 26071,1871 25960,1776 25850,1690 25744,1614 25646,1549 25559,1496 25488,1454" stroke="#CC0044" fill="none"/>
 <polygon points="25487,1457 25480,1449 25490,1451 25487,1457" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="121432,5005 121432,4805 121637,4805 121637,5005 121432,5005" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="121432,4829 121637,4829" stroke="#0000ff" fill="none"/>
 <polyline points="121432,4981 121637,4981" stroke="#0000ff" fill="none"/>
 <text x="121456" y="4819" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoBitrateInfo</text>
 <text x="121440" y="4843" fill="#000000" font-family="Arial" font-size="10">+ cptBitrateChecking: unsigned</text>
 <text x="121440" y="4859" fill="#000000" font-family="Arial" font-size="10">+ maxBitrateChecking: unsigned</text>
 <text x="121440" y="4875" fill="#000000" font-family="Arial" font-size="10">+ packetLostThreshold: float</text>
 <text x="121440" y="4891" fill="#000000" font-family="Arial" font-size="10">+ videoBitrateCurrent: unsigned</text>
 <text x="121440" y="4907" fill="#000000" font-family="Arial" font-size="10">+ videoBitrateMax: unsigned</text>
 <text x="121440" y="4923" fill="#000000" font-family="Arial" font-size="10">+ videoBitrateMin: unsigned</text>
 <text x="121440" y="4939" fill="#000000" font-family="Arial" font-size="10">+ videoQualityCurrent: unsigned</text>
 <text x="121440" y="4955" fill="#000000" font-family="Arial" font-size="10">+ videoQualityMax: unsigned</text>
 <text x="121440" y="4971" fill="#000000" font-family="Arial" font-size="10">+ videoQualityMin: unsigned</text>
 <text x="121532" y="4995" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="121655,5293 121655,4517 122261,4517 122261,5293 121655,5293" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="121655,4541 122261,4541" stroke="#0000ff" fill="none"/>
 <polyline points="121655,4565 122261,4565" stroke="#0000ff" fill="none"/>
 <text x="121890" y="4531" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoDevice</text>
 <text x="121663" y="4555" fill="#000000" font-family="Arial" font-size="10">- deviceImpl_: std::shared_ptr</text>
 <text x="121663" y="4579" fill="#000000" font-family="Arial" font-size="10">+ VideoDevice (path: const std::string &amp; , std: const , std::string) </text>
 <text x="121663" y="4595" fill="#000000" font-family="Arial" font-size="10">+ VideoDevice (path: const std::string &amp; , std: const , std::string) </text>
 <text x="121663" y="4611" fill="#000000" font-family="Arial" font-size="10">+ VideoDevice (path: const std::string &amp; , std: const , std::string) </text>
 <text x="121663" y="4627" fill="#000000" font-family="Arial" font-size="10">+ VideoDevice (path: const std::string &amp; , std: const , std::string) </text>
 <text x="121663" y="4643" fill="#000000" font-family="Arial" font-size="10">+ VideoDevice (path: const std::string &amp; , std: const , std::string) </text>
 <text x="121663" y="4659" fill="#000000" font-family="Arial" font-size="10">+ applySettings (settings: VideoSettings ) void</text>
 <text x="121663" y="4675" fill="#000000" font-family="Arial" font-size="10">+ name () std::string</text>
 <text x="121663" y="4691" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDevice () </text>
 <text x="121663" y="4707" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDevice () </text>
 <text x="121663" y="4723" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDevice () </text>
 <text x="121663" y="4739" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDevice () </text>
 <text x="121663" y="4755" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDevice () </text>
 <text x="121663" y="4771" fill="#000000" font-family="Arial" font-size="10">+ getCapabilities () DRing::VideoCapabilities</text>
 <text x="121663" y="4787" fill="#000000" font-family="Arial" font-size="10">+ getChannelList () std::vector</text>
 <text x="121663" y="4803" fill="#000000" font-family="Arial" font-size="10">+ getChannelList () std::vector</text>
 <text x="121663" y="4819" fill="#000000" font-family="Arial" font-size="10">+ getChannelList () std::vector</text>
 <text x="121663" y="4835" fill="#000000" font-family="Arial" font-size="10">+ getChannelList () std::vector</text>
 <text x="121663" y="4851" fill="#000000" font-family="Arial" font-size="10">+ getChannelList () std::vector</text>
 <text x="121663" y="4867" fill="#000000" font-family="Arial" font-size="10">+ getDefaultSettings () VideoSettings</text>
 <text x="121663" y="4883" fill="#000000" font-family="Arial" font-size="10">+ getDeviceParams () DeviceParams</text>
 <text x="121663" y="4899" fill="#000000" font-family="Arial" font-size="10">+ getDeviceParams () DeviceParams</text>
 <text x="121663" y="4915" fill="#000000" font-family="Arial" font-size="10">+ getDeviceParams () DeviceParams</text>
 <text x="121663" y="4931" fill="#000000" font-family="Arial" font-size="10">+ getDeviceParams () DeviceParams</text>
 <text x="121663" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getDeviceParams () DeviceParams</text>
 <text x="121663" y="4963" fill="#000000" font-family="Arial" font-size="10">+ getNode () const std::string &amp;</text>
 <text x="121663" y="4979" fill="#000000" font-family="Arial" font-size="10">+ getSettings () VideoSettings</text>
 <text x="121663" y="4995" fill="#000000" font-family="Arial" font-size="10">- node_ () std::string</text>
 <text x="121663" y="5011" fill="#000000" font-family="Arial" font-size="10">- setDeviceParams (DeviceParams: const ) void</text>
 <text x="121663" y="5027" fill="#000000" font-family="Arial" font-size="10">- setDeviceParams (params: const DeviceParams &amp; ) void</text>
 <text x="121663" y="5043" fill="#000000" font-family="Arial" font-size="10">- setDeviceParams (params: const DeviceParams &amp; ) void</text>
 <text x="121663" y="5059" fill="#000000" font-family="Arial" font-size="10">- setDeviceParams (params: const DeviceParams &amp; ) void</text>
 <text x="121663" y="5075" fill="#000000" font-family="Arial" font-size="10">- setDeviceParams (params: const DeviceParams &amp; ) void</text>
 <text x="121663" y="5091" fill="#000000" font-family="Arial" font-size="10">- getRateList (channel: const std::string &amp; , size: VideoSize ) std::vector</text>
 <text x="121663" y="5107" fill="#000000" font-family="Arial" font-size="10">- getRateList (channel: const std::string &amp; , size: VideoSize ) std::vector</text>
 <text x="121663" y="5123" fill="#000000" font-family="Arial" font-size="10">- getRateList (channel: const std::string &amp; , size: VideoSize ) std::vector</text>
 <text x="121663" y="5139" fill="#000000" font-family="Arial" font-size="10">- getRateList (channel: const std::string &amp; , size: VideoSize ) std::vector</text>
 <text x="121663" y="5155" fill="#000000" font-family="Arial" font-size="10">- getRateList (channel: const std::string &amp; , size: VideoSize ) std::vector</text>
 <text x="121663" y="5171" fill="#000000" font-family="Arial" font-size="10">- getSizeList (channel: const std::string &amp; ) std::vector</text>
 <text x="121663" y="5187" fill="#000000" font-family="Arial" font-size="10">- getSizeList (channel: const std::string &amp; ) std::vector</text>
 <text x="121663" y="5203" fill="#000000" font-family="Arial" font-size="10">- getSizeList (channel: const std::string &amp; ) std::vector</text>
 <text x="121663" y="5219" fill="#000000" font-family="Arial" font-size="10">- getSizeList (channel: const std::string &amp; ) std::vector</text>
 <text x="121663" y="5235" fill="#000000" font-family="Arial" font-size="10">- getSizeList (channel: const std::string &amp; ) std::vector</text>
 <text x="121663" y="5251" fill="#000000" font-family="Arial" font-size="10">- rateFromString (channel: const std::string &amp; , size: VideoSize , rate: const std::string &amp; ) FrameRate</text>
 <text x="121663" y="5267" fill="#000000" font-family="Arial" font-size="10">- sizeFromString (channel: const std::string &amp; , size: const std::string &amp; ) VideoSize</text>
 <text x="121663" y="5283" fill="#000000" font-family="Arial" font-size="10">- sizeToString (w: unsigned , h: unsigned ) std::string</text>
 <polygon points="122280,5045 122280,4765 122699,4765 122699,5045 122280,5045" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="122280,4789 122699,4789" stroke="#0000ff" fill="none"/>
 <polyline points="122280,4813 122699,4813" stroke="#0000ff" fill="none"/>
 <text x="122409" y="4779" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoDeviceImpl</text>
 <text x="122487" y="4803" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="122288" y="4827" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceImpl (path: const std::string &amp; , std: const , std::string) </text>
 <text x="122288" y="4843" fill="#000000" font-family="Arial" font-size="10">+ selectFormat () void</text>
 <text x="122288" y="4859" fill="#000000" font-family="Arial" font-size="10">+ setDeviceParams (params: const DeviceParams &amp; ) void</text>
 <text x="122288" y="4875" fill="#000000" font-family="Arial" font-size="10">+ getDeviceParams () DeviceParams</text>
 <text x="122288" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getRateList () std::vector</text>
 <text x="122288" y="4907" fill="#000000" font-family="Arial" font-size="10">+ getSizeList () std::vector</text>
 <text x="122288" y="4923" fill="#000000" font-family="Arial" font-size="10">- fmt_ () const uwp_fmt *</text>
 <text x="122288" y="4939" fill="#000000" font-family="Arial" font-size="10">- formats_ () std::vector</text>
 <text x="122288" y="4955" fill="#000000" font-family="Arial" font-size="10">- rate_ () FrameRate</text>
 <text x="122288" y="4971" fill="#000000" font-family="Arial" font-size="10">- rates_ () std::vector</text>
 <text x="122288" y="4987" fill="#000000" font-family="Arial" font-size="10">- size_ () VideoSize</text>
 <text x="122288" y="5003" fill="#000000" font-family="Arial" font-size="10">- sizes_ () std::vector</text>
 <text x="122288" y="5019" fill="#000000" font-family="Arial" font-size="10">- getRate (rate: FrameRate ) FrameRate</text>
 <text x="122288" y="5035" fill="#000000" font-family="Arial" font-size="10">- getSize (size: VideoSize ) VideoSize</text>
 <polygon points="122717,5029 122717,4781 123102,4781 123102,5029 122717,5029" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="122717,4805 123102,4805" stroke="#0000ff" fill="none"/>
 <polyline points="122717,4909 123102,4909" stroke="#0000ff" fill="none"/>
 <text x="122829" y="4795" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoDeviceImpl</text>
 <text x="122725" y="4819" fill="#000000" font-family="Arial" font-size="10">+ device: std::string</text>
 <text x="122725" y="4835" fill="#000000" font-family="Arial" font-size="10">+ name: std::string</text>
 <text x="122725" y="4851" fill="#000000" font-family="Arial" font-size="10">- channel_: VideoV4l2Channel</text>
 <text x="122725" y="4867" fill="#000000" font-family="Arial" font-size="10">- channels_: std::vector</text>
 <text x="122725" y="4883" fill="#000000" font-family="Arial" font-size="10">- rate_: VideoV4l2Rate</text>
 <text x="122725" y="4899" fill="#000000" font-family="Arial" font-size="10">- size_: VideoV4l2Size</text>
 <text x="122725" y="4923" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceImpl (path: const string &amp; ) </text>
 <text x="122725" y="4939" fill="#000000" font-family="Arial" font-size="10">+ setDeviceParams (params: const DeviceParams &amp; ) void</text>
 <text x="122725" y="4955" fill="#000000" font-family="Arial" font-size="10">+ getChannelList () vector</text>
 <text x="122725" y="4971" fill="#000000" font-family="Arial" font-size="10">+ getDeviceParams () DeviceParams</text>
 <text x="122725" y="4987" fill="#000000" font-family="Arial" font-size="10">+ getRateList (channel: const string &amp; , size: VideoSize ) vector</text>
 <text x="122725" y="5003" fill="#000000" font-family="Arial" font-size="10">+ getSizeList (channel: const string &amp; ) vector</text>
 <text x="122725" y="5019" fill="#000000" font-family="Arial" font-size="10">- getChannel (name: const string &amp; ) const VideoV4l2Channel &amp;</text>
 <polygon points="123120,5053 123120,4757 123557,4757 123557,5053 123120,5053" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="123120,4781 123557,4781" stroke="#0000ff" fill="none"/>
 <polyline points="123120,4901 123557,4901" stroke="#0000ff" fill="none"/>
 <text x="123258" y="4771" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoDeviceImpl</text>
 <text x="123128" y="4795" fill="#000000" font-family="Arial" font-size="10">+ device: std::string</text>
 <text x="123128" y="4811" fill="#000000" font-family="Arial" font-size="10">+ id: unsigned int</text>
 <text x="123128" y="4827" fill="#000000" font-family="Arial" font-size="10">+ name: std::string</text>
 <text x="123128" y="4843" fill="#000000" font-family="Arial" font-size="10">- cInterface: std::unique_ptr</text>
 <text x="123128" y="4859" fill="#000000" font-family="Arial" font-size="10">- capMap_: std::map</text>
 <text x="123128" y="4875" fill="#000000" font-family="Arial" font-size="10">- rateList_: std::map</text>
 <text x="123128" y="4891" fill="#000000" font-family="Arial" font-size="10">- sizeList_: std::vector</text>
 <text x="123128" y="4915" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceImpl (id: const std::string &amp; ) </text>
 <text x="123128" y="4931" fill="#000000" font-family="Arial" font-size="10">+ setDeviceParams (params: const DeviceParams &amp; ) void</text>
 <text x="123128" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getChannelList () std::vector</text>
 <text x="123128" y="4963" fill="#000000" font-family="Arial" font-size="10">+ getDeviceParams () DeviceParams</text>
 <text x="123128" y="4979" fill="#000000" font-family="Arial" font-size="10">+ getRateList (channel: const std::string &amp; , size: VideoSize ) std::vector</text>
 <text x="123128" y="4995" fill="#000000" font-family="Arial" font-size="10">+ getSizeList (channel: const std::string &amp; ) std::vector</text>
 <text x="123128" y="5011" fill="#000000" font-family="Arial" font-size="10">+ getSizeList () std::vector</text>
 <text x="123128" y="5027" fill="#000000" font-family="Arial" font-size="10">- fail (error: const std::string &amp; ) void</text>
 <text x="123128" y="5043" fill="#000000" font-family="Arial" font-size="10">- setup () void</text>
 <polygon points="123575,5045 123575,4765 123929,4765 123929,5045 123575,5045" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="123575,4789 123929,4789" stroke="#0000ff" fill="none"/>
 <polyline points="123575,4813 123929,4813" stroke="#0000ff" fill="none"/>
 <text x="123672" y="4779" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoDeviceImpl</text>
 <text x="123750" y="4803" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="123583" y="4827" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceImpl (path: const std::string &amp; ) </text>
 <text x="123583" y="4843" fill="#000000" font-family="Arial" font-size="10">+ setDeviceParams (params: const DeviceParams &amp; ) void</text>
 <text x="123583" y="4859" fill="#000000" font-family="Arial" font-size="10">+ getDeviceParams () DeviceParams</text>
 <text x="123583" y="4875" fill="#000000" font-family="Arial" font-size="10">+ getRateList () std::vector</text>
 <text x="123583" y="4891" fill="#000000" font-family="Arial" font-size="10">+ getSizeList () std::vector</text>
 <text x="123583" y="4907" fill="#000000" font-family="Arial" font-size="10">- fmt_ () const android_fmt *</text>
 <text x="123583" y="4923" fill="#000000" font-family="Arial" font-size="10">- formats_ () std::vector</text>
 <text x="123583" y="4939" fill="#000000" font-family="Arial" font-size="10">- rate_ () FrameRate</text>
 <text x="123583" y="4955" fill="#000000" font-family="Arial" font-size="10">- rates_ () std::vector</text>
 <text x="123583" y="4971" fill="#000000" font-family="Arial" font-size="10">- selectFormat () void</text>
 <text x="123583" y="4987" fill="#000000" font-family="Arial" font-size="10">- size_ () VideoSize</text>
 <text x="123583" y="5003" fill="#000000" font-family="Arial" font-size="10">- sizes_ () std::vector</text>
 <text x="123583" y="5019" fill="#000000" font-family="Arial" font-size="10">- getRate (rate: FrameRate ) FrameRate</text>
 <text x="123583" y="5035" fill="#000000" font-family="Arial" font-size="10">- getSize (size: VideoSize ) VideoSize</text>
 <polygon points="391,1705 391,1105 808,1105 808,1705 391,1705" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="391,1129 808,1129" stroke="#0000ff" fill="none"/>
 <polyline points="391,1217 808,1217" stroke="#0000ff" fill="none"/>
 <text x="509" y="1119" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoDeviceMonitor</text>
 <text x="399" y="1143" fill="#000000" font-family="Arial" font-size="10">- CONFIG_LABEL: constexpr const char *= &quot;video&quot;</text>
 <text x="399" y="1159" fill="#000000" font-family="Arial" font-size="10">- defaultDevice_: std::string= &quot;&quot;</text>
 <text x="399" y="1175" fill="#000000" font-family="Arial" font-size="10">- devices_: std::vector</text>
 <text x="399" y="1191" fill="#000000" font-family="Arial" font-size="10">- monitorImpl_: std::unique_ptr</text>
 <text x="399" y="1207" fill="#000000" font-family="Arial" font-size="10">- preferences_: std::vector</text>
 <text x="399" y="1231" fill="#000000" font-family="Arial" font-size="10">+ serialize (out: YAML::Emitter &amp; ) void Virtual</text>
 <text x="399" y="1247" fill="#000000" font-family="Arial" font-size="10">+ unserialize (in: const YAML::Node &amp; ) void Virtual</text>
 <text x="399" y="1263" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDeviceMonitor () Virtual</text>
 <text x="399" y="1279" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDeviceMonitor () Virtual</text>
 <text x="399" y="1295" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDeviceMonitor () Virtual</text>
 <text x="399" y="1311" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDeviceMonitor () Virtual</text>
 <text x="399" y="1327" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDeviceMonitor () Virtual</text>
 <text x="399" y="1343" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitor () </text>
 <text x="399" y="1359" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitor () </text>
 <text x="399" y="1375" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitor () </text>
 <text x="399" y="1391" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitor () </text>
 <text x="399" y="1407" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitor () </text>
 <text x="399" y="1423" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitor () </text>
 <text x="399" y="1439" fill="#000000" font-family="Arial" font-size="10">+ addDevice (node: const string &amp; , std: const , std::string) void</text>
 <text x="399" y="1455" fill="#000000" font-family="Arial" font-size="10">+ applySettings (name: const string &amp; , settings: VideoSettings ) void</text>
 <text x="399" y="1471" fill="#000000" font-family="Arial" font-size="10">+ getSettings (name: const string &amp; ) VideoSettings</text>
 <text x="399" y="1487" fill="#000000" font-family="Arial" font-size="10">+ operator= () VideoDeviceMonitor &amp;</text>
 <text x="399" y="1503" fill="#000000" font-family="Arial" font-size="10">+ removeDevice (node: const string &amp; ) void</text>
 <text x="399" y="1519" fill="#000000" font-family="Arial" font-size="10">+ setDefaultDevice (name: const std::string &amp; ) void</text>
 <text x="399" y="1535" fill="#000000" font-family="Arial" font-size="10">+ getCapabilities (name: const string &amp; ) DRing::VideoCapabilities</text>
 <text x="399" y="1551" fill="#000000" font-family="Arial" font-size="10">+ getDefaultDevice () string</text>
 <text x="399" y="1567" fill="#000000" font-family="Arial" font-size="10">+ getDeviceList () vector</text>
 <text x="399" y="1583" fill="#000000" font-family="Arial" font-size="10">+ getDeviceParams (name: const std::string &amp; ) DeviceParams</text>
 <text x="399" y="1599" fill="#000000" font-family="Arial" font-size="10">+ getMRLForDefaultDevice () std::string</text>
 <text x="399" y="1615" fill="#000000" font-family="Arial" font-size="10">- findDeviceByName (name: const string &amp; ) vector::iterator</text>
 <text x="399" y="1631" fill="#000000" font-family="Arial" font-size="10">- findDeviceByNode (node: const string &amp; ) vector::iterator</text>
 <text x="399" y="1647" fill="#000000" font-family="Arial" font-size="10">- findPreferencesByName (name: const string &amp; ) vector::iterator</text>
 <text x="399" y="1663" fill="#000000" font-family="Arial" font-size="10">- overwritePreferences (settings: VideoSettings ) void</text>
 <text x="399" y="1679" fill="#000000" font-family="Arial" font-size="10">- findDeviceByName (name: const string &amp; ) vector::const_iterator</text>
 <text x="399" y="1695" fill="#000000" font-family="Arial" font-size="10">- findDeviceByNode (node: const string &amp; ) vector::const_iterator</text>
 <polyline points="600,1105 606,1046 614,985 626,922 640,859 659,796 681,734 707,674 738,616 774,562 816,512 850,480 887,451 927,426 969,405 1013,386 1057,371 1102,358 1146,347 1189,339 1230,332" stroke="#CC0044" fill="none"/>
 <polygon points="1230,329 1240,331 1230,336 1230,329" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="123947,5021 123947,4789 124303,4789 124303,5021 123947,5021" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="123947,4813 124303,4813" stroke="#0000ff" fill="none"/>
 <polyline points="123947,4917 124303,4917" stroke="#0000ff" fill="none"/>
 <text x="124023" y="4803" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoDeviceMonitorImpl</text>
 <text x="123955" y="4827" fill="#000000" font-family="Arial" font-size="10">- monitor_: VideoDeviceMonitor *</text>
 <text x="123955" y="4843" fill="#000000" font-family="Arial" font-size="10">- mutex_: mutable std::mutex</text>
 <text x="123955" y="4859" fill="#000000" font-family="Arial" font-size="10">- probing_: bool</text>
 <text x="123955" y="4875" fill="#000000" font-family="Arial" font-size="10">- thread_: std::thread</text>
 <text x="123955" y="4891" fill="#000000" font-family="Arial" font-size="10">- udev_: udev *</text>
 <text x="123955" y="4907" fill="#000000" font-family="Arial" font-size="10">- udev_mon_: udev_monitor *</text>
 <text x="123955" y="4931" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitorImpl (monitor: VideoDeviceMonitor *) </text>
 <text x="123955" y="4947" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitorImpl () </text>
 <text x="123955" y="4963" fill="#000000" font-family="Arial" font-size="10">+ operator= () VideoDeviceMonitorImpl &amp;</text>
 <text x="123955" y="4979" fill="#000000" font-family="Arial" font-size="10">+ start () void</text>
 <text x="123955" y="4995" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDeviceMonitorImpl () </text>
 <text x="123955" y="5011" fill="#000000" font-family="Arial" font-size="10">- run () void</text>
 <polygon points="124321,5005 124321,4805 124677,4805 124677,5005 124321,5005" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="124321,4829 124677,4829" stroke="#0000ff" fill="none"/>
 <polyline points="124321,4901 124677,4901" stroke="#0000ff" fill="none"/>
 <text x="124397" y="4819" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoDeviceMonitorImpl</text>
 <text x="124329" y="4843" fill="#000000" font-family="Arial" font-size="10">- monitor_: VideoDeviceMonitor *</text>
 <text x="124329" y="4859" fill="#000000" font-family="Arial" font-size="10">- mutex_: mutable std::mutex</text>
 <text x="124329" y="4875" fill="#000000" font-family="Arial" font-size="10">- probing_: bool</text>
 <text x="124329" y="4891" fill="#000000" font-family="Arial" font-size="10">- thread_: std::thread</text>
 <text x="124329" y="4915" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitorImpl (monitor: VideoDeviceMonitor *) </text>
 <text x="124329" y="4931" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitorImpl () </text>
 <text x="124329" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator= () VideoDeviceMonitorImpl &amp;</text>
 <text x="124329" y="4963" fill="#000000" font-family="Arial" font-size="10">+ start () void</text>
 <text x="124329" y="4979" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDeviceMonitorImpl () </text>
 <text x="124329" y="4995" fill="#000000" font-family="Arial" font-size="10">- run () void</text>
 <polygon points="124695,4973 124695,4837 125051,4837 125051,4973 124695,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="124695,4861 125051,4861" stroke="#0000ff" fill="none"/>
 <polyline points="124695,4885 125051,4885" stroke="#0000ff" fill="none"/>
 <text x="124771" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoDeviceMonitorImpl</text>
 <text x="124703" y="4875" fill="#000000" font-family="Arial" font-size="10">- monitor_: VideoDeviceMonitor *</text>
 <text x="124703" y="4899" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitorImpl (monitor: VideoDeviceMonitor *) </text>
 <text x="124703" y="4915" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitorImpl () </text>
 <text x="124703" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator= () VideoDeviceMonitorImpl &amp;</text>
 <text x="124703" y="4947" fill="#000000" font-family="Arial" font-size="10">+ start () void</text>
 <text x="124703" y="4963" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDeviceMonitorImpl () </text>
 <polygon points="125069,5005 125069,4805 125425,4805 125425,5005 125069,5005" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="125069,4829 125425,4829" stroke="#0000ff" fill="none"/>
 <polyline points="125069,4901 125425,4901" stroke="#0000ff" fill="none"/>
 <text x="125145" y="4819" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoDeviceMonitorImpl</text>
 <text x="125077" y="4843" fill="#000000" font-family="Arial" font-size="10">- monitor_: VideoDeviceMonitor *</text>
 <text x="125077" y="4859" fill="#000000" font-family="Arial" font-size="10">- mutex_: mutable std::mutex</text>
 <text x="125077" y="4875" fill="#000000" font-family="Arial" font-size="10">- probing_: bool</text>
 <text x="125077" y="4891" fill="#000000" font-family="Arial" font-size="10">- thread_: std::thread</text>
 <text x="125077" y="4915" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitorImpl (monitor: VideoDeviceMonitor *) </text>
 <text x="125077" y="4931" fill="#000000" font-family="Arial" font-size="10">+ VideoDeviceMonitorImpl () </text>
 <text x="125077" y="4947" fill="#000000" font-family="Arial" font-size="10">+ operator= () VideoDeviceMonitorImpl &amp;</text>
 <text x="125077" y="4963" fill="#000000" font-family="Arial" font-size="10">+ start () void</text>
 <text x="125077" y="4979" fill="#000000" font-family="Arial" font-size="10">+ ~VideoDeviceMonitorImpl () </text>
 <text x="125077" y="4995" fill="#000000" font-family="Arial" font-size="10">- run () void</text>
 <polyline points="15740,163 15736,160 15733,157 15729,153 15726,150 15723,147 15719,144 15716,141 15713,138 15709,135 15706,132" stroke="#CC0044" fill="none"/>
 <polygon points="15704,135 15699,125 15709,129 15704,135" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="125443,4965 125443,4845 125659,4845 125659,4965 125443,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="125443,4869 125659,4869" stroke="#0000ff" fill="none"/>
 <polyline points="125443,4941 125659,4941" stroke="#0000ff" fill="none"/>
 <text x="125467" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoFrameBuffer</text>
 <text x="125451" y="4883" fill="#000000" font-family="Arial" font-size="10">+ data: void *</text>
 <text x="125451" y="4899" fill="#000000" font-family="Arial" font-size="10">+ index: int</text>
 <text x="125451" y="4915" fill="#000000" font-family="Arial" font-size="10">+ length: size_t</text>
 <text x="125451" y="4931" fill="#000000" font-family="Arial" font-size="10">+ status: enum VideoFrameStatus</text>
 <text x="125451" y="4955" fill="#000000" font-family="Arial" font-size="10">+ VideoFrameBuffer () </text>
 <polygon points="125678,4941 125678,4869 125875,4869 125875,4941 125678,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="125678,4893 125875,4893" stroke="#0000ff" fill="none"/>
 <polyline points="125678,4917 125875,4917" stroke="#0000ff" fill="none"/>
 <text x="125686" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::video::test::VideoInputTest</text>
 <text x="125774" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="125686" y="4931" fill="#000000" font-family="Arial" font-size="10">+ testInput () void</text>
 <polygon points="125893,4965 125893,4845 126190,4845 126190,4965 125893,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="125893,4869 126190,4869" stroke="#0000ff" fill="none"/>
 <polyline points="125893,4941 126190,4941" stroke="#0000ff" fill="none"/>
 <text x="125985" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::VideoManager</text>
 <text x="125901" y="4883" fill="#000000" font-family="Arial" font-size="10">+ started: std::atomic_bool</text>
 <text x="125901" y="4899" fill="#000000" font-family="Arial" font-size="10">+ videoDeviceMonitor: video::VideoDeviceMonitor</text>
 <text x="125901" y="4915" fill="#000000" font-family="Arial" font-size="10">+ videoInput: std::weak_ptr</text>
 <text x="125901" y="4931" fill="#000000" font-family="Arial" font-size="10">+ videoPreview: std::shared_ptr</text>
 <text x="126039" y="4955" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="126208,4965 126208,4845 126533,4845 126533,4965 126208,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="126208,4869 126533,4869" stroke="#0000ff" fill="none"/>
 <polyline points="126208,4941 126533,4941" stroke="#0000ff" fill="none"/>
 <text x="126248" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoMixer::VideoMixerSource</text>
 <text x="126216" y="4883" fill="#000000" font-family="Arial" font-size="10">+ Observable= nullptr</text>
 <text x="126216" y="4899" fill="#000000" font-family="Arial" font-size="10">+ render_frame: std::unique_ptr</text>
 <text x="126216" y="4915" fill="#000000" font-family="Arial" font-size="10">+ update_frame: std::unique_ptr</text>
 <text x="126216" y="4931" fill="#000000" font-family="Arial" font-size="10">- mutex_: std::mutex</text>
 <text x="126216" y="4955" fill="#000000" font-family="Arial" font-size="10">+ atomic_swap_render (other: std::unique_ptr &amp; ) void</text>
 <polygon points="126551,4941 126551,4869 126841,4869 126841,4941 126551,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="126551,4893 126841,4893" stroke="#0000ff" fill="none"/>
 <polyline points="126551,4917 126841,4917" stroke="#0000ff" fill="none"/>
 <text x="126607" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::VideoMuted</text>
 <text x="126559" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;VideoMuted&quot;</text>
 <text x="126694" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="20971,5341 20971,4469 21497,4469 21497,5341 20971,5341" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="20971,4493 21497,4493" stroke="#0000ff" fill="none"/>
 <polyline points="20971,4693 21497,4693" stroke="#0000ff" fill="none"/>
 <text x="21151" y="4483" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoRtpSession</text>
 <text x="20979" y="4507" fill="#000000" font-family="Arial" font-size="10">- initSeqVal_: uint16_t</text>
 <text x="20979" y="4523" fill="#000000" font-family="Arial" font-size="10">- input_: std::string</text>
 <text x="20979" y="4539" fill="#000000" font-family="Arial" font-size="10">- lastLongRTCPCheck_: std::chrono::time_point</text>
 <text x="20979" y="4555" fill="#000000" font-family="Arial" font-size="10">- lastRTCPCheck_: std::chrono::time_point</text>
 <text x="20979" y="4571" fill="#000000" font-family="Arial" font-size="10">- localVideoParams_: DeviceParams</text>
 <text x="20979" y="4587" fill="#000000" font-family="Arial" font-size="10">- receiveThread_: std::unique_ptr</text>
 <text x="20979" y="4603" fill="#000000" font-family="Arial" font-size="10">- receiverRestartThread_: InterruptedThreadLoop</text>
 <text x="20979" y="4619" fill="#000000" font-family="Arial" font-size="10">- rtcpCheckerThread_: InterruptedThreadLoop</text>
 <text x="20979" y="4635" fill="#000000" font-family="Arial" font-size="10">- sender_: std::unique_ptr</text>
 <text x="20979" y="4651" fill="#000000" font-family="Arial" font-size="10">- videoBitrateInfo_: VideoBitrateInfo= {...}</text>
 <text x="20979" y="4667" fill="#000000" font-family="Arial" font-size="10">- videoLocal_: std::shared_ptr</text>
 <text x="20979" y="4683" fill="#000000" font-family="Arial" font-size="10">- videoMixer_: std::shared_ptr</text>
 <text x="20979" y="4707" fill="#000000" font-family="Arial" font-size="10">+ restartReceiver () void Virtual</text>
 <text x="20979" y="4723" fill="#000000" font-family="Arial" font-size="10">+ restartSender () void Virtual</text>
 <text x="20979" y="4739" fill="#000000" font-family="Arial" font-size="10">+ start (rtp_sock: std::unique_ptr , rtcp_sock: std::unique_ptr ) void Virtual</text>
 <text x="20979" y="4755" fill="#000000" font-family="Arial" font-size="10">+ stop () void Virtual</text>
 <text x="20979" y="4771" fill="#000000" font-family="Arial" font-size="10">+ ~VideoRtpSession () Virtual</text>
 <text x="20979" y="4787" fill="#000000" font-family="Arial" font-size="10">+ VideoRtpSession (callID: const string &amp; , localVideoParams: const DeviceParams &amp; ) </text>
 <text x="20979" y="4803" fill="#000000" font-family="Arial" font-size="10">+ bindMixer (mixer: VideoMixer *) void</text>
 <text x="20979" y="4819" fill="#000000" font-family="Arial" font-size="10">+ enterConference (conference: Conference *) void</text>
 <text x="20979" y="4835" fill="#000000" font-family="Arial" font-size="10">+ exitConference () void</text>
 <text x="20979" y="4851" fill="#000000" font-family="Arial" font-size="10">+ forceKeyFrame () void</text>
 <text x="20979" y="4867" fill="#000000" font-family="Arial" font-size="10">+ switchInput (input: const std::string &amp; ) void</text>
 <text x="20979" y="4883" fill="#000000" font-family="Arial" font-size="10">+ unbindMixer () void</text>
 <text x="20979" y="4899" fill="#000000" font-family="Arial" font-size="10">+ useCodec (codec: const AccountVideoCodecInfo *) bool</text>
 <text x="20979" y="4915" fill="#000000" font-family="Arial" font-size="10">- MAX_ADAPTATIVE_BITRATE_ITERATION () constexpr unsigned</text>
 <text x="20979" y="4931" fill="#000000" font-family="Arial" font-size="10">- MAX_SIZE_HISTO_BITRATE_ () constexpr unsigned</text>
 <text x="20979" y="4947" fill="#000000" font-family="Arial" font-size="10">- MAX_SIZE_HISTO_QUALITY_ () constexpr unsigned</text>
 <text x="20979" y="4963" fill="#000000" font-family="Arial" font-size="10">- NO_PACKET_LOSS_CALCULATED () constexpr float</text>
 <text x="20979" y="4979" fill="#000000" font-family="Arial" font-size="10">- PACKET_LOSS_THRESHOLD () constexpr float</text>
 <text x="20979" y="4995" fill="#000000" font-family="Arial" font-size="10">- RECEIVER_RESTART_INTERVAL () const unsigned</text>
 <text x="20979" y="5011" fill="#000000" font-family="Arial" font-size="10">- RTCP_CHECKING_INTERVAL () const unsigned</text>
 <text x="20979" y="5027" fill="#000000" font-family="Arial" font-size="10">- RTCP_LONG_CHECKING_INTERVAL () const unsigned</text>
 <text x="20979" y="5043" fill="#000000" font-family="Arial" font-size="10">- adaptQualityAndBitrate () void</text>
 <text x="20979" y="5059" fill="#000000" font-family="Arial" font-size="10">- checkPeerPacketLoss () float</text>
 <text x="20979" y="5075" fill="#000000" font-family="Arial" font-size="10">- checkReceiver () void</text>
 <text x="20979" y="5091" fill="#000000" font-family="Arial" font-size="10">- cleanupRtcpChecker () void</text>
 <text x="20979" y="5107" fill="#000000" font-family="Arial" font-size="10">- conference_ () Conference *</text>
 <text x="20979" y="5123" fill="#000000" font-family="Arial" font-size="10">- getLowerBitrate () unsigned</text>
 <text x="20979" y="5139" fill="#000000" font-family="Arial" font-size="10">- getLowerQuality () unsigned</text>
 <text x="20979" y="5155" fill="#000000" font-family="Arial" font-size="10">- getVideoBitrateInfo () void</text>
 <text x="20979" y="5171" fill="#000000" font-family="Arial" font-size="10">- hasReachMaxQuality_ () bool</text>
 <text x="20979" y="5187" fill="#000000" font-family="Arial" font-size="10">- histoBitrate_ () std::list</text>
 <text x="20979" y="5203" fill="#000000" font-family="Arial" font-size="10">- histoQuality_ () std::list</text>
 <text x="20979" y="5219" fill="#000000" font-family="Arial" font-size="10">- processReceiverRestart () void</text>
 <text x="20979" y="5235" fill="#000000" font-family="Arial" font-size="10">- processRtcpChecker () void</text>
 <text x="20979" y="5251" fill="#000000" font-family="Arial" font-size="10">- setupConferenceVideoPipeline (conference: Conference &amp; ) void</text>
 <text x="20979" y="5267" fill="#000000" font-family="Arial" font-size="10">- setupRtcpChecker () bool</text>
 <text x="20979" y="5283" fill="#000000" font-family="Arial" font-size="10">- setupVideoPipeline () void</text>
 <text x="20979" y="5299" fill="#000000" font-family="Arial" font-size="10">- startReceiver () void</text>
 <text x="20979" y="5315" fill="#000000" font-family="Arial" font-size="10">- startSender () void</text>
 <text x="20979" y="5331" fill="#000000" font-family="Arial" font-size="10">- storeVideoBitrateInfo () void</text>
 <polyline points="21179,4469 21161,4330 21143,4182 21123,4028 21103,3871 21083,3715 21064,3564 21046,3420 21029,3288 21014,3171 21002,3073" stroke="#CC0044" fill="none"/>
 <polygon points="20998,3073 21001,3063 21005,3073 20998,3073" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="126859,5013 126859,4797 127885,4797 127885,5013 126859,5013" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="126859,4821 127885,4821" stroke="#0000ff" fill="none"/>
 <polyline points="126859,4877 127885,4877" stroke="#0000ff" fill="none"/>
 <text x="127304" y="4811" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoScaler</text>
 <text x="126867" y="4835" fill="#000000" font-family="Arial" font-size="10">- ctx_: SwsContext *</text>
 <text x="126867" y="4851" fill="#000000" font-family="Arial" font-size="10">- mode_: int</text>
 <text x="126867" y="4867" fill="#000000" font-family="Arial" font-size="10">- tmp_data_: uint8_t *[4]</text>
 <text x="126867" y="4891" fill="#000000" font-family="Arial" font-size="10">+ VideoScaler () </text>
 <text x="126867" y="4907" fill="#000000" font-family="Arial" font-size="10">+ VideoScaler () </text>
 <text x="126867" y="4923" fill="#000000" font-family="Arial" font-size="10">+ operator= () VideoScaler &amp;</text>
 <text x="126867" y="4939" fill="#000000" font-family="Arial" font-size="10">+ reset () void</text>
 <text x="126867" y="4955" fill="#000000" font-family="Arial" font-size="10">+ scale (input: const VideoFrame &amp; , output: VideoFrame &amp; ) void</text>
 <text x="126867" y="4971" fill="#000000" font-family="Arial" font-size="10">+ scale_and_pad (input: const VideoFrame &amp; , output: VideoFrame &amp; , xoff: unsigned , yoff: unsigned , dest_width: unsigned , dest_height: unsigned , keep_aspect: bool ) void</text>
 <text x="126867" y="4987" fill="#000000" font-family="Arial" font-size="10">+ scale_with_aspect (input: const VideoFrame &amp; , output: VideoFrame &amp; ) void</text>
 <text x="126867" y="5003" fill="#000000" font-family="Arial" font-size="10">+ ~VideoScaler () </text>
 <polygon points="127904,4989 127904,4821 128187,4821 128187,4989 127904,4989" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="127904,4845 128187,4845" stroke="#0000ff" fill="none"/>
 <polyline points="127904,4869 128187,4869" stroke="#0000ff" fill="none"/>
 <text x="127972" y="4835" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoSettings</text>
 <text x="128043" y="4859" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="127912" y="4883" fill="#000000" font-family="Arial" font-size="10">+ VideoSettings () </text>
 <text x="127912" y="4899" fill="#000000" font-family="Arial" font-size="10">+ VideoSettings (settings: const std::map &amp; ) </text>
 <text x="127912" y="4915" fill="#000000" font-family="Arial" font-size="10">+ channel () std::string</text>
 <text x="127912" y="4931" fill="#000000" font-family="Arial" font-size="10">+ framerate () std::string</text>
 <text x="127912" y="4947" fill="#000000" font-family="Arial" font-size="10">+ name () std::string</text>
 <text x="127912" y="4963" fill="#000000" font-family="Arial" font-size="10">+ video_size () std::string</text>
 <text x="127912" y="4979" fill="#000000" font-family="Arial" font-size="10">+ to_map () std::map</text>
 <polygon points="128205,4941 128205,4869 128333,4869 128333,4941 128205,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="128205,4893 128333,4893" stroke="#0000ff" fill="none"/>
 <polyline points="128205,4917 128333,4917" stroke="#0000ff" fill="none"/>
 <text x="128213" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::VideoSignal</text>
 <text x="128267" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="128267" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="128352,4997 128352,4813 128713,4813 128713,4997 128352,4997" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="128352,4837 128713,4837" stroke="#0000ff" fill="none"/>
 <polyline points="128352,4893 128713,4893" stroke="#0000ff" fill="none"/>
 <text x="128446" y="4827" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoV4l2Channel</text>
 <text x="128360" y="4851" fill="#000000" font-family="Arial" font-size="10">+ idx: unsigned</text>
 <text x="128360" y="4867" fill="#000000" font-family="Arial" font-size="10">+ name: std::string</text>
 <text x="128360" y="4883" fill="#000000" font-family="Arial" font-size="10">- sizes_: std::vector</text>
 <text x="128360" y="4907" fill="#000000" font-family="Arial" font-size="10">+ VideoV4l2Channel (idx: unsigned , s: const char *) </text>
 <text x="128360" y="4923" fill="#000000" font-family="Arial" font-size="10">+ readFormats (fd: int ) void</text>
 <text x="128360" y="4939" fill="#000000" font-family="Arial" font-size="10">+ readSizes (fd: int , pixelformat: unsigned int ) unsigned int</text>
 <text x="128360" y="4955" fill="#000000" font-family="Arial" font-size="10">+ getSize (s: VideoSize ) const VideoV4l2Size &amp;</text>
 <text x="128360" y="4971" fill="#000000" font-family="Arial" font-size="10">+ getSizeList () std::vector</text>
 <text x="128360" y="4987" fill="#000000" font-family="Arial" font-size="10">- putCIFFirst () void</text>
 <polygon points="128731,4957 128731,4853 129292,4853 129292,4957 128731,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="128731,4877 129292,4877" stroke="#0000ff" fill="none"/>
 <polyline points="128731,4917 129292,4917" stroke="#0000ff" fill="none"/>
 <text x="128935" y="4867" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoV4l2Rate</text>
 <text x="128739" y="4891" fill="#000000" font-family="Arial" font-size="10">+ frame_rate: FrameRate</text>
 <text x="128739" y="4907" fill="#000000" font-family="Arial" font-size="10">+ pixel_format: unsigned</text>
 <text x="128739" y="4931" fill="#000000" font-family="Arial" font-size="10">+ VideoV4l2Rate (rate_numerator: unsigned , rate_denominator: unsigned , format: unsigned ) </text>
 <text x="128739" y="4947" fill="#000000" font-family="Arial" font-size="10">+ libAvPixelformat () string</text>
 <polygon points="129310,4989 129310,4821 129712,4821 129712,4989 129310,4989" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="129310,4845 129712,4845" stroke="#0000ff" fill="none"/>
 <polyline points="129310,4901 129712,4901" stroke="#0000ff" fill="none"/>
 <text x="129436" y="4835" fill="#000000" font-family="Arial" font-size="10">ring::video::VideoV4l2Size</text>
 <text x="129318" y="4859" fill="#000000" font-family="Arial" font-size="10">+ height: unsigned</text>
 <text x="129318" y="4875" fill="#000000" font-family="Arial" font-size="10">+ width: unsigned</text>
 <text x="129318" y="4891" fill="#000000" font-family="Arial" font-size="10">- rates_: std::vector</text>
 <text x="129318" y="4915" fill="#000000" font-family="Arial" font-size="10">+ VideoV4l2Size (width: const unsigned , height: const unsigned ) </text>
 <text x="129318" y="4931" fill="#000000" font-family="Arial" font-size="10">+ readFrameRates (fd: int , pixel_format: unsigned int ) void</text>
 <text x="129318" y="4947" fill="#000000" font-family="Arial" font-size="10">+ getRate (rate: FrameRate ) VideoV4l2Rate</text>
 <text x="129318" y="4963" fill="#000000" font-family="Arial" font-size="10">+ getRateList () vector</text>
 <text x="129318" y="4979" fill="#000000" font-family="Arial" font-size="10">- addRate (new_rate: VideoV4l2Rate ) void</text>
 <polygon points="129730,4941 129730,4869 130040,4869 130040,4941 129730,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="129730,4893 130040,4893" stroke="#0000ff" fill="none"/>
 <polyline points="129730,4917 130040,4917" stroke="#0000ff" fill="none"/>
 <text x="129786" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::CallSignal::VoiceMailNotify</text>
 <text x="129738" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;VoiceMailNotify&quot;</text>
 <text x="129883" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="14072,4941 14072,4869 14357,4869 14357,4941 14072,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="14072,4893 14357,4893" stroke="#0000ff" fill="none"/>
 <polyline points="14072,4917 14357,4917" stroke="#0000ff" fill="none"/>
 <text x="14146" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::VoipLinkException</text>
 <text x="14212" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="14080" y="4931" fill="#000000" font-family="Arial" font-size="10">+ VoipLinkException (str: const std::string &amp; ) </text>
 <polyline points="14219,4869 14227,4805 14236,4714 14244,4600 14248,4468 14246,4322 14236,4167 14214,4008 14180,3848 14130,3694 14062,3548 14002,3456 13932,3370 13853,3291 13769,3220 13683,3155 13597,3098 13516,3049 13441,3007 13376,2974 13324,2949" stroke="#CC0044" fill="none"/>
 <polygon points="13322,2952 13314,2944 13325,2945 13322,2952" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="826,1577 826,1233 1231,1233 1231,1577 826,1577" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="826,1257 1231,1257" stroke="#0000ff" fill="none"/>
 <polyline points="826,1361 1231,1361" stroke="#0000ff" fill="none"/>
 <text x="970" y="1247" fill="#000000" font-family="Arial" font-size="10">ring::VoipPreference</text>
 <text x="834" y="1271" fill="#000000" font-family="Arial" font-size="10">- CONFIG_LABEL: constexpr const char *const= &quot;voipPreferences&quot;</text>
 <text x="834" y="1287" fill="#000000" font-family="Arial" font-size="10">- playDtmf_: bool</text>
 <text x="834" y="1303" fill="#000000" font-family="Arial" font-size="10">- playTones_: bool</text>
 <text x="834" y="1319" fill="#000000" font-family="Arial" font-size="10">- pulseLength_: int</text>
 <text x="834" y="1335" fill="#000000" font-family="Arial" font-size="10">- symmetricRtp_: bool</text>
 <text x="834" y="1351" fill="#000000" font-family="Arial" font-size="10">- zidFile_: std::string</text>
 <text x="834" y="1375" fill="#000000" font-family="Arial" font-size="10">+ serialize (out: YAML::Emitter &amp; ) void Virtual</text>
 <text x="834" y="1391" fill="#000000" font-family="Arial" font-size="10">+ unserialize (in: const YAML::Node &amp; ) void Virtual</text>
 <text x="834" y="1407" fill="#000000" font-family="Arial" font-size="10">+ VoipPreference () </text>
 <text x="834" y="1423" fill="#000000" font-family="Arial" font-size="10">+ setPlayDtmf (dtmf: bool ) void</text>
 <text x="834" y="1439" fill="#000000" font-family="Arial" font-size="10">+ setPlayTones (tone: bool ) void</text>
 <text x="834" y="1455" fill="#000000" font-family="Arial" font-size="10">+ setPulseLength (length: int ) void</text>
 <text x="834" y="1471" fill="#000000" font-family="Arial" font-size="10">+ setSymmetricRtp (sym: bool ) void</text>
 <text x="834" y="1487" fill="#000000" font-family="Arial" font-size="10">+ setZidFile (file: const std::string &amp; ) void</text>
 <text x="834" y="1503" fill="#000000" font-family="Arial" font-size="10">+ getPlayDtmf () bool</text>
 <text x="834" y="1519" fill="#000000" font-family="Arial" font-size="10">+ getPlayTones () bool</text>
 <text x="834" y="1535" fill="#000000" font-family="Arial" font-size="10">+ getPulseLength () int</text>
 <text x="834" y="1551" fill="#000000" font-family="Arial" font-size="10">+ getSymmetricRtp () bool</text>
 <text x="834" y="1567" fill="#000000" font-family="Arial" font-size="10">+ getZidFile () std::string</text>
 <polyline points="1042,1233 1049,1174 1059,1108 1070,1038 1084,965 1102,889 1122,812 1145,734 1173,658 1204,583 1239,512 1248,497 1258,482 1268,467 1279,453 1291,439 1303,426 1315,413 1327,400 1338,389 1350,378" stroke="#CC0044" fill="none"/>
 <polygon points="1348,375 1358,371 1353,380 1348,375" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="130058,4941 130058,4869 130412,4869 130412,4941 130058,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="130058,4893 130412,4893" stroke="#0000ff" fill="none"/>
 <polyline points="130058,4917 130412,4917" stroke="#0000ff" fill="none"/>
 <text x="130088" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::VolatileDetailsChanged</text>
 <text x="130066" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;VolatileDetailsChanged&quot;</text>
 <text x="130233" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="130431,4941 130431,4869 130746,4869 130746,4941 130431,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="130431,4893 130746,4893" stroke="#0000ff" fill="none"/>
 <polyline points="130431,4917 130746,4917" stroke="#0000ff" fill="none"/>
 <text x="130460" y="4883" fill="#000000" font-family="Arial" font-size="10">DRing::ConfigurationSignal::VolumeChanged</text>
 <text x="130439" y="4907" fill="#000000" font-family="Arial" font-size="10">+ name: constexpr const char *= &quot;VolumeChanged&quot;</text>
 <text x="130586" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="130764,4949 130764,4861 130869,4861 130869,4949 130764,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="130764,4885 130869,4885" stroke="#0000ff" fill="none"/>
 <polyline points="130764,4925 130869,4925" stroke="#0000ff" fill="none"/>
 <text x="130772" y="4875" fill="#000000" font-family="Arial" font-size="10">dev::WhenError</text>
 <text x="130772" y="4899" fill="#000000" font-family="Arial" font-size="10">- DontThrow</text>
 <text x="130772" y="4915" fill="#000000" font-family="Arial" font-size="10">- Throw= 1</text>
 <text x="130814" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="130887,4965 130887,4845 131004,4845 131004,4965 130887,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="130887,4869 131004,4869" stroke="#0000ff" fill="none"/>
 <polyline points="130887,4941 131004,4941" stroke="#0000ff" fill="none"/>
 <text x="130895" y="4859" fill="#000000" font-family="Arial" font-size="10">dev::WithExisting</text>
 <text x="130895" y="4883" fill="#000000" font-family="Arial" font-size="10">- Kill</text>
 <text x="130895" y="4899" fill="#000000" font-family="Arial" font-size="10">- Rescue</text>
 <text x="130895" y="4915" fill="#000000" font-family="Arial" font-size="10">- Trust</text>
 <text x="130895" y="4931" fill="#000000" font-family="Arial" font-size="10">- Verify</text>
 <text x="130943" y="4955" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="131022,4941 131022,4869 131261,4869 131261,4941 131022,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="131022,4893 131261,4893" stroke="#0000ff" fill="none"/>
 <polyline points="131022,4917 131261,4917" stroke="#0000ff" fill="none"/>
 <text x="131084" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::video::uwp_fmt</text>
 <text x="131030" y="4907" fill="#000000" font-family="Arial" font-size="10">+ ring_format: enum VideoPixelFormat</text>
 <text x="131139" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="131279,5013 131279,4797 131431,4797 131431,5013 131279,5013" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="131279,4821 131431,4821" stroke="#0000ff" fill="none"/>
 <polyline points="131279,4989 131431,4989" stroke="#0000ff" fill="none"/>
 <text x="131300" y="4811" fill="#000000" font-family="Arial" font-size="10">ring::rtcpRRHeader</text>
 <text x="131287" y="4835" fill="#000000" font-family="Arial" font-size="10">+ fraction_lost: uint32_t</text>
 <text x="131287" y="4851" fill="#000000" font-family="Arial" font-size="10">+ jitter: uint32_t</text>
 <text x="131287" y="4867" fill="#000000" font-family="Arial" font-size="10">+ last_seq: uint32_t</text>
 <text x="131287" y="4883" fill="#000000" font-family="Arial" font-size="10">+ len: uint32_t</text>
 <text x="131287" y="4899" fill="#000000" font-family="Arial" font-size="10">+ p: uint32_t</text>
 <text x="131287" y="4915" fill="#000000" font-family="Arial" font-size="10">+ pt: uint32_t</text>
 <text x="131287" y="4931" fill="#000000" font-family="Arial" font-size="10">+ rc: uint32_t</text>
 <text x="131287" y="4947" fill="#000000" font-family="Arial" font-size="10">+ ssrc: uint32_t</text>
 <text x="131287" y="4963" fill="#000000" font-family="Arial" font-size="10">+ ssrc_1: uint32_t</text>
 <text x="131287" y="4979" fill="#000000" font-family="Arial" font-size="10">+ version: uint32_t</text>
 <text x="131353" y="5003" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="131450,4965 131450,4845 131639,4845 131639,4965 131450,4965" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="131450,4869 131639,4869" stroke="#0000ff" fill="none"/>
 <polyline points="131450,4941 131639,4941" stroke="#0000ff" fill="none"/>
 <text x="131458" y="4859" fill="#000000" font-family="Arial" font-size="10">ring::SIPAccount::auto_rereg_</text>
 <text x="131458" y="4883" fill="#000000" font-family="Arial" font-size="10">+ active: pj_bool_t</text>
 <text x="131458" y="4899" fill="#000000" font-family="Arial" font-size="10">+ attempt_cnt: unsigned</text>
 <text x="131458" y="4915" fill="#000000" font-family="Arial" font-size="10">+ reg_tp: void *</text>
 <text x="131458" y="4931" fill="#000000" font-family="Arial" font-size="10">+ timer: pj_timer_entry</text>
 <text x="131542" y="4955" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="131657,4973 131657,4837 131845,4837 131845,4973 131657,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="131657,4861 131845,4861" stroke="#0000ff" fill="none"/>
 <polyline points="131657,4949 131845,4949" stroke="#0000ff" fill="none"/>
 <text x="131731" y="4851" fill="#000000" font-family="Arial" font-size="10">_WDIR</text>
 <text x="131665" y="4875" fill="#000000" font-family="Arial" font-size="10">+ cached: int</text>
 <text x="131665" y="4891" fill="#000000" font-family="Arial" font-size="10">+ data: WIN32_FIND_DATAW</text>
 <text x="131665" y="4907" fill="#000000" font-family="Arial" font-size="10">+ ent: struct _wdirent</text>
 <text x="131665" y="4923" fill="#000000" font-family="Arial" font-size="10">+ handle: HANDLE</text>
 <text x="131665" y="4939" fill="#000000" font-family="Arial" font-size="10">+ patt: wchar_t *</text>
 <text x="131749" y="4963" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="131864,4973 131864,4837 132069,4837 132069,4973 131864,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="131864,4861 132069,4861" stroke="#0000ff" fill="none"/>
 <polyline points="131864,4949 132069,4949" stroke="#0000ff" fill="none"/>
 <text x="131942" y="4851" fill="#000000" font-family="Arial" font-size="10">_wdirent</text>
 <text x="131872" y="4875" fill="#000000" font-family="Arial" font-size="10">+ d_ino: long</text>
 <text x="131872" y="4891" fill="#000000" font-family="Arial" font-size="10">+ d_name: wchar_t [MAX_PATH]</text>
 <text x="131872" y="4907" fill="#000000" font-family="Arial" font-size="10">+ d_namlen: size_t</text>
 <text x="131872" y="4923" fill="#000000" font-family="Arial" font-size="10">+ d_reclen: unsigned short</text>
 <text x="131872" y="4939" fill="#000000" font-family="Arial" font-size="10">+ d_type: int</text>
 <text x="131964" y="4963" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="132087,4949 132087,4861 132326,4861 132326,4949 132087,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="132087,4885 132326,4885" stroke="#0000ff" fill="none"/>
 <polyline points="132087,4925 132326,4925" stroke="#0000ff" fill="none"/>
 <text x="132140" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::video::android_fmt</text>
 <text x="132095" y="4899" fill="#000000" font-family="Arial" font-size="10">+ code: int</text>
 <text x="132095" y="4915" fill="#000000" font-family="Arial" font-size="10">+ ring_format: enum VideoPixelFormat</text>
 <text x="132204" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="132344,4949 132344,4861 132771,4861 132771,4949 132344,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="132344,4885 132771,4885" stroke="#0000ff" fill="none"/>
 <polyline points="132344,4909 132771,4909" stroke="#0000ff" fill="none"/>
 <text x="132515" y="4875" fill="#000000" font-family="Arial" font-size="10">YAML::convert</text>
 <text x="132555" y="4899" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="132352" y="4923" fill="#000000" font-family="Arial" font-size="10">+ decode (node: const Node &amp; , rhs: ring::video::VideoSettings &amp; ) bool</text>
 <text x="132352" y="4939" fill="#000000" font-family="Arial" font-size="10">+ encode (rhs: const ring::video::VideoSettings &amp; ) Node</text>
 <polygon points="132789,4949 132789,4861 132924,4861 132924,4949 132789,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="132789,4885 132924,4885" stroke="#0000ff" fill="none"/>
 <polyline points="132789,4925 132924,4925" stroke="#0000ff" fill="none"/>
 <text x="132847" y="4875" fill="#000000" font-family="Arial" font-size="10">ctx</text>
 <text x="132797" y="4899" fill="#000000" font-family="Arial" font-size="10">+ acc: std::weak_ptr</text>
 <text x="132797" y="4915" fill="#000000" font-family="Arial" font-size="10">+ id: uint64_t</text>
 <text x="132854" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="132942,4973 132942,4837 133127,4837 133127,4973 132942,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="132942,4861 133127,4861" stroke="#0000ff" fill="none"/>
 <polyline points="132942,4949 133127,4949" stroke="#0000ff" fill="none"/>
 <text x="133018" y="4851" fill="#000000" font-family="Arial" font-size="10">dirent</text>
 <text x="132950" y="4875" fill="#000000" font-family="Arial" font-size="10">+ d_ino: long</text>
 <text x="132950" y="4891" fill="#000000" font-family="Arial" font-size="10">+ d_name: char [MAX_PATH]</text>
 <text x="132950" y="4907" fill="#000000" font-family="Arial" font-size="10">+ d_namlen: size_t</text>
 <text x="132950" y="4923" fill="#000000" font-family="Arial" font-size="10">+ d_reclen: unsigned short</text>
 <text x="132950" y="4939" fill="#000000" font-family="Arial" font-size="10">+ d_type: int</text>
 <text x="133032" y="4963" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="133145,4957 133145,4853 133350,4853 133350,4957 133145,4957" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="133145,4877 133350,4877" stroke="#0000ff" fill="none"/>
 <polyline points="133145,4933 133350,4933" stroke="#0000ff" fill="none"/>
 <text x="133209" y="4867" fill="#000000" font-family="Arial" font-size="10">global_object</text>
 <text x="133153" y="4891" fill="#000000" font-family="Arial" font-size="10">+ hModule: HMODULE</text>
 <text x="133153" y="4907" fill="#000000" font-family="Arial" font-size="10">+ next: struct global_object *</text>
 <text x="133153" y="4923" fill="#000000" font-family="Arial" font-size="10">+ previous: struct global_object *</text>
 <text x="133245" y="4947" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="133368,4949 133368,4861 133661,4861 133661,4949 133368,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="133368,4885 133661,4885" stroke="#0000ff" fill="none"/>
 <polyline points="133368,4909 133661,4909" stroke="#0000ff" fill="none"/>
 <text x="133452" y="4875" fill="#000000" font-family="Arial" font-size="10">dev::FixedHash::hash</text>
 <text x="133512" y="4899" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="133376" y="4923" fill="#000000" font-family="Arial" font-size="10">+ operator() (_value: FixedHash const &amp; ) size_t</text>
 <text x="133376" y="4939" fill="#000000" font-family="Arial" font-size="10">+ operator() (value: FixedHash const &amp; ) size_t</text>
 <polygon points="133679,4941 133679,4869 133749,4869 133749,4941 133679,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="133679,4893 133749,4893" stroke="#0000ff" fill="none"/>
 <polyline points="133679,4917 133749,4917" stroke="#0000ff" fill="none"/>
 <text x="133687" y="4883" fill="#000000" font-family="Arial" font-size="10">std::hash</text>
 <text x="133712" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="133712" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="133863,2959 133863,2887 133917,2887 133917,2959 133863,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="133863,2911 133917,2911" stroke="#0000ff" fill="none"/>
 <polyline points="133863,2935 133917,2935" stroke="#0000ff" fill="none"/>
 <text x="133876" y="2901" fill="#000000" font-family="Arial" font-size="10">hash</text>
 <text x="133888" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="133888" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="133713,4869 133711,4808 133710,4722 133709,4614 133709,4487 133710,4346 133714,4194 133720,4034 133729,3871 133741,3708 133758,3548 133767,3481 133778,3413 133791,3345 133804,3279 133818,3214 133831,3154 133845,3097 133857,3047 133869,3004 133878,2969" stroke="#CC0044" fill="none"/>
 <polygon points="133874,2968 133880,2959 133881,2970 133874,2968" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="133767,4941 133767,4869 133837,4869 133837,4941 133767,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="133767,4893 133837,4893" stroke="#0000ff" fill="none"/>
 <polyline points="133767,4917 133837,4917" stroke="#0000ff" fill="none"/>
 <text x="133775" y="4883" fill="#000000" font-family="Arial" font-size="10">std::hash</text>
 <text x="133800" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="133800" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="133803,4869 133804,4809 133806,4722 133809,4615 133812,4488 133816,4347 133820,4195 133825,4036 133831,3872 133838,3708 133846,3548 133850,3482 133854,3414 133858,3347 133863,3280 133867,3216 133872,3155 133876,3098 133880,3048 133883,3004 133886,2969" stroke="#CC0044" fill="none"/>
 <polygon points="133883,2969 133887,2959 133890,2969 133883,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="133855,4941 133855,4869 133925,4869 133925,4941 133855,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="133855,4893 133925,4893" stroke="#0000ff" fill="none"/>
 <polyline points="133855,4917 133925,4917" stroke="#0000ff" fill="none"/>
 <text x="133863" y="4883" fill="#000000" font-family="Arial" font-size="10">std::hash</text>
 <text x="133888" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="133888" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="133890,4869 133890,4765 133890,4605 133890,4404 133890,4175 133890,3931 133890,3686 133890,3454 133890,3248 133890,3082 133890,2969" stroke="#CC0044" fill="none"/>
 <polygon points="133887,2969 133890,2959 133894,2969 133887,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="133943,4941 133943,4869 134013,4869 134013,4941 133943,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="133943,4893 134013,4893" stroke="#0000ff" fill="none"/>
 <polyline points="133943,4917 134013,4917" stroke="#0000ff" fill="none"/>
 <text x="133951" y="4883" fill="#000000" font-family="Arial" font-size="10">std::hash</text>
 <text x="133976" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="133976" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="133977,4869 133976,4809 133974,4722 133971,4615 133968,4488 133965,4347 133960,4195 133955,4036 133949,3872 133942,3708 133934,3548 133930,3482 133926,3414 133922,3347 133917,3280 133913,3216 133908,3155 133904,3098 133900,3048 133897,3004 133894,2969" stroke="#CC0044" fill="none"/>
 <polygon points="133890,2969 133893,2959 133897,2969 133890,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="134031,4941 134031,4869 134101,4869 134101,4941 134031,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="134031,4893 134101,4893" stroke="#0000ff" fill="none"/>
 <polyline points="134031,4917 134101,4917" stroke="#0000ff" fill="none"/>
 <text x="134039" y="4883" fill="#000000" font-family="Arial" font-size="10">std::hash</text>
 <text x="134064" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="134064" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="134067,4869 134069,4808 134070,4722 134071,4614 134071,4487 134070,4346 134066,4194 134060,4034 134051,3871 134039,3708 134022,3548 134013,3481 134002,3413 133989,3345 133976,3279 133962,3214 133949,3154 133935,3097 133923,3047 133911,3004 133902,2969" stroke="#CC0044" fill="none"/>
 <polygon points="133899,2970 133900,2959 133906,2968 133899,2970" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="134119,4941 134119,4869 134383,4869 134383,4941 134119,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="134119,4893 134383,4893" stroke="#0000ff" fill="none"/>
 <polyline points="134119,4917 134383,4917" stroke="#0000ff" fill="none"/>
 <text x="134224" y="4883" fill="#000000" font-family="Arial" font-size="10">std::hash</text>
 <text x="134249" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="134127" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator() (_a: dev::u256 const &amp; ) size_t</text>
 <polygon points="134401,5005 134401,4805 134711,4805 134711,5005 134401,5005" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="134401,4829 134711,4829" stroke="#0000ff" fill="none"/>
 <polyline points="134401,4885 134711,4885" stroke="#0000ff" fill="none"/>
 <text x="134463" y="4819" fill="#000000" font-family="Arial" font-size="10">picosha2::hash256_one_by_one</text>
 <text x="134409" y="4843" fill="#000000" font-family="Arial" font-size="10">- buffer_: std::vector</text>
 <text x="134409" y="4859" fill="#000000" font-family="Arial" font-size="10">- data_length_digits_: uint32_t [4]</text>
 <text x="134409" y="4875" fill="#000000" font-family="Arial" font-size="10">- h_: uint32_t [8]</text>
 <text x="134409" y="4899" fill="#000000" font-family="Arial" font-size="10">+ process (first: RaIter , last: RaIter ) void</text>
 <text x="134409" y="4915" fill="#000000" font-family="Arial" font-size="10">+ finish () void</text>
 <text x="134409" y="4931" fill="#000000" font-family="Arial" font-size="10">+ hash256_one_by_one () </text>
 <text x="134409" y="4947" fill="#000000" font-family="Arial" font-size="10">+ init () void</text>
 <text x="134409" y="4963" fill="#000000" font-family="Arial" font-size="10">+ get_hash_bytes (first: OutIter , last: OutIter ) void</text>
 <text x="134409" y="4979" fill="#000000" font-family="Arial" font-size="10">- add_to_data_length (n: uint32_t ) void</text>
 <text x="134409" y="4995" fill="#000000" font-family="Arial" font-size="10">- write_data_bit_length (begin: uint8_t *) void</text>
 <polygon points="134730,4941 134730,4869 134973,4869 134973,4941 134730,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="134730,4893 134973,4893" stroke="#0000ff" fill="none"/>
 <polyline points="134730,4917 134973,4917" stroke="#0000ff" fill="none"/>
 <text x="134815" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::intTraits</text>
 <text x="134738" y="4907" fill="#000000" font-family="Arial" font-size="10">+ maxSize: const unsigned= sizeof(_T)</text>
 <text x="134849" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="134991,4941 134991,4869 135234,4869 135234,4941 134991,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="134991,4893 135234,4893" stroke="#0000ff" fill="none"/>
 <polyline points="134991,4917 135234,4917" stroke="#0000ff" fill="none"/>
 <text x="135076" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::intTraits</text>
 <text x="134999" y="4907" fill="#000000" font-family="Arial" font-size="10">+ maxSize: const unsigned= sizeof(_T)</text>
 <text x="135110" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="135252,4941 135252,4869 135495,4869 135495,4941 135252,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="135252,4893 135495,4893" stroke="#0000ff" fill="none"/>
 <polyline points="135252,4917 135495,4917" stroke="#0000ff" fill="none"/>
 <text x="135337" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::intTraits</text>
 <text x="135260" y="4907" fill="#000000" font-family="Arial" font-size="10">+ maxSize: const unsigned= sizeof(_T)</text>
 <text x="135371" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="135513,4941 135513,4869 135756,4869 135756,4941 135513,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="135513,4893 135756,4893" stroke="#0000ff" fill="none"/>
 <polyline points="135513,4917 135756,4917" stroke="#0000ff" fill="none"/>
 <text x="135598" y="4883" fill="#000000" font-family="Arial" font-size="10">dev::intTraits</text>
 <text x="135521" y="4907" fill="#000000" font-family="Arial" font-size="10">+ maxSize: const unsigned= sizeof(_T)</text>
 <text x="135632" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="135774,4941 135774,4869 135880,4869 135880,4941 135774,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="135774,4893 135880,4893" stroke="#0000ff" fill="none"/>
 <polyline points="135774,4917 135880,4917" stroke="#0000ff" fill="none"/>
 <text x="135782" y="4883" fill="#000000" font-family="Arial" font-size="10">io_readcallback</text>
 <text x="135825" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="135825" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="135899,4941 135899,4869 136008,4869 136008,4941 135899,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="135899,4893 136008,4893" stroke="#0000ff" fill="none"/>
 <polyline points="135899,4917 136008,4917" stroke="#0000ff" fill="none"/>
 <text x="135907" y="4883" fill="#000000" font-family="Arial" font-size="10">io_seekcallback</text>
 <text x="135951" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="135951" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="136026,4941 136026,4869 136134,4869 136134,4941 136026,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="136026,4893 136134,4893" stroke="#0000ff" fill="none"/>
 <polyline points="136026,4917 136134,4917" stroke="#0000ff" fill="none"/>
 <text x="136034" y="4883" fill="#000000" font-family="Arial" font-size="10">io_writecallback</text>
 <text x="136078" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="136078" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="136153,4941 136153,4869 136430,4869 136430,4941 136153,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="136153,4893 136430,4893" stroke="#0000ff" fill="none"/>
 <polyline points="136153,4917 136430,4917" stroke="#0000ff" fill="none"/>
 <text x="136161" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::is_first_backend</text>
 <text x="136289" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="136289" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="135967,2959 135967,2887 136615,2887 136615,2959 135967,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="135967,2911 136615,2911" stroke="#0000ff" fill="none"/>
 <polyline points="135967,2935 136615,2935" stroke="#0000ff" fill="none"/>
 <text x="136147" y="2901" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::is_first_backend_imp</text>
 <text x="135975" y="2925" fill="#000000" font-family="Arial" font-size="10">+ value: const bool= is_convertible&lt;U, number&lt;T, et_on&gt;&gt;::value||is_convertible&lt;U, number&lt;T, et_off&gt;&gt;::value</text>
 <text x="136289" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="136291,4869 136291,4765 136291,4605 136291,4404 136291,4175 136291,3931 136291,3686 136291,3454 136291,3248 136291,3082 136291,2969" stroke="#CC0044" fill="none"/>
 <polygon points="136288,2969 136291,2959 136295,2969 136288,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="136448,4941 136448,4869 137096,4869 137096,4941 136448,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="136448,4893 137096,4893" stroke="#0000ff" fill="none"/>
 <polyline points="136448,4917 137096,4917" stroke="#0000ff" fill="none"/>
 <text x="136628" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::is_first_backend_imp</text>
 <text x="136456" y="4907" fill="#000000" font-family="Arial" font-size="10">+ value: const bool= is_convertible&lt;U, number&lt;T, et_on&gt;&gt;::value||is_convertible&lt;U, number&lt;T, et_off&gt;&gt;::value</text>
 <text x="136770" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="137114,4941 137114,4869 137412,4869 137412,4941 137114,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="137114,4893 137412,4893" stroke="#0000ff" fill="none"/>
 <polyline points="137114,4917 137412,4917" stroke="#0000ff" fill="none"/>
 <text x="137122" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::is_second_backend</text>
 <text x="137261" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="137261" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="136959,2959 136959,2887 137567,2887 137567,2959 136959,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="136959,2911 137567,2911" stroke="#0000ff" fill="none"/>
 <polyline points="136959,2935 137567,2935" stroke="#0000ff" fill="none"/>
 <text x="137108" y="2901" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::is_second_backend_imp</text>
 <text x="136967" y="2925" fill="#000000" font-family="Arial" font-size="10">+ value: const bool= is_convertible&lt;T, number&lt;U&gt;&gt;::value||is_convertible&lt;T, number&lt;U, et_off&gt;&gt;::value</text>
 <text x="137261" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="137263,4869 137263,4765 137263,4605 137263,4404 137263,4175 137263,3931 137263,3686 137263,3454 137263,3248 137263,3082 137263,2969" stroke="#CC0044" fill="none"/>
 <polygon points="137260,2969 137263,2959 137267,2969 137260,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="137430,4941 137430,4869 138038,4869 138038,4941 137430,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="137430,4893 138038,4893" stroke="#0000ff" fill="none"/>
 <polyline points="137430,4917 138038,4917" stroke="#0000ff" fill="none"/>
 <text x="137579" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::is_second_backend_imp</text>
 <text x="137438" y="4907" fill="#000000" font-family="Arial" font-size="10">+ value: const bool= is_convertible&lt;T, number&lt;U&gt;&gt;::value||is_convertible&lt;T, number&lt;U, et_off&gt;&gt;::value</text>
 <text x="137732" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="138056,4941 138056,4869 138380,4869 138380,4941 138056,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="138056,4893 138380,4893" stroke="#0000ff" fill="none"/>
 <polyline points="138056,4917 138380,4917" stroke="#0000ff" fill="none"/>
 <text x="138064" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::is_valid_mixed_compare</text>
 <text x="138216" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="138216" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="138362,2959 138362,2887 138416,2887 138416,2959 138362,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="138362,2911 138416,2911" stroke="#0000ff" fill="none"/>
 <polyline points="138362,2935 138416,2935" stroke="#0000ff" fill="none"/>
 <text x="138372" y="2901" fill="#000000" font-family="Arial" font-size="10">false_</text>
 <text x="138387" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="138387" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="138221,4869 138230,4765 138244,4605 138261,4404 138281,4175 138302,3931 138323,3686 138343,3454 138361,3248 138375,3082 138385,2969" stroke="#CC0044" fill="none"/>
 <polygon points="138382,2969 138386,2959 138389,2970 138382,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="138740,4941 138740,4869 139064,4869 139064,4941 138740,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="138740,4893 139064,4893" stroke="#0000ff" fill="none"/>
 <polyline points="138740,4917 139064,4917" stroke="#0000ff" fill="none"/>
 <text x="138748" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::is_valid_mixed_compare</text>
 <text x="138900" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="138900" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="138855,2959 138855,2887 138949,2887 138949,2959 138855,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="138855,2911 138949,2911" stroke="#0000ff" fill="none"/>
 <polyline points="138855,2935 138949,2935" stroke="#0000ff" fill="none"/>
 <text x="138863" y="2901" fill="#000000" font-family="Arial" font-size="10">is_convertible</text>
 <text x="138863" y="2925" fill="#000000" font-family="Arial" font-size="10">+ value</text>
 <text x="138900" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="138902,4869 138902,4765 138902,4605 138902,4404 138902,4175 138902,3931 138902,3686 138902,3454 138902,3248 138902,3082 138902,2969" stroke="#CC0044" fill="none"/>
 <polygon points="138899,2969 138902,2959 138906,2969 138899,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="138398,4941 138398,4869 138722,4869 138722,4941 138398,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="138398,4893 138722,4893" stroke="#0000ff" fill="none"/>
 <polyline points="138398,4917 138722,4917" stroke="#0000ff" fill="none"/>
 <text x="138406" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::is_valid_mixed_compare</text>
 <text x="138558" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="138558" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="138557,4869 138548,4765 138534,4605 138517,4404 138497,4175 138476,3931 138455,3686 138435,3454 138417,3248 138403,3082 138393,2969" stroke="#CC0044" fill="none"/>
 <polygon points="138389,2970 138392,2959 138396,2969 138389,2970" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="139082,4941 139082,4869 139406,4869 139406,4941 139082,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="139082,4893 139406,4893" stroke="#0000ff" fill="none"/>
 <polyline points="139082,4917 139406,4917" stroke="#0000ff" fill="none"/>
 <text x="139090" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::is_valid_mixed_compare</text>
 <text x="139242" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="139242" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="139388,2959 139388,2887 139442,2887 139442,2959 139388,2959" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="139388,2911 139442,2911" stroke="#0000ff" fill="none"/>
 <polyline points="139388,2935 139442,2935" stroke="#0000ff" fill="none"/>
 <text x="139400" y="2901" fill="#000000" font-family="Arial" font-size="10">bool_</text>
 <text x="139413" y="2925" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="139413" y="2949" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="139247,4869 139256,4765 139270,4605 139287,4404 139307,4175 139328,3931 139349,3686 139369,3454 139387,3248 139401,3082 139411,2969" stroke="#CC0044" fill="none"/>
 <polygon points="139408,2969 139412,2959 139415,2970 139408,2969" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="139424,4941 139424,4869 139748,4869 139748,4941 139424,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="139424,4893 139748,4893" stroke="#0000ff" fill="none"/>
 <polyline points="139424,4917 139748,4917" stroke="#0000ff" fill="none"/>
 <text x="139432" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::is_valid_mixed_compare</text>
 <text x="139584" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="139584" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polyline points="139583,4869 139574,4765 139560,4605 139543,4404 139523,4175 139502,3931 139481,3686 139461,3454 139443,3248 139429,3082 139419,2969" stroke="#CC0044" fill="none"/>
 <polygon points="139415,2970 139418,2959 139422,2969 139415,2970" stroke="#CC0044" fill="#CC0044"/>
 <polygon points="139767,4997 139767,4813 140058,4813 140058,4997 139767,4997" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="139767,4837 140058,4837" stroke="#0000ff" fill="none"/>
 <polyline points="139767,4877 140058,4877" stroke="#0000ff" fill="none"/>
 <text x="139862" y="4827" fill="#000000" font-family="Arial" font-size="10">dev::RLP::iterator</text>
 <text x="139775" y="4851" fill="#000000" font-family="Arial" font-size="10">- m_currentItem: bytesConstRef</text>
 <text x="139775" y="4867" fill="#000000" font-family="Arial" font-size="10">- m_remaining: size_t</text>
 <text x="139775" y="4891" fill="#000000" font-family="Arial" font-size="10">+ operator++ () iterator &amp;</text>
 <text x="139775" y="4907" fill="#000000" font-family="Arial" font-size="10">+ operator++ (int) iterator</text>
 <text x="139775" y="4923" fill="#000000" font-family="Arial" font-size="10">+ operator!= (_cmp: iterator const &amp; ) bool</text>
 <text x="139775" y="4939" fill="#000000" font-family="Arial" font-size="10">+ operator* () RLP</text>
 <text x="139775" y="4955" fill="#000000" font-family="Arial" font-size="10">+ operator== (_cmp: iterator const &amp; ) bool</text>
 <text x="139775" y="4971" fill="#000000" font-family="Arial" font-size="10">- iterator () </text>
 <text x="139775" y="4987" fill="#000000" font-family="Arial" font-size="10">- iterator (_parent: RLP const &amp; , _begin: bool ) </text>
 <polygon points="140076,4941 140076,4869 140135,4869 140135,4941 140076,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="140076,4893 140135,4893" stroke="#0000ff" fill="none"/>
 <polyline points="140076,4917 140135,4917" stroke="#0000ff" fill="none"/>
 <text x="140084" y="4883" fill="#000000" font-family="Arial" font-size="10">mode_t</text>
 <text x="140103" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="140103" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="140153,4941 140153,4869 140467,4869 140467,4941 140153,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="140153,4893 140467,4893" stroke="#0000ff" fill="none"/>
 <polyline points="140153,4917 140467,4917" stroke="#0000ff" fill="none"/>
 <text x="140161" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::number_from_backend</text>
 <text x="140308" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="140308" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="140485,4941 140485,4869 140753,4869 140753,4941 140485,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="140485,4893 140753,4893" stroke="#0000ff" fill="none"/>
 <polyline points="140485,4917 140753,4917" stroke="#0000ff" fill="none"/>
 <text x="140493" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::other_backend</text>
 <text x="140617" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="140617" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="140772,4973 140772,4837 141007,4837 141007,4973 140772,4973" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="140772,4861 141007,4861" stroke="#0000ff" fill="none"/>
 <polyline points="140772,4949 141007,4949" stroke="#0000ff" fill="none"/>
 <text x="140830" y="4851" fill="#000000" font-family="Arial" font-size="10">ring::pres_msg_data</text>
 <text x="140780" y="4875" fill="#000000" font-family="Arial" font-size="10">+ content_type: pj_str_t</text>
 <text x="140780" y="4891" fill="#000000" font-family="Arial" font-size="10">+ hdr_list: pjsip_hdr</text>
 <text x="140780" y="4907" fill="#000000" font-family="Arial" font-size="10">+ msg_body: pj_str_t</text>
 <text x="140780" y="4923" fill="#000000" font-family="Arial" font-size="10">+ multipart_ctype: pjsip_media_type</text>
 <text x="140780" y="4939" fill="#000000" font-family="Arial" font-size="10">+ multipart_parts: pjsip_multipart_part</text>
 <text x="140887" y="4963" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="141025,5181 141025,4629 141294,4629 141294,5181 141025,5181" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="141025,4653 141294,4653" stroke="#0000ff" fill="none"/>
 <polyline points="141025,4677 141294,4677" stroke="#0000ff" fill="none"/>
 <text x="141124" y="4643" fill="#000000" font-family="Arial" font-size="10">ring::rational</text>
 <text x="141157" y="4667" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="141033" y="4691" fill="#000000" font-family="Arial" font-size="10">+ assign (n: I , d: I ) rational &amp;</text>
 <text x="141033" y="4707" fill="#000000" font-family="Arial" font-size="10">+ operator* (r: const rational &amp; ) rational</text>
 <text x="141033" y="4723" fill="#000000" font-family="Arial" font-size="10">+ operator*= (r: const rational &amp; ) rational &amp;</text>
 <text x="141033" y="4739" fill="#000000" font-family="Arial" font-size="10">+ operator*= (i: I ) rational &amp;</text>
 <text x="141033" y="4755" fill="#000000" font-family="Arial" font-size="10">+ operator+ (r: const rational &amp; ) rational</text>
 <text x="141033" y="4771" fill="#000000" font-family="Arial" font-size="10">+ operator++ () const rational &amp;</text>
 <text x="141033" y="4787" fill="#000000" font-family="Arial" font-size="10">+ operator+= (r: const rational &amp; ) rational &amp;</text>
 <text x="141033" y="4803" fill="#000000" font-family="Arial" font-size="10">+ operator+= (i: I ) rational &amp;</text>
 <text x="141033" y="4819" fill="#000000" font-family="Arial" font-size="10">+ operator- (r: const rational &amp; ) rational</text>
 <text x="141033" y="4835" fill="#000000" font-family="Arial" font-size="10">+ operator-- () const rational &amp;</text>
 <text x="141033" y="4851" fill="#000000" font-family="Arial" font-size="10">+ operator-= (r: const rational &amp; ) rational &amp;</text>
 <text x="141033" y="4867" fill="#000000" font-family="Arial" font-size="10">+ operator-= (i: I ) rational &amp;</text>
 <text x="141033" y="4883" fill="#000000" font-family="Arial" font-size="10">+ operator/ (r: const rational &amp; ) rational</text>
 <text x="141033" y="4899" fill="#000000" font-family="Arial" font-size="10">+ operator/= (r: const rational &amp; ) rational &amp;</text>
 <text x="141033" y="4915" fill="#000000" font-family="Arial" font-size="10">+ operator/= (i: I ) rational &amp;</text>
 <text x="141033" y="4931" fill="#000000" font-family="Arial" font-size="10">+ operator= (n: I ) rational &amp;</text>
 <text x="141033" y="4947" fill="#000000" font-family="Arial" font-size="10">+ rational () </text>
 <text x="141033" y="4963" fill="#000000" font-family="Arial" font-size="10">+ rational (n: I ) </text>
 <text x="141033" y="4979" fill="#000000" font-family="Arial" font-size="10">+ rational (n: I , d: I ) </text>
 <text x="141033" y="4995" fill="#000000" font-family="Arial" font-size="10">+ real () R</text>
 <text x="141033" y="5011" fill="#000000" font-family="Arial" font-size="10">+ denominator () I</text>
 <text x="141033" y="5027" fill="#000000" font-family="Arial" font-size="10">+ numerator () I</text>
 <text x="141033" y="5043" fill="#000000" font-family="Arial" font-size="10">+ operator bool () </text>
 <text x="141033" y="5059" fill="#000000" font-family="Arial" font-size="10">+ operator! () bool</text>
 <text x="141033" y="5075" fill="#000000" font-family="Arial" font-size="10">+ operator&lt; (r: const rational &amp; ) bool</text>
 <text x="141033" y="5091" fill="#000000" font-family="Arial" font-size="10">+ operator&lt; (i: I ) bool</text>
 <text x="141033" y="5107" fill="#000000" font-family="Arial" font-size="10">+ operator== (r: const rational &amp; ) bool</text>
 <text x="141033" y="5123" fill="#000000" font-family="Arial" font-size="10">+ operator== (i: I ) bool</text>
 <text x="141033" y="5139" fill="#000000" font-family="Arial" font-size="10">+ operator&gt; (i: I ) bool</text>
 <text x="141033" y="5155" fill="#000000" font-family="Arial" font-size="10">- den_ () I</text>
 <text x="141033" y="5171" fill="#000000" font-family="Arial" font-size="10">- num_ () I</text>
 <polygon points="141312,4949 141312,4861 141504,4861 141504,4949 141312,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="141312,4885 141504,4885" stroke="#0000ff" fill="none"/>
 <polyline points="141312,4909 141504,4909" stroke="#0000ff" fill="none"/>
 <text x="141334" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::rw_mutex::read_lock</text>
 <text x="141320" y="4899" fill="#000000" font-family="Arial" font-size="10">- sem: rw_mutex &amp;</text>
 <text x="141320" y="4923" fill="#000000" font-family="Arial" font-size="10">+ read_lock (m: rw_mutex &amp; ) </text>
 <text x="141320" y="4939" fill="#000000" font-family="Arial" font-size="10">+ ~read_lock () </text>
 <polygon points="141522,4941 141522,4869 141602,4869 141602,4941 141522,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="141522,4893 141602,4893" stroke="#0000ff" fill="none"/>
 <polyline points="141522,4917 141602,4917" stroke="#0000ff" fill="none"/>
 <text x="141530" y="4883" fill="#000000" font-family="Arial" font-size="10">result_type</text>
 <text x="141560" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="141560" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="141620,5045 141620,4765 141832,4765 141832,5045 141620,5045" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="141620,4789 141832,4789" stroke="#0000ff" fill="none"/>
 <polyline points="141620,4877 141832,4877" stroke="#0000ff" fill="none"/>
 <text x="141684" y="4779" fill="#000000" font-family="Arial" font-size="10">ring::rw_mutex</text>
 <text x="141628" y="4803" fill="#000000" font-family="Arial" font-size="10">- canRead: std::condition_variable</text>
 <text x="141628" y="4819" fill="#000000" font-family="Arial" font-size="10">- canWrite: std::condition_variable</text>
 <text x="141628" y="4835" fill="#000000" font-family="Arial" font-size="10">- mutex: std::mutex</text>
 <text x="141628" y="4851" fill="#000000" font-family="Arial" font-size="10">- readers: std::atomic</text>
 <text x="141628" y="4867" fill="#000000" font-family="Arial" font-size="10">- writing: bool</text>
 <text x="141628" y="4891" fill="#000000" font-family="Arial" font-size="10">+ operator= () rw_mutex &amp;</text>
 <text x="141628" y="4907" fill="#000000" font-family="Arial" font-size="10">+ read () read_lock</text>
 <text x="141628" y="4923" fill="#000000" font-family="Arial" font-size="10">+ read_enter () void</text>
 <text x="141628" y="4939" fill="#000000" font-family="Arial" font-size="10">+ read_exit () void</text>
 <text x="141628" y="4955" fill="#000000" font-family="Arial" font-size="10">+ rw_mutex () </text>
 <text x="141628" y="4971" fill="#000000" font-family="Arial" font-size="10">+ rw_mutex () </text>
 <text x="141628" y="4987" fill="#000000" font-family="Arial" font-size="10">+ toString () std::string</text>
 <text x="141628" y="5003" fill="#000000" font-family="Arial" font-size="10">+ write () write_lock</text>
 <text x="141628" y="5019" fill="#000000" font-family="Arial" font-size="10">+ write_enter () void</text>
 <text x="141628" y="5035" fill="#000000" font-family="Arial" font-size="10">+ write_exit () void</text>
 <polygon points="141851,4981 141851,4829 142114,4829 142114,4981 141851,4981" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="141851,4853 142114,4853" stroke="#0000ff" fill="none"/>
 <polyline points="141851,4877 142114,4877" stroke="#0000ff" fill="none"/>
 <text x="141949" y="4843" fill="#000000" font-family="Arial" font-size="10">sample_buf</text>
 <text x="141980" y="4867" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="141859" y="4891" fill="#000000" font-family="Arial" font-size="10">+ buf_ () uint8_t *</text>
 <text x="141859" y="4907" fill="#000000" font-family="Arial" font-size="10">+ cap_ () size_t</text>
 <text x="141859" y="4923" fill="#000000" font-family="Arial" font-size="10">+ sample_buf () </text>
 <text x="141859" y="4939" fill="#000000" font-family="Arial" font-size="10">+ sample_buf (alloc: size_t , size: size_t ) </text>
 <text x="141859" y="4955" fill="#000000" font-family="Arial" font-size="10">+ size_ () size_t</text>
 <text x="141859" y="4971" fill="#000000" font-family="Arial" font-size="10">+ ~sample_buf () </text>
 <polygon points="142132,5069 142132,4741 142479,4741 142479,5069 142132,5069" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="142132,4765 142479,4765" stroke="#0000ff" fill="none"/>
 <polyline points="142132,4789 142479,4789" stroke="#0000ff" fill="none"/>
 <text x="142252" y="4755" fill="#000000" font-family="Arial" font-size="10">dev::secure_vector</text>
 <text x="142140" y="4779" fill="#000000" font-family="Arial" font-size="10">- m_data: std::vector</text>
 <text x="142140" y="4803" fill="#000000" font-family="Arial" font-size="10">+ clear () void</text>
 <text x="142140" y="4819" fill="#000000" font-family="Arial" font-size="10">+ operator= (_c: secure_vector const &amp; ) secure_vector &amp;</text>
 <text x="142140" y="4835" fill="#000000" font-family="Arial" font-size="10">+ ref () vector_ref</text>
 <text x="142140" y="4851" fill="#000000" font-family="Arial" font-size="10">+ secure_vector () </text>
 <text x="142140" y="4867" fill="#000000" font-family="Arial" font-size="10">+ secure_vector () </text>
 <text x="142140" y="4883" fill="#000000" font-family="Arial" font-size="10">+ swap (io_other: secure_vector &amp; ) void</text>
 <text x="142140" y="4899" fill="#000000" font-family="Arial" font-size="10">+ writable () std::vector &amp;</text>
 <text x="142140" y="4915" fill="#000000" font-family="Arial" font-size="10">+ ~secure_vector () </text>
 <text x="142140" y="4931" fill="#000000" font-family="Arial" font-size="10">+ empty () bool</text>
 <text x="142140" y="4947" fill="#000000" font-family="Arial" font-size="10">+ makeInsecure () std::vector const &amp;</text>
 <text x="142140" y="4963" fill="#000000" font-family="Arial" font-size="10">+ ref () vector_ref</text>
 <text x="142140" y="4979" fill="#000000" font-family="Arial" font-size="10">+ size () size_t</text>
 <text x="142140" y="4995" fill="#000000" font-family="Arial" font-size="10">+ secure_vector (_size: unsigned ) </text>
 <text x="142140" y="5011" fill="#000000" font-family="Arial" font-size="10">+ secure_vector (_size: unsigned , _item: T ) </text>
 <text x="142140" y="5027" fill="#000000" font-family="Arial" font-size="10">+ secure_vector (_c: std::vector const &amp; ) </text>
 <text x="142140" y="5043" fill="#000000" font-family="Arial" font-size="10">+ secure_vector (_c: vector_ref ) </text>
 <text x="142140" y="5059" fill="#000000" font-family="Arial" font-size="10">+ secure_vector (_c: vector_ref ) </text>
 <polygon points="142497,4941 142497,4869 142560,4869 142560,4941 142497,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="142497,4893 142560,4893" stroke="#0000ff" fill="none"/>
 <polyline points="142497,4917 142560,4917" stroke="#0000ff" fill="none"/>
 <text x="142505" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::set</text>
 <text x="142526" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="142526" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="142578,4941 142578,4869 142734,4869 142734,4941 142578,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="142578,4893 142734,4893" stroke="#0000ff" fill="none"/>
 <polyline points="142578,4917 142734,4917" stroke="#0000ff" fill="none"/>
 <text x="142586" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::RingBufferPool::set</text>
 <text x="142654" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="142654" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="142752,4949 142752,4861 143064,4861 143064,4949 142752,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="142752,4885 143064,4885" stroke="#0000ff" fill="none"/>
 <polyline points="142752,4925 143064,4925" stroke="#0000ff" fill="none"/>
 <text x="142760" y="4875" fill="#000000" font-family="Arial" font-size="10">DRing::Account::testAccountICEInitializationStatus</text>
 <text x="142760" y="4899" fill="#000000" font-family="Arial" font-size="10">- FAILURE= 1</text>
 <text x="142760" y="4915" fill="#000000" font-family="Arial" font-size="10">- SUCCESS</text>
 <text x="142906" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="143083,4949 143083,4861 143224,4861 143224,4949 143083,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="143083,4885 143224,4885" stroke="#0000ff" fill="none"/>
 <polyline points="143083,4925 143224,4925" stroke="#0000ff" fill="none"/>
 <text x="143127" y="4875" fill="#000000" font-family="Arial" font-size="10">timezone</text>
 <text x="143091" y="4899" fill="#000000" font-family="Arial" font-size="10">+ tz_dsttime: int</text>
 <text x="143091" y="4915" fill="#000000" font-family="Arial" font-size="10">+ tz_minuteswest: int</text>
 <text x="143151" y="4939" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="143242,4941 143242,4869 143296,4869 143296,4941 143242,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="143242,4893 143296,4893" stroke="#0000ff" fill="none"/>
 <polyline points="143242,4917 143296,4917" stroke="#0000ff" fill="none"/>
 <text x="143262" y="4883" fill="#000000" font-family="Arial" font-size="10">tm</text>
 <text x="143267" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="143267" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="143315,4941 143315,4869 143616,4869 143616,4941 143315,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="143315,4893 143616,4893" stroke="#0000ff" fill="none"/>
 <polyline points="143315,4917 143616,4917" stroke="#0000ff" fill="none"/>
 <text x="143323" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::other_backend::type</text>
 <text x="143463" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="143463" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="143634,4941 143634,4869 143981,4869 143981,4941 143634,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="143634,4893 143981,4893" stroke="#0000ff" fill="none"/>
 <polyline points="143634,4917 143981,4917" stroke="#0000ff" fill="none"/>
 <text x="143642" y="4883" fill="#000000" font-family="Arial" font-size="10">boost::multiprecision::detail::number_from_backend::type</text>
 <text x="143805" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="143805" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="143999,4941 143999,4869 144078,4869 144078,4941 143999,4941" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="143999,4893 144078,4893" stroke="#0000ff" fill="none"/>
 <polyline points="143999,4917 144078,4917" stroke="#0000ff" fill="none"/>
 <text x="144007" y="4883" fill="#000000" font-family="Arial" font-size="10">ring::vector</text>
 <text x="144036" y="4907" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <text x="144036" y="4931" fill="#000000" font-family="Arial" font-size="10" xml:space='preserve'> </text>
 <polygon points="144096,5221 144096,4589 144421,4589 144421,5221 144096,5221" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="144096,4613 144421,4613" stroke="#0000ff" fill="none"/>
 <polyline points="144096,4653 144421,4653" stroke="#0000ff" fill="none"/>
 <text x="144217" y="4603" fill="#000000" font-family="Arial" font-size="10">dev::vector_ref</text>
 <text x="144104" y="4627" fill="#000000" font-family="Arial" font-size="10">- m_count: size_t</text>
 <text x="144104" y="4643" fill="#000000" font-family="Arial" font-size="10">- m_data: _T *</text>
 <text x="144104" y="4667" fill="#000000" font-family="Arial" font-size="10">+ begin () _T *</text>
 <text x="144104" y="4683" fill="#000000" font-family="Arial" font-size="10">+ cleanse () void</text>
 <text x="144104" y="4699" fill="#000000" font-family="Arial" font-size="10">+ end () _T *</text>
 <text x="144104" y="4715" fill="#000000" font-family="Arial" font-size="10">+ operator[] (_i: size_t ) _T &amp;</text>
 <text x="144104" y="4731" fill="#000000" font-family="Arial" font-size="10">+ reset () void</text>
 <text x="144104" y="4747" fill="#000000" font-family="Arial" font-size="10">+ retarget (_d: _T *, _s: size_t ) void</text>
 <text x="144104" y="4763" fill="#000000" font-family="Arial" font-size="10">+ retarget (_t: std::vector const &amp; ) void</text>
 <text x="144104" y="4779" fill="#000000" font-family="Arial" font-size="10">+ static_assert (std::is_pod::value) </text>
 <text x="144104" y="4795" fill="#000000" font-family="Arial" font-size="10">+ vector_ref () </text>
 <text x="144104" y="4811" fill="#000000" font-family="Arial" font-size="10">+ vector_ref (_data: _T *, _count: size_t ) </text>
 <text x="144104" y="4827" fill="#000000" font-family="Arial" font-size="10">+ vector_ref (_data: std::conditional::type ) </text>
 <text x="144104" y="4843" fill="#000000" font-family="Arial" font-size="10">+ vector_ref (_data: std::conditional::type ) </text>
 <text x="144104" y="4859" fill="#000000" font-family="Arial" font-size="10">+ vector_ref (_data: std::conditional::type ) </text>
 <text x="144104" y="4875" fill="#000000" font-family="Arial" font-size="10">+ overlapsWith (_t: vector_ref ) bool</text>
 <text x="144104" y="4891" fill="#000000" font-family="Arial" font-size="10">+ begin () _T const *</text>
 <text x="144104" y="4907" fill="#000000" font-family="Arial" font-size="10">+ contentsEqual (_c: std::vector const &amp; ) bool</text>
 <text x="144104" y="4923" fill="#000000" font-family="Arial" font-size="10">+ copyTo (_t: vector_ref ) void</text>
 <text x="144104" y="4939" fill="#000000" font-family="Arial" font-size="10">+ count () size_t</text>
 <text x="144104" y="4955" fill="#000000" font-family="Arial" font-size="10">+ cropped (_begin: size_t , _count: size_t ) vector_ref</text>
 <text x="144104" y="4971" fill="#000000" font-family="Arial" font-size="10">+ cropped (_begin: size_t ) vector_ref</text>
 <text x="144104" y="4987" fill="#000000" font-family="Arial" font-size="10">+ data () _T *</text>
 <text x="144104" y="5003" fill="#000000" font-family="Arial" font-size="10">+ empty () bool</text>
 <text x="144104" y="5019" fill="#000000" font-family="Arial" font-size="10">+ end () _T const *</text>
 <text x="144104" y="5035" fill="#000000" font-family="Arial" font-size="10">+ next () vector_ref</text>
 <text x="144104" y="5051" fill="#000000" font-family="Arial" font-size="10">+ operator bool () </text>
 <text x="144104" y="5067" fill="#000000" font-family="Arial" font-size="10">+ operator dev::vector_ref () </text>
 <text x="144104" y="5083" fill="#000000" font-family="Arial" font-size="10">+ operator dev::vector_ref () </text>
 <text x="144104" y="5099" fill="#000000" font-family="Arial" font-size="10">+ operator!= (_cmp: vector_ref const &amp; ) bool</text>
 <text x="144104" y="5115" fill="#000000" font-family="Arial" font-size="10">+ operator== (_cmp: vector_ref const &amp; ) bool</text>
 <text x="144104" y="5131" fill="#000000" font-family="Arial" font-size="10">+ operator[] (_i: size_t ) _T const &amp;</text>
 <text x="144104" y="5147" fill="#000000" font-family="Arial" font-size="10">+ populate (_t: vector_ref ) void</text>
 <text x="144104" y="5163" fill="#000000" font-family="Arial" font-size="10">+ size () size_t</text>
 <text x="144104" y="5179" fill="#000000" font-family="Arial" font-size="10">+ toBytes () std::vector</text>
 <text x="144104" y="5195" fill="#000000" font-family="Arial" font-size="10">+ toString () std::string</text>
 <text x="144104" y="5211" fill="#000000" font-family="Arial" font-size="10">+ toVector () std::vector</text>
 <polygon points="144439,4949 144439,4861 144633,4861 144633,4949 144439,4949" stroke="#0000ff" fill="#ffffff"/>
 <polyline points="144439,4885 144633,4885" stroke="#0000ff" fill="none"/>
 <polyline points="144439,4909 144633,4909" stroke="#0000ff" fill="none"/>
 <text x="144461" y="4875" fill="#000000" font-family="Arial" font-size="10">ring::rw_mutex::write_lock</text>
 <text x="144447" y="4899" fill="#000000" font-family="Arial" font-size="10">- sem: rw_mutex &amp;</text>
 <text x="144447" y="4923" fill="#000000" font-family="Arial" font-size="10">+ write_lock (m: rw_mutex &amp; ) </text>
 <text x="144447" y="4939" fill="#000000" font-family="Arial" font-size="10">+ ~write_lock () </text>
</svg>
